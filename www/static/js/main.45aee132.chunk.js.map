{"version":3,"sources":["Components/ChartModel.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["normalizeConfig","config","lines","l","JSON","parse","stringify","_ids","ids","split","colors","_colors","names","_names","units","_units","i","length","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","parseFloat","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","f","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","ChartModel","socket","options","onHashChange","lastHash","window","location","hash","analyseAndLoadConfig","onPresetUpdate","obj","preset","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","native","data","updateInterval","clearInterval","live","zoomData","stopLive","setInterval","readData","Object","assign","updateTimeout","this","seriesData","ticks","liveInterval","navOptions","sessionId","presetSubscribed","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","onHashInstalled","addEventListener","getSystemConfig","then","systemConfig","common","query","Utils","parseQuery","search","hQuery","toString","replace","e","_config","startsWith","includes","getObject","type","console","error","isFloatComma","lang","language","unsubscribeObject","subscribeObject","log","Date","toISOString","readOnZoomTimeout","removeEventListener","cb","index","step","end","start","_now","option","range","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","getStartStop","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","Promise","resolve","catch","err","_readObject","chartType","en","readOneChart","_readOneLine","_readData","splice","getState","state","upperValue","lowerValue","readMarkings","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","padStart","canvasCalcTextWidth","calcTextWidth","fontSize","fontFamily","context","document","createElement","getContext","font","metrics","measureText","ceil","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","sort","changed","clear","getOptions","xAxis","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","style","display","chart","moved","lastX","offsetX","padLeft","diff","xMax","xMin","chartWidth","padRight","shift","round","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","preventDefault","touches","originalEvent","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","React","createRef","divRef","yAxis","moment","locale","I18n","getLanguage","yAxisIndex","theme","colorCount","oneLine","commonYAxis","cfg","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","areaStyle","opacity","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","date","format","withSeconds","getSeconds","withTime","x_labels_color","series","yMin","yMax","isNaN","yaxe","yticks","yFormatter","y_labels_color","y_ticks_color","forEach","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","distance","textStyle","fontStyle","line","withUnit","toFixed","params","filter","param","seriesName","seriesIndex","join","themeType","titlePos","parts","trim","getSeries","getYAxis","getXAxis","backgroundColor","noAnimation","title","titleSize","titleColor","textVerticalAlign","bottom","textAlign","left","right","top","grid","bg_custom","tooltip","trigger","renderTooltip","axisPointer","toolbox","getMarkings","ser","minTick","maxTick","wMin","wMax","legend","xAxisHeight","legBg","legColor","axis","updateChart","getZr","_iobInstalled","_theme","ref","echarts","notMerge","lazyUpdate","opts","renderer","onEvents","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","divExportButton","base64","getDataURL","pixelRatio","window_bg","linkSource","downloadLink","body","appendChild","href","target","download","click","forceUpdate","background","borderColor","border_color","borderStyle","border_style","padding","renderExportButton","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","paddingTop","App","themeInstance","createTheme","connected","themeName","getThemeName","getThemeType","noBackground","noBG","progressRef","translations","require","ownTranslations","keys","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","chartData","onError","showError","onReading","reading","showProgress","onUpdate","isShow","destroy","palette","errorText","onClose","getConfig","MD5","root","default","primary","key","renderError","withTheme","Boolean","hostname","match","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45aee132.chunk.js","sourcesContent":["import Utils from '@iobroker/adapter-react/Components/Utils';\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = JSON.parse(JSON.stringify(config.lines));\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset = parseFloat(config.l[j].yOffset) || 0;\r\n            config.l[j].offset  = parseFloat(config.l[j].offset)  || 0;\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n\r\n        this.seriesData       = [];\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n\r\n        this.navOptions       = {};\r\n\r\n        //this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n\r\n        this.lastHash         = window.location.hash;\r\n\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!config) {\r\n            this.onHashInstalled = true;\r\n            window.addEventListener('hashchange', this.onHashChange, false);\r\n        }\r\n\r\n        this.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                return this.analyseAndLoadConfig(config);\r\n            });\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = config;\r\n            }\r\n        } else {\r\n            const query = Utils.parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = Utils.parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                // search ID and range\r\n                const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                if (hQuery.noLoader !== undefined) {\r\n                    _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                }\r\n                if (query.noLoader !== undefined) {\r\n                    _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                }\r\n                this.config = normalizeConfig(_config);\r\n                //console.log(this.config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if (!this.preset.startsWith('echarts.') || !this.preset.startsWith('flot.') || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    this.readData();\r\n                    // subscribe on preset changes\r\n                    if (this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdate);\r\n                    }\r\n                    if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                });\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange = () => {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate = (id, obj) => {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        /*if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }*/\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChange, false);\r\n        this.onHashInstalled = false;\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // if less 2000.01.01 00:00:00\r\n                        //if (values[i].ts < 946681200000) {\r\n                        //    values[i].ts = values[i].ts * 1000;\r\n                        //}\r\n\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0][0] > option.start) {\r\n                            _series.unshift({value: [option.start, null]});\r\n                        }\r\n                        if (_series[_series.length - 1][0] < option.end) {\r\n                            _series.push({value: [option.end, null]});\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null]});\r\n                        _series.push({value: [option.end,   null]});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error('[ChartModel] ' + err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id);\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(`[ChartModel] ${e}`))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    /*subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };*/\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nconst THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    divExportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: 300,\r\n            chartWidth: 500,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.chart = {yAxis: []};\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.getOptions(props);\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            chartInstance.setOption(this.option, changed);\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    convertData(props, i, yAxisIndex) {\r\n        props = props || this.props;\r\n        const values = props.data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(props, theme) {\r\n        props = props || this.props;\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return props.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'start' : undefined,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(props, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          oneLine.thickness || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                cfg.areaStyle = {\r\n                    color: color,\r\n                    opacity: parseFloat(oneLine.fill),\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis(props) {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !props.config.grid_hideX,\r\n                    lineStyle: props.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : props.config.grid_color ? {\r\n                        color: props.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(props.config.l[0].xticks, 10) || undefined,\r\n                position: props.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: props.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (props.config.x_ticks_color ? {color: props.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    formatter: (value, index) => {\r\n                        const date = new Date(value);\r\n                        if (props.config.timeFormat) {\r\n                            return moment(date).format(props.config.timeFormat).replace('<br/>', '\\n');\r\n                        } else\r\n                        if (this.chart.withSeconds) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n                        } else if (this.chart.withTime) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n                        } else {\r\n                            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n                        }\r\n                    },\r\n                    color: props.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (props.config.x_labels_color || undefined),\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(props, theme, series) {\r\n        props = props || this.props;\r\n\r\n        return props.config.l.map((oneLine, i) => {\r\n            if (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (yMin > 0) {\r\n                        yMin = 0;\r\n                    } else {\r\n                        if (diff > 5000) {\r\n                            yMin = Math.floor(yMin / 1000) * 1000;\r\n                        } else if (diff > 200) {\r\n                            yMin = Math.floor(yMin / 100) * 100;\r\n                        } else if (diff > 30) {\r\n                            yMin = Math.floor(yMin / 10) * 10;\r\n                        } else if (diff > 10) {\r\n                            yMin = Math.floor(yMin);\r\n                        } else if (diff > 1) {\r\n                            yMin = Math.floor(yMin * 10) / 10;\r\n                        }\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (props.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                        'right' :\r\n                        (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !props.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, props, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (props.config.y_labels_color || undefined),\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (props.config.y_ticks_color ? {color: props.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(props, options) {\r\n        // fill markings\r\n        props.config.marks && props.config.marks.forEach(oneMark => {\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill),\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: oneMark.text || '',\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: oneMark.textOffset || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        data: []\r\n                    };\r\n                    series.markLine.data.push({yAxis: limitFloat});\r\n\r\n                    // if minimum not set\r\n                    let yMin = parseFloat(props.config.l[oneMark.lineId].min);\r\n                    if (isNaN(yMin)) {\r\n                        if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                            options.yAxis[0].min = limitFloat;\r\n                        }\r\n                    }\r\n                    let yMax = parseFloat(props.config.l[oneMark.lineId].min);\r\n                    if (isNaN(yMax)) {\r\n                        if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                            options.yAxis[0].max = limitFloat;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, props, withUnit) {\r\n        props = props || this.props;\r\n        if (props.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = props.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (props.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? props.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? props.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (props.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? props.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? props.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTooltip(props, params) {\r\n        const date = new Date(params[0].value[0]);\r\n\r\n        const values = params.filter(param => !param.seriesName.startsWith('__markings__')).map(param => {\r\n            let val = param.value[1] === null ?\r\n                'null' :\r\n                this.yFormatter(param.value[1], param.seriesIndex, props);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${props.config.l[param.seriesIndex].color}\">` +\r\n                `<div style=\"display: flex;\">${props.config.l[param.seriesIndex].name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\"><b>${val}</b>${param.value[1] !== null ? props.config.l[param.seriesIndex].unit : ''}</div>` +\r\n                `</div>`\r\n        });\r\n\r\n        const format = props.config.timeFormat || 'dddd, MMMM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${moment(date).format(format)}</b><br/>${values.join('<br/>')}`;\r\n    }\r\n\r\n    getOptions(props) {\r\n        props = props || this.props;\r\n        let theme = this.props.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.props.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = props.config && props.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(props.config, null, 2)}`);\r\n\r\n        let titlePos = {};\r\n        if (props.config.titlePos) {\r\n            props.config.titlePos.split(';').forEach(a => {\r\n                const parts = a.split(':');\r\n                titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n            });\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        const series = this.getSeries(props, theme);\r\n\r\n        if (props.config.start) {\r\n            if (this.chart.xMax < props.config.end) {\r\n                this.chart.xMax = props.config.end;\r\n            }\r\n            if (this.chart.xMin > props.config.start) {\r\n                this.chart.xMin = props.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(props, theme, series);\r\n        const xAxis = this.getXAxis(props);\r\n\r\n        const options = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !props.config.noAnimation && !props.config.noLoader,\r\n            title: {\r\n                text: props.config.title || '',\r\n                textStyle: {\r\n                    fontSize: props.config.titleSize ? parseInt(props.config.titleSize, 10) : undefined,\r\n                    color: props.config.titleColor || undefined\r\n                },\r\n                textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n                textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n                top:               titlePos.top  === 35 ? 5 : (titlePos.top === 50 ? '50%' : undefined),\r\n                left:              titlePos.left === 50 ? '50%' : (titlePos.left === 65 ? 15 : undefined),\r\n                bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n                right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n            },\r\n            grid: {\r\n                backgroundColor: props.config.bg_custom || 'transparent',\r\n                show: !!props.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: 40,\r\n            },\r\n            tooltip: props.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(props, params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            toolbox: false && (props.config.export === true || props.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    /*dataZoom: {\r\n                        yAxisIndex: 'none',\r\n                        title: props.t('Zoom'),\r\n                    },\r\n                    restore: {\r\n                        title: props.t('Restore')\r\n                    },*/\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series\r\n        };\r\n\r\n        this.getMarkings(props, options);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let minTick = this.yFormatter(options.yAxis[ser.yAxisIndex].min, i, props, true);\r\n            let maxTick = this.yFormatter(options.yAxis[ser.yAxisIndex].max, i, props, true);\r\n\r\n            const position = options.yAxis[ser.yAxisIndex].position;\r\n            if (position === 'off') {\r\n                return;\r\n            }\r\n            let wMin = calcTextWidth(minTick);\r\n            let wMax = calcTextWidth(maxTick);\r\n            if (position === 'left' || position === 'leftColor') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        options.grid.left = padLeft + 10;\r\n        options.grid.right = padRight + 10 + (props.config.export === true || props.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft = options.grid.left;\r\n        this.chart.padRight = options.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        options.legend = !props.config.legend || props.config.legend === 'none' ? undefined : {\r\n            data:   props.config.l.map(oneLine => oneLine.name),\r\n            show:   true,\r\n            left:   props.config.legend === 'nw' || props.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n            right:  props.config.legend === 'ne' || props.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n            top:    props.config.legend === 'nw' || props.config.legend === 'ne' ?  10 : undefined,\r\n            bottom: props.config.legend === 'sw' || props.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n            backgroundColor: props.config.legBg || undefined,\r\n            textStyle: {\r\n                color: props.config.legColor || undefined\r\n            },\r\n        };\r\n\r\n        if (!props.config.grid_color) {\r\n            options.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            options.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${this.chart.xMin}, max: ${this.chart.xMax}}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: this.chart.xMin, end: this.chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = this.chart.xMin;\r\n            this.option.xAxis[0].max = this.chart.xMax;\r\n\r\n            this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: this.chart.xMin,\r\n                    max: this.chart.xMax,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const chart = this.chart;\r\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n            chart.lastX = e.offsetX - chart.padLeft;\r\n            const diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            chart.xMin += shift;\r\n            chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        this.chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        let diff = this.chart.xMax - this.chart.xMin;\r\n        const width = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n        const x = e.offsetX - this.chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        this.chart.xMax += move * (1 - pos);\r\n        this.chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            this.chart.lastX = touches[touches.length - 1].pageX;\r\n            if (touches.length > 1) {\r\n                this.chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n            } else {\r\n                this.chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        e.preventDefault();\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const pageX = touches[touches.length - 1].pageX - this.chart.padLeft;\r\n        if (this.mouseDown) {\r\n            if (touches.length > 1) {\r\n                // zoom\r\n                const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                if (this.chart.lastWidth !== null && fingerWidth !== this.chart.lastWidth) {\r\n                    let diff = this.chart.xMax - this.chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > this.chart.lastWidth ? 1.1 : 0.9;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - this.chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - this.chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    this.chart.xMax += move * (1 - pos);\r\n                    this.chart.xMin -= move * pos;\r\n\r\n                    this.setNewRange();\r\n                }\r\n                this.chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = this.chart.lastX - pageX;\r\n                const diff  = this.chart.xMax - this.chart.xMin;\r\n                const chartWidth = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                this.chart.xMin += shift;\r\n                this.chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        this.chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            this.zr.on('mousedown', this.onMouseDown);\r\n\r\n            this.zr.on('mouseup', this.onMouseUp);\r\n\r\n            this.zr.on('mousewheel', this.onMouseWheel);\r\n\r\n            this.zr.on('touchstart', this.onTouchStart);\r\n\r\n            this.zr.on('touchend', this.onTouchEnd);\r\n\r\n            this.zr.on('touchmove', this.onTouchMove);\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n            this.zr.off('mousedown', this.onMouseDown);\r\n            this.zr.off('mouseup', this.onMouseUp);\r\n            this.zr.off('mousewheel', this.onMouseWheel);\r\n            if (this.zr && this.zr._mousemove) {\r\n                this.zr._mousemove = false;\r\n                this.zr.off('mousemove', this.onMouseMove);\r\n            }\r\n            this.zr.off('touchstart', this.onTouchStart);\r\n            this.zr.off('touchend', this.onTouchEnd);\r\n            this.zr.off('touchmove', this.onTouchMove);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                const chartInstance = this.echartsReact.getEchartsInstance();\r\n                console.log(chartInstance._theme);\r\n            }\r\n            this.option = this.option || this.getOptions();\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <Fab\r\n                ref={ this.divExportButton }\r\n                size=\"small\"\r\n                color=\"default\"\r\n                style={{display: 'none'}}\r\n                className={this.props.classes.resetButton}\r\n                title={I18n.t('Reset pan and zoom')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        const base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2,\r\n                            backgroundColor: this.props.config.window_bg || '#FFF',\r\n                        });\r\n\r\n                        const linkSource = `data:image/png;base64,${base64}`;\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = linkSource;\r\n                        downloadLink.target = '_self';\r\n                        downloadLink.download = 'chart.svg';\r\n                        downloadLink.click();\r\n                    }\r\n                }}\r\n            >\r\n                <IconReset className={this.props.classes.resetButtonIcon}/>\r\n            </Fab>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? 'calc(100% - ' + ((borderWidth + borderPadding) * 2 + 1) + 'px' : undefined,\r\n                height:         borderWidth || borderPadding ? 'calc(100% - ' + (borderWidth + borderPadding) * 2 + 'px' : undefined,\r\n                background:     this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.renderChart() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    socket: PropTypes.object,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            noLoader:   Utils.parseQuery(window.location.search).noLoader || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: Utils.parseQuery(window.location.search).noBG || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noBG || false,\r\n        };\r\n        this.divRef = React.createRef();\r\n        this.progressRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n\r\n                        this.chartData = new ChartModel(this.socket);\r\n                        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n                        this.chartData.onReading(reading => this.showProgress(reading));\r\n                        this.chartData.onUpdate(seriesData => this.setState({seriesData}, () => this.showProgress(false)));\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: this.state.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}