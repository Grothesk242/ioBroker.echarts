{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","module","exports","constructor","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","ticks","liveInterval","navOptions","sessionId","updateInterval","presetSubscribed","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","getSystemConfig","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","e","_config","clearInterval","startsWith","includes","getObject","obj","native","type","console","error","stringify","isFloatComma","lang","language","live","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","setNewRange","log","Date","toISOString","readOnZoomTimeout","destroy","removeEventListener","onUpdate","cb","onReading","onError","getConfig","setConfig","getStartStop","index","step","end","start","_now","option","range","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","readOneChart","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","exact","last","Promise","resolve","catch","err","_readObject","_readOneLine","chartType","en","_readData","readTicks","splice","readValue","getState","state","readMarkings","upperValue","lowerValue","time","plusOrMinus","isOffsetInMinutes","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","padStart","moment","themeType","calcTextWidth","Error","chart","yAxis","setThemeName","getHelperChartData","convertData","yAxisIndex","xMin","xMax","getSeries","theme","colorCount","oneLine","commonYAxis","cfg","xAxisIndex","showSymbol","points","hoverAnimation","smooth","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","areaStyle","opacity","getXAxis","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","xFormatter","x_labels_color","getYAxis","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_ticks_color","getMarkings","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","distance","textStyle","fontStyle","fontSize","line","withUnit","interpolated","toFixed","round","isXLabelHasBreak","withSeconds","withTime","_index","date","format","getSeconds","getInterpolatedValue","k","y1","y2","renderTooltip","params","find","param","seriesIndex","filter","join","getLegend","xAxisHeight","legend","left","padLeft","right","padRight","top","bottom","backgroundColor","legBg","legColor","getTitle","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","getOption","xAxis","noAnimation","grid","bg_custom","tooltip","trigger","axisPointer","ser","cY","minTick","maxTick","wMin","wMax","axis","canvasCalcTextWidth","fontFamily","context","document","createElement","getContext","font","metrics","measureText","ChartView","React","Component","props","super","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","sort","changed","clear","chartOption","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","style","display","moved","lastX","offsetX","chartWidth","shift","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","preventDefault","touches","originalEvent","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","createRef","divRef","locale","I18n","getLanguage","ChartOption","componentDidMount","componentWillUnmount","UNSAFE_componentWillReceiveProps","updateChart","installEventHandlers","getZr","_iobInstalled","renderChart","ref","echarts","notMerge","lazyUpdate","opts","renderer","onEvents","rendered","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","renderResetButton","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","renderExportButton","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","downloadLink","body","appendChild","href","target","download","click","render","forceUpdate","background","borderColor","border_color","borderStyle","border_style","padding","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBackground","noBG","inEdit","edit","progressRef","translations","require","ownTranslations","keys","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","showError","ChartModel","reading","showProgress","isShow","palette","errorText","renderError","onClose","MD5","root","default","primary","key","withTheme","Boolean","hostname","match","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e6f096f.chunk.js","sourcesContent":["/**\r\n * Parse a query string into its parts.\r\n * Copied from @iobroker/adapter-react/Components/Utils\r\n * @param {string} query\r\n * @returns {Record<string, string | boolean | number>}\r\n */\r\nfunction parseQuery(query) {\r\n    query = (query || '').toString().replace(/^\\?/, '');\r\n    /** @type {Record<string, string | boolean | number>} */\r\n    const result = {};\r\n    query.split('&').forEach(part => {\r\n        part = part.trim();\r\n        if (part) {\r\n            const parts = part.split('=');\r\n            const attr = decodeURIComponent(parts[0]).trim();\r\n            if (parts.length > 1) {\r\n                result[attr] = decodeURIComponent(parts[1]);\r\n                if (result[attr] === 'true') {\r\n                    result[attr] = true;\r\n                } else if (result[attr] === 'false') {\r\n                    result[attr] = false;\r\n                } else {\r\n                    const f = parseFloat(result[attr]);\r\n                    if (f.toString() === result[attr]) {\r\n                        result[attr] = f;\r\n                    }\r\n                }\r\n            } else {\r\n                result[attr] = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = config.lines;\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate (from flot)\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\r\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\r\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\r\n\r\n        this.seriesData       = [];\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n\r\n        this.navOptions       = {};\r\n\r\n        //this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!this.serverSide) {\r\n            this.lastHash         = window.location.hash;\r\n\r\n            if (!config) {\r\n                this.onHashInstalled = true;\r\n                this.onHashChangeBound = this.onHashChange.bind(this);\r\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\r\n            }\r\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\r\n        }\r\n\r\n        this.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                return this.analyseAndLoadConfig(config);\r\n            });\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else {\r\n            const query = parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                // search ID and range\r\n                const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                if (hQuery.noLoader !== undefined) {\r\n                    _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                }\r\n                if (query.noLoader !== undefined) {\r\n                    _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                }\r\n                this.config = normalizeConfig(_config);\r\n                //console.log(this.config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config          = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    this.readData();\r\n\r\n                    // subscribe on preset changes\r\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\r\n                    }\r\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                });\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange() {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate(id, obj) {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        /*if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }*/\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        if (!this.serverSide) {\r\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\r\n            this.onHashInstalled = false;\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getSystemConfig() {\r\n        return this.systemConfig;\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0].value[0] > option.start) {\r\n                            _series.unshift({value: [option.start, null], exact: false});\r\n                        }\r\n                        const last = _series[_series.length - 1];\r\n                        if (last.value[0] < option.end) {\r\n                            if (this.config.l[index].validTime) {\r\n                                // If last value is not older than X seconds, assume it is still the same\r\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\r\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\r\n                                } else {\r\n                                    _series.push({value: [option.end, null], exact: false});\r\n                                }\r\n                            } else {\r\n                                _series.push({value: [option.end, null], exact: false});\r\n                            }\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null], exact: false});\r\n                        _series.push({value: [option.end,   null], exact: false});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error('[ChartModel] ' + err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id);\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(`[ChartModel] ${e}`))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    /*subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };*/\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        console.log('Read till ' + new Date(this.now));\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ChartModel;\r\n","const THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nclass ChartOption {\r\n    constructor(moment, themeType, calcTextWidth, config) {\r\n        this.moment = moment;\r\n        if (!this.moment) {\r\n            throw new Error('moment must be set and initialized');\r\n        }\r\n\r\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\r\n        this.calcTextWidth = calcTextWidth;\r\n        this.themeType = themeType || 'light';\r\n        this.chart = {yAxis: []};\r\n    }\r\n\r\n    setThemeName(themeType) {\r\n        this.themeType = themeType || 'light';\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    getHelperChartData() {\r\n        return this.chart;\r\n    }\r\n\r\n    convertData(data, i, yAxisIndex) {\r\n        const values = data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(data, theme) {\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return this.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'end' : undefined,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(data, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          oneLine.thickness || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                cfg.areaStyle = {\r\n                    color: color,\r\n                    opacity: parseFloat(oneLine.fill),\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis() {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.config.grid_hideX,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\r\n                        color: this.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\r\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    formatter: this.xFormatter.bind(this),\r\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(theme, series) {\r\n        return this.config.l.map((oneLine, i) => {\r\n            if (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (yMin > 0) {\r\n                        yMin = 0;\r\n                    } else {\r\n                        if (diff > 25000) {\r\n                            yMin = Math.floor(yMin / 10000) * 10000;\r\n                        } else if (diff > 5000) {\r\n                            yMin = Math.floor(yMin / 1000) * 1000;\r\n                        } else if (diff > 200) {\r\n                            yMin = Math.floor(yMin / 100) * 100;\r\n                        } else if (diff > 30) {\r\n                            yMin = Math.floor(yMin / 10) * 10;\r\n                        } else if (diff > 10) {\r\n                            yMin = Math.floor(yMin);\r\n                        } else if (diff > 1) {\r\n                            yMin = Math.floor(yMin * 10) / 10;\r\n                        }\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 25000) {\r\n                        yMax = Math.ceil(yMax / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                            'right' :\r\n                            (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !this.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(options) {\r\n        // fill markings\r\n        this.config.marks && this.config.marks.forEach(oneMark => {\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill),\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: oneMark.text || '',\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: (-1 * oneMark.textOffset) || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        data: []\r\n                    };\r\n                    series.markLine.data.push({yAxis: limitFloat});\r\n\r\n                    // if minimum not set\r\n                    let yMin = parseFloat(this.config.l[oneMark.lineId].min);\r\n                    if (isNaN(yMin)) {\r\n                        if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                            options.yAxis[0].min = limitFloat;\r\n                        }\r\n                    }\r\n                    let yMax = parseFloat(this.config.l[oneMark.lineId].min);\r\n                    if (isNaN(yMax)) {\r\n                        if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                            options.yAxis[0].max = limitFloat;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, withUnit, interpolated) {\r\n        if (this.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = this.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (this.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (interpolated) {\r\n                val = Math.round(val * 10000) / 10000;\r\n            }\r\n\r\n            if (this.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    isXLabelHasBreak() {\r\n        if (this.config.timeFormat) {\r\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return false;\r\n        } else if (this.chart.withTime) {\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    xFormatter(value, _index) {\r\n        const date = new Date(value);\r\n        if (this.config.timeFormat) {\r\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n        } else if (this.chart.withTime) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n        } else {\r\n            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n        }\r\n    }\r\n\r\n    // result.val === null => start and end are null\r\n    // result === null => no start or no end\r\n    getInterpolatedValue(i, ts, type) {\r\n        const data = this.option.series[i].data;\r\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\r\n            return null;\r\n        }\r\n\r\n        for (let k = 0; k < data.length - 1; k++) {\r\n            if (data[k].value[0] === ts) {\r\n                // Calculate\r\n                return {exact: true, val: data[k].value[1]};\r\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\r\n                const y1 = data[k].value[1];\r\n                const y2 = data[k + 1].value[1];\r\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\r\n                    return {exact: false, val: null};\r\n                }\r\n                if (type === 'boolean') {\r\n                    return {exact: false, val: y1};\r\n                }\r\n\r\n                // interpolate\r\n                const diff = data[k + 1].value[0] - data[k].value[0];\r\n                const kk = (data[k + 1].value[0] - ts) / diff;\r\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\r\n            }\r\n        }\r\n        return {exact: false, val: null};\r\n    }\r\n\r\n    renderTooltip(params) {\r\n        const ts = params[0].value[0];\r\n        const date = new Date(ts);\r\n\r\n        const values = this.option.series.map((line, i) => {\r\n            const p = params.find(param => param.seriesIndex === i);\r\n            let interpolated;\r\n            if (p) {\r\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\r\n            }\r\n\r\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type);\r\n            if (!interpolated) {\r\n                return '';\r\n            }\r\n            const val = interpolated.val === null ?\r\n                'null' :\r\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\r\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\r\n                `</div>`;\r\n        });\r\n\r\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\r\n    }\r\n\r\n    getLegend(xAxisHeight) {\r\n        return !this.config.legend || this.config.legend === 'none' ? undefined : {\r\n            data:   this.config.l.map(oneLine => oneLine.name),\r\n            show:   true,\r\n            left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n            right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n            top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  10 : undefined,\r\n            bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n            backgroundColor: this.config.legBg || undefined,\r\n            textStyle: {\r\n                color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n        }\r\n    }\r\n\r\n    getTitle(xAxisHeight) {\r\n        if (!this.config.title) {\r\n            return undefined;\r\n        }\r\n        let titlePos = {};\r\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\r\n            const parts = a.split(':');\r\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n        });\r\n\r\n        return {\r\n            text: this.config.title,\r\n            textStyle: {\r\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\r\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n            top:               titlePos.top  === 35 ? 5        : (titlePos.top   === 50 ? '50%'   : undefined),\r\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\r\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n        };\r\n    }\r\n\r\n    getOption(data, config) {\r\n        if (config) {\r\n            this.config = JSON.parse(JSON.stringify(config));\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        let theme = this.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = this.config && this.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\r\n\r\n        const series = this.getSeries(data, theme);\r\n\r\n        if (this.config.start) {\r\n            if (this.chart.xMax < this.config.end) {\r\n                this.chart.xMax = this.config.end;\r\n            }\r\n            if (this.chart.xMin > this.config.start) {\r\n                this.chart.xMin = this.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(theme, series);\r\n        const xAxis = this.getXAxis();\r\n\r\n        const option = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !this.config.noAnimation && !this.config.noLoader,\r\n            grid: {\r\n                backgroundColor: this.config.bg_custom || 'transparent',\r\n                show: !!this.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: this.isXLabelHasBreak() ? 40 : 24,\r\n            },\r\n            tooltip: this.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,*/\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series\r\n        };\r\n\r\n        this.getMarkings(option);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let yAxis = option.yAxis[ser.yAxisIndex];\r\n            if (!yAxis) {\r\n                // seems this axis is defined something else\r\n                const cY = this.config.l[ser.yAxisIndex].commonYAxis;\r\n                if (cY !== undefined) {\r\n                    yAxis = option.yAxis[cY];\r\n                } else {\r\n                    console.log('Cannot find Y axis for line ' + i);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let minTick = this.yFormatter(yAxis.min, i, true);\r\n            let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\r\n\r\n            const position = yAxis.position;\r\n            if (position === 'off' || yAxis.axisLabel.color === 'rgba(0,0,0,0)') {\r\n                return;\r\n            }\r\n            let wMin = this.calcTextWidth(minTick) + 4;\r\n            let wMax = this.calcTextWidth(maxTick) + 4;\r\n            if (position === 'left' || position === 'leftColor') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        option.grid.left = padLeft + 10;\r\n        option.grid.right = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft = option.grid.left;\r\n        this.chart.padRight = option.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        option.legend = this.getLegend(xAxisHeight);\r\n        option.title  = this.getTitle(xAxisHeight);\r\n\r\n        if (!this.config.grid_color) {\r\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        this.option = option;\r\n        return this.option;\r\n    }\r\n}\r\n\r\nmodule.exports = ChartOption;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\nimport {FaDownload as IconExport}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\n\r\nimport ChartOption from './ChartOption';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    exportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 5,\r\n        width: 20,\r\n        height: 20,\r\n        zIndex: 2,\r\n        opacity: 0.7,\r\n        cursor: 'pointer'\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: null,\r\n            chartWidth: null,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n\r\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.chartOption.getOption(props.data, props.config);\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            chartInstance.setOption(this.option, changed);\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.diff        = chart.xMax - chart.xMin;\r\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\r\n        chart.withSeconds = chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${chart.xMin}, max: ${chart.xMax}}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = chart.xMin;\r\n            this.option.xAxis[0].max = chart.xMax;\r\n\r\n            this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: chart.xMin,\r\n                    max: chart.xMax,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const chart = this.chartOption.getHelperChartData();\r\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n            chart.lastX = e.offsetX - chart.padLeft;\r\n            const diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            chart.xMin += shift;\r\n            chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        let diff = chart.xMax - chart.xMin;\r\n        const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n        const x = e.offsetX - chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        chart.xMax += move * (1 - pos);\r\n        chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            const chart = this.chartOption.getHelperChartData();\r\n            chart.lastX = touches[touches.length - 1].pageX;\r\n            if (touches.length > 1) {\r\n                chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n            } else {\r\n                chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        e.preventDefault();\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const chart = this.chartOption.getHelperChartData();\r\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\r\n        if (this.mouseDown) {\r\n            if (touches.length > 1) {\r\n                // zoom\r\n                const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\r\n                    let diff = chart.xMax - chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > chart.lastWidth ? 1.1 : 0.9;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    chart.xMax += move * (1 - pos);\r\n                    chart.xMin -= move * pos;\r\n\r\n                    this.setNewRange();\r\n                }\r\n                chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = chart.lastX - pageX;\r\n                const diff  = chart.xMax - chart.xMin;\r\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            this.zr.on('mousedown', this.onMouseDown);\r\n\r\n            this.zr.on('mouseup', this.onMouseUp);\r\n\r\n            this.zr.on('mousewheel', this.onMouseWheel);\r\n\r\n            this.zr.on('touchstart', this.onTouchStart);\r\n\r\n            this.zr.on('touchend', this.onTouchEnd);\r\n\r\n            this.zr.on('touchmove', this.onTouchMove);\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n            this.zr.off('mousedown', this.onMouseDown);\r\n            this.zr.off('mouseup', this.onMouseUp);\r\n            this.zr.off('mousewheel', this.onMouseWheel);\r\n            if (this.zr && this.zr._mousemove) {\r\n                this.zr._mousemove = false;\r\n                this.zr.off('mousemove', this.onMouseMove);\r\n            }\r\n            this.zr.off('touchstart', this.onTouchStart);\r\n            this.zr.off('touchend', this.onTouchEnd);\r\n            this.zr.off('touchmove', this.onTouchMove);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config);\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <IconExport\r\n                color={this.props.config.exportColor || 'default'}\r\n                className={this.props.classes.exportButton}\r\n                title={I18n.t('Save chart as svg')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        const base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2, // only for png\r\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\r\n                        });\r\n\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = base64;\r\n                        downloadLink.target = '_self';\r\n                        let name = '';\r\n                        if (this.props.config.l.length === 1) {\r\n                            name = this.props.config.l[0].name;\r\n                        } else {\r\n                            name = 'chart';\r\n                        }\r\n                        const option = this.option;\r\n                        const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\r\n                        downloadLink.download =\r\n                            `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\r\n                            `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.svg`;\r\n                        downloadLink.click();\r\n                    }\r\n                }}\r\n            />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? 'calc(100% - ' + ((borderWidth + borderPadding) * 2 + 1) + 'px' : undefined,\r\n                height:         borderWidth || borderPadding ? 'calc(100% - ' + (borderWidth + borderPadding) * 2 + 'px' : undefined,\r\n                background:     this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.state.chartHeight !== null ? this.renderChart() : null }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        const query     = Utils.parseQuery(window.location.search);\r\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            noLoader:   query.noLoader || queryHash.noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: query.noBG || queryHash.noBG || false,\r\n        };\r\n\r\n        this.inEdit = query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit === 'true' ||\r\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\r\n\r\n        this.divRef      = React.createRef();\r\n        this.progressRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n                        if (this.inEdit) {\r\n                            window.addEventListener('message', this.onReceiveMessage);\r\n                            if (window.self !== window.parent) {\r\n                                try {\r\n                                    window.parent.postMessage('chartReady');\r\n                                } catch (e) {\r\n                                    console.warn('Cannot send ready event to parent window');\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.createChartData();\r\n                        }\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    createChartData(config) {\r\n        this.chartData = new ChartModel(this.socket, config);\r\n        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n        this.chartData.onReading(reading => this.showProgress(reading));\r\n        this.chartData.onUpdate(seriesData => this.setState({seriesData}, () => this.showProgress(false)));\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data !== 'chartReady') {\r\n            try {\r\n                const config = JSON.parse(message.data);\r\n                if (!this.chartData) {\r\n                    this.createChartData(config);\r\n                } else {\r\n                    this.chartData.setConfig(config);\r\n                }\r\n            } catch (e) {\r\n                return console.log('Cannot parse ' + message.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: this.state.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}