{"version":3,"sources":["Components/ChartModel.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["deParam","params","coerce","obj","coerceTypes","replace","split","forEach","v","val","param","key","decodeURIComponent","i","keys","keysLast","length","test","shift","concat","isNaN","undefined","cur","Object","prototype","toString","call","push","hasOwnProperty","normalizeConfig","config","lines","l","JSON","parse","stringify","_ids","ids","colors","_colors","names","_names","units","_units","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","timeType","ChartModel","socket","onHashChange","lastHash","window","location","hash","analyseAndLoadConfig","onPresetUpdate","native","data","seriesData","onUpdateFunc","onStateChange","state","m","console","log","oid","parseFloat","oidl","vl","this","ticks","liveInterval","navOptions","subscribes","subscribed","sessionId","onReadingFunc","onErrorFunc","onHashInstalled","addEventListener","getSystemConfig","then","systemConfig","common","preset","query","Utils","parseQuery","search","_config","assign","getObject","lang","language","readData","presetSubscribed","subscribeObject","unsubscribeState","unsubscribeObject","removeEventListener","cb","index","step","end","start","_now","option","range","includes","monthRange","a","addTime","now","minusMonth","Date","setMonth","getMonth","Math","floor","getTime","zoomed","zMax","zMin","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","getStartStop","yOffset","getHistoryEx","res","warn","values","_series","value","ts","unshift","Promise","resolve","catch","err","error","type","chartType","e","en","readOneChart","_readOneLine","setTimeout","_readData","splice","getState","readValue","readMarkings","s","subscribeState","subscribeAll","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","padding2","num","ChartView","props","onResize","timerResize","clearTimeout","componentDidUpdate","chartHeight","chartWidth","echartsReact","React","createRef","divRef","chart","getEchartsInstance","chartInstance","clear","setOption","getOption","oneLine","cfg","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","fill","areaStyle","opacity","line","toFixed","titlePos","parts","trim","legend","show","options","backgroundColor","noAnimation","title","text","textStyle","fontSize","titleSize","titleColor","padding","textVerticalAlign","bottom","textAlign","left","right","top","grid","bg_custom","tooltip","trigger","formatter","date","yFormatter","seriesIndex","moment","format","join","axisPointer","xAxis","splitLine","grid_color","axisTick","alignWithLabel","axisLabel","withSeconds","getSeconds","withTime","x_labels_color","yAxis","boundaryGap","y_labels_color","toolbox","feature","saveAsImage","t","series","getSeries","axis","withReadData","readTimeout","diff","readHistory","updateChart","relativeRange","setState","mins","dontSave","localStorage","setItem","getMilliseconds","getZr","ref","echarts","notMerge","lazyUpdate","theme","themeType","style","opts","renderer","onEvents","rendered","installEventHandlers","LinearProgress","offsetHeight","offsetWidth","forceUpdate","className","classes","background","window_bg","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","App","themeInstance","createTheme","connected","reading","themeName","getThemeName","getThemeType","noBackground","noBG","translations","require","I18n","setTranslations","isIFrame","self","Connection","adapterName","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","isFloatComma","chartData","onError","showError","onReading","onUpdate","destroy","palette","errorText","onClose","getConfig","root","default","primary","getLanguage","renderError","position","withTheme","Boolean","hostname","match","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0122cd47.chunk.js","sourcesContent":["import Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = JSON.parse(JSON.stringify(config.lines));\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '%H:%M:%S %e.%m.%y';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config) {\r\n\r\n        this.socket = socket;\r\n\r\n        this.seriesData      = [];\r\n        this.ticks           = null;\r\n        this.liveInterval    = null;\r\n\r\n        this.navOptions      = {};\r\n\r\n        this.subscribes      = [];\r\n        this.subscribed      = false;\r\n        this.sessionId       = 1;\r\n\r\n        this.onUpdateFunc    = null;\r\n        this.onReadingFunc   = null;\r\n        this.onErrorFunc     = null;\r\n\r\n        this.lastHash = window.location.hash;\r\n\r\n        if (!config) {\r\n            this.onHashInstalled = true;\r\n            window.addEventListener('hashchange', this.onHashChange, false);\r\n        }\r\n\r\n        this.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                return this.analyseAndLoadConfig(config);\r\n            });\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = config;\r\n            }\r\n        } else {\r\n            const query = Utils.parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                // search ID and range\r\n                const _config = Object.assign(deParam((window.location.search || '').toString().replace(/^\\?/, ''), true), deParam((window.location.hash || '').toString().replace(/^#/, ''), true));\r\n                this.config = normalizeConfig(_config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.preset) {\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    this.config = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.systemConfig.useComma === true || this.systemConfig.useComma === 'true';\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.readData();\r\n                    // subscribe on preset changes\r\n                    if (this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdate);\r\n                    }\r\n                });\r\n        } else {\r\n            this.config.useComma = this.systemConfig.useComma === true || this.systemConfig.useComma === 'true';\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.readData();\r\n        }\r\n    }\r\n\r\n    onHashChange = () => {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate = (id, obj) => {\r\n        if (obj) {\r\n            this.config = normalizeConfig(obj.native.data);\r\n        } else {\r\n            this.config = normalizeConfig({});\r\n        }\r\n\r\n        // just copy data to force update\r\n        this.seriesData = JSON.parse(JSON.stringify(this.seriesData));\r\n        this.onUpdateFunc && this.onUpdateFunc(this.seriesData);\r\n    };\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n            this.presetSubscribed = null;\r\n        }\r\n        this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChange, false);\r\n        this.onHashInstalled = false;\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.config.zoomed) {\r\n            this.navOptions[index].end   = this.config.l[index].zMax;\r\n            this.navOptions[index].start = this.config.l[index].zMin;\r\n            return this.navOptions[index];\r\n        } else {\r\n            if (!step) {\r\n                if (this.config.timeType === 'static') {\r\n                    let startTime;\r\n                    let endTime;\r\n                    if (this.config.start_time !== undefined) {\r\n                        startTime = this.config.start_time.split(':').map(Number);\r\n                    } else {\r\n                        startTime = [0, 0];\r\n                    }\r\n\r\n                    if (this.config.end_time !== undefined) {\r\n                        endTime = this.config.end_time.split(':').map(Number);\r\n                    } else {\r\n                        endTime = [24, 0];\r\n                    }\r\n\r\n                    // offset is in seconds\r\n                    start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                    end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                    start = this.addTime(start, this.config.l[index].offset);\r\n                    end   = this.addTime(end,   this.config.l[index].offset);\r\n                } else {\r\n                    this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                    if (this.config.relativeEnd === 'now') {\r\n                        _now = new Date(this.now);\r\n                    } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                        const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                        const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'today') {\r\n                        _now = new Date(this.now);\r\n                        _now.setDate(_now.getDate() + 1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'weekUsa') {\r\n                        //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'weekEurope') {\r\n                        //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        // If\r\n                        if (_now.getDay() === 0) {\r\n                            _now.setDate(_now.getDate() + 1);\r\n                        } else {\r\n                            _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                        }\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'month') {\r\n                        _now = new Date(this.now);\r\n                        _now.setMonth(_now.getMonth() + 1);\r\n                        _now.setDate(1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'year') {\r\n                        _now = new Date(this.now);\r\n                        _now.setFullYear(_now.getFullYear() + 1);\r\n                        _now.setMonth(0);\r\n                        _now.setDate(1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    }\r\n\r\n                    this.config.range = this.config.range || '30m';\r\n\r\n                    end   = this.addTime(_now, this.config.l[index].offset);\r\n                    start = this.addTime(end,  this.config.range, false, true);\r\n                }\r\n\r\n                option = {\r\n                    start:      start,\r\n                    end:        end,\r\n                    ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                    aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                    from:       false,\r\n                    ack:        false,\r\n                    q:          false,\r\n                    addID:      false,\r\n\r\n                };\r\n\r\n                if (this.config.aggregateType === 'step') {\r\n                    option.step = this.config.aggregateSpan * 1000;\r\n                } else if (this.config.aggregateType === 'count') {\r\n                    option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n                }\r\n\r\n                this.navOptions[index] = option;\r\n                return option;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n\r\n                option = {\r\n                    start:      start,\r\n                    end:        end,\r\n                    ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                    aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                    count:      1,\r\n                    from:       false,\r\n                    ack:        false,\r\n                    q:          false,\r\n                    addID:      false,\r\n                };\r\n\r\n                this.navOptions[index].end   = end;\r\n                this.navOptions[index].start = this.addTime(end, this.config.range, false, true);\r\n                return option;\r\n            }\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n        this.config.l[index].yOffset = parseFloat(this.config.l[index].yOffset) || 0;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        console.log(new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // if less 2000.01.01 00:00:00\r\n                        //if (values[i].ts < 946681200000) {\r\n                        //    values[i].ts = values[i].ts * 1000;\r\n                        //}\r\n\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0][0] > option.start) {\r\n                            _series.unshift({value: [option.start, null]});\r\n                        }\r\n                        if (_series[_series.length - 1][0] < option.end) {\r\n                            _series.push({value: [option.end, null]});\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null]});\r\n                        _series.push({value: [option.end,   null]});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error(err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this.socket.getObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            console.log('Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(e))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.m || !this.config.m.length || m >= this.config.m.length) {\r\n            return cb();\r\n        } else {\r\n            if (!this.config.m[m].oid && this.config.m[m].v && parseFloat(this.config.m[m].v).toString() !== this.config.m[m].v && this.config.m[m].v.includes('.')) {\r\n                if (!this.subscribes.includes(this.config.m[m].v)) {\r\n                    this.subscribes.push(this.config.m[m].v);\r\n                }\r\n\r\n                this.readValue(this.config.m[m].v, m, (index, val) => {\r\n                    this.config.m[index].oid = this.config.m[index].v;\r\n                    this.config.m[index].v   = val;\r\n\r\n                    if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                        if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                            this.subscribes.push(this.config.m[m].vl);\r\n                        }\r\n\r\n                        this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                            this.config.m[index].oidl = this.config.m[index].vl;\r\n                            this.config.m[index].vl   = val;\r\n                            setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                        });\r\n                    } else {\r\n                        setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                    }\r\n                });\r\n            } else\r\n            if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                    this.subscribes.push(this.config.m[m].vl);\r\n                }\r\n                this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                    this.config.m[index].oidl = this.config.m[index].vl;\r\n                    this.config.m[index].vl   = val;\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                });\r\n            } else {\r\n                setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        this.now = Date.now();\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        }\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport moment from 'moment';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nfunction padding3(ms) {\r\n    if (ms < 10) {\r\n        return '00' + ms;\r\n    } else if (ms < 100) {\r\n        return '0' + ms;\r\n    } else {\r\n        return ms;\r\n    }\r\n}\r\n\r\nfunction padding2(num) {\r\n    if (num < 10) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n});\r\n\r\nconst GRID_PADDING_LEFT = 80;\r\nconst GRID_PADDING_RIGHT = 25;\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: 300,\r\n            chartWidth: 500,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n\r\n        this.chart = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            if (typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                const chartInstance = this.echartsReact.getEchartsInstance();\r\n                chartInstance.clear();  // may be it is not required\r\n                chartInstance.setOption(this.getOption(props), true);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.max + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    convertData(props, i) {\r\n        props = props || this.props;\r\n        const values = props.data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        if (!this.chart.min) {\r\n            this.chart.min = values[0].ts;\r\n            this.chart.max = values[values.length - 1].ts;\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(props) {\r\n        props = props || this.props;\r\n\r\n        return props.config.l.map((oneLine, i) => {\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                xAxisIndex: 0,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'start' : undefined,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(props, i),\r\n                itemStyle: {\r\n                    color: oneLine.color\r\n                },\r\n                symbolSize: oneLine.chartType === 'scatterplot' || oneLine.points ? oneLine.symbolSize || 3 : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width: oneLine.thickness || 1,\r\n                    shadowBlur: oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY: oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor: oneLine.color,\r\n                    type: oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (oneLine.fill) {\r\n                cfg.areaStyle = {\r\n                    color: oneLine.color,\r\n                    opacity: parseFloat(oneLine.fill),\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    yFormatter(val, line, props) {\r\n        props = props || this.props;\r\n        if (props.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        const afterComma = props.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (props.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',');\r\n            } else {\r\n                return val.toFixed(afterComma);\r\n            }\r\n        } else {\r\n            if (props.config.useComma) {\r\n                val = parseFloat(val);\r\n                return val.toString().replace('.', ',');\r\n            } else {\r\n                return val;\r\n            }\r\n        }\r\n    }\r\n\r\n    getOption(props) {\r\n        props = props || this.props;\r\n        console.log(JSON.stringify(props.config, null, 2));\r\n\r\n        let titlePos = {};\r\n        if (props.config.titlePos) {\r\n            props.config.titlePos.split(';').forEach(a => {\r\n                const parts = a.split(':');\r\n                titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n            });\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        const legend = !props.config.legend || props.config.legend === 'none' ? undefined : {\r\n            data: props.config.l.map(oneLine => oneLine.name),\r\n            show: true,\r\n        };\r\n\r\n        const options = {\r\n            backgroundColor: 'transparent',\r\n            animation: !props.config.noAnimation && !props.config.noLoader,\r\n            title: {\r\n                text: props.config.title || '',\r\n                textStyle: {\r\n                    fontSize: props.config.titleSize ? parseInt(props.config.titleSize, 10) : undefined,\r\n                    color: props.config.titleColor || undefined\r\n                },\r\n                padding: [\r\n                    8,  // up\r\n                    0,  // right\r\n                    0,  // down\r\n                    90, // left\r\n                ],\r\n                textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n                textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n                top:               titlePos.top  === 35 ? 0 : (titlePos.top === 50 ? '50%' : undefined),\r\n                left:              titlePos.left === 50 ? '50%' : (titlePos.left === 65 ? 0 : undefined),\r\n                bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight : titlePos.bottom) : undefined,\r\n                right:             titlePos.right === 5 ? 25 : undefined,\r\n            },\r\n            legend,\r\n            grid: {\r\n                backgroundColor: props.config.bg_custom || 'transparent',\r\n                show: !!props.config.bg_custom,\r\n                left:   GRID_PADDING_LEFT,\r\n                top:    8,\r\n                right:  GRID_PADDING_RIGHT,\r\n                bottom: 40,\r\n            },\r\n            tooltip: props.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => {\r\n                    const date = new Date(params[0].value[0]);\r\n\r\n                    const values = params.map(param => {\r\n                        let val = param.value[1] === null ?\r\n                            'null' :\r\n                            this.yFormatter(param.value[1], param.seriesIndex, props);\r\n\r\n                        return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${props.config.l[param.seriesIndex].color}\">` +\r\n                            `<div style=\"display: flex;\">${props.config.l[param.seriesIndex].name}:</div>` +\r\n                            `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                            `<div style=\"display: flex;\"><b>${val}</b>${param.value[1] !== null ? props.config.l[param.seriesIndex].unit : ''}</div>` +\r\n                         `</div>`\r\n                    });\r\n\r\n                    return `<b>${moment(date).format('dddd, MMMM Do YYYY, h:mm:ss.SSS')}</b><br/>${values.join('<br/>')}`;\r\n                },\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis:\r\n            [{\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !props.config.grid_hideX,\r\n                    lineStyle: props.config.grid_color ? {\r\n                        color: props.config.grid_color,\r\n                    } : undefined,\r\n                },\r\n                //splitNumber: Math.round((this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT) / 50),\r\n                min: this.chart.min,\r\n                max: this.chart.max,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                },\r\n                axisLabel: {\r\n                    formatter: (value, index) => {\r\n                        const date = new Date(value);\r\n                        if (this.chart.withSeconds) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n                        } else if (this.chart.withTime) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n                        } else {\r\n                            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n                        }\r\n                    },\r\n                    color: props.config.x_labels_color || undefined,\r\n                }\r\n            }],\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n                    boundaryGap: [0, '100%'],\r\n                    splitLine: {\r\n                        show: !props.config.grid_hideY,\r\n                        lineStyle: props.config.grid_color ? {\r\n                            color: props.config.grid_color,\r\n                        } : undefined,\r\n                    },\r\n                    //splitNumber: Math.round(this.state.chartHeight / 100),\r\n                    axisLabel: {\r\n                        formatter: '{value}' + props.config.l[0].unit,\r\n                        color: props.config.y_labels_color || undefined,\r\n                    },\r\n                    axisTick: {\r\n                        alignWithLabel: true,\r\n                    }\r\n                }\r\n            ],\r\n            toolbox: props.config.export === true || props.config.export === 'true' ? {\r\n                left: 'right',\r\n                feature: {\r\n                    /*dataZoom: {\r\n                        yAxisIndex: 'none',\r\n                        title: props.t('Zoom'),\r\n                    },\r\n                    restore: {\r\n                        title: props.t('Restore')\r\n                    },*/\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series: this.getSeries(props)\r\n        };\r\n        if (!props.config.grid_color) {\r\n            options.yAxis.forEach(axis => delete axis.splitLine.lineStyle);\r\n            options.xAxis.forEach(axis => delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.max - this.chart.min;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.min,\r\n                                max: this.chart.max,\r\n                            }\r\n                        });\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.min,\r\n                        max: this.chart.max,\r\n                    }\r\n                });\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }\r\n\r\n    setNewRange(updateChart) {\r\n        /*if (this.rangeRef.current &&\r\n            this.rangeRef.current.childNodes[1] &&\r\n            this.rangeRef.current.childNodes[1].value) {\r\n            this.rangeRef.current.childNodes[0].innerHTML = '';\r\n            this.rangeRef.current.childNodes[1].value = '';\r\n        }*/\r\n        this.chart.diff        = this.chart.max - this.chart.min;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        if (this.state.relativeRange !== 'absolute') {\r\n            this.setState({ relativeRange: 'absolute' });\r\n        } else {\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: this.chart.min,\r\n                    max: this.chart.max,\r\n                }\r\n            });\r\n\r\n            updateChart && this.updateChart(this.chart.min, this.chart.max, true);\r\n        }\r\n    }\r\n\r\n    setRelativeInterval(mins, dontSave, cb) {\r\n        if (!dontSave) {\r\n            window.localStorage.setItem('App.relativeRange', mins);\r\n            this.setState({ relativeRange: mins });\r\n        }\r\n\r\n        const now = new Date();\r\n        if (now.getMilliseconds()) {\r\n            now.setMilliseconds(1000);\r\n        }\r\n        if (now.getSeconds()) {\r\n            now.setSeconds(60);\r\n        }\r\n\r\n        this.chart.max = now.getTime();\r\n\r\n        if (mins === 'day') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'week') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            // find week start\r\n            if (now.getDay()) { // if not sunday\r\n                now.setDate(now.getDate() - now.getDay() - 1);\r\n            } else {\r\n                now.setDate(now.getDate() - 6);\r\n            }\r\n\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === '2weeks') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            // find week start\r\n            if (now.getDay()) { // if not sunday\r\n                now.setDate(now.getDate() - now.getDay() - 8);\r\n            } else {\r\n                now.setDate(now.getDate() - 13);\r\n            }\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'month') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setDate(1);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'year') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setDate(1);\r\n            now.setMonth(0);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === '12months') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            this.chart.min = now.getTime();\r\n        } else {\r\n            mins = parseInt(mins, 10);\r\n            this.chart.min = this.chart.max - mins * 60000;\r\n        }\r\n        this.updateChart(this.chart.min, this.chart.max, true, cb);\r\n    }\r\n\r\n    installEventHandlers() {\r\n        const zr = this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (false && !zr._iobInstalled) {\r\n            zr._iobInstalled = true;\r\n\r\n            zr.on('mousedown', e => {\r\n                console.log('mouse down');\r\n                this.mouseDown = true;\r\n                this.chart.lastX = e.offsetX;\r\n            });\r\n\r\n            zr.on('mouseup', () => {\r\n                console.log('mouse up');\r\n                this.mouseDown = false;\r\n                this.setNewRange(true);\r\n            });\r\n\r\n            zr.on('mousewheel', e => {\r\n                let diff = this.chart.max - this.chart.min;\r\n                const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n                const x = e.offsetX - GRID_PADDING_LEFT;\r\n                const pos = x / width;\r\n\r\n                const oldDiff = diff;\r\n                const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n                diff = diff * amount;\r\n                const move = oldDiff - diff;\r\n                this.chart.max += move * (1 - pos);\r\n                this.chart.min -= move * pos;\r\n\r\n                this.setNewRange();\r\n            });\r\n\r\n            zr.on('mousemove', e => {\r\n                if (this.mouseDown) {\r\n                    const moved = this.chart.lastX - (e.offsetX - GRID_PADDING_LEFT);\r\n                    this.chart.lastX = e.offsetX - GRID_PADDING_LEFT;\r\n                    const diff = this.chart.max - this.chart.min;\r\n                    const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                    const shift = Math.round(moved * diff / width);\r\n                    this.chart.min += shift;\r\n                    this.chart.max += shift;\r\n                    this.setNewRange();\r\n                }\r\n            });\r\n\r\n            zr.on('touchstart', e => {\r\n                e.preventDefault();\r\n                this.mouseDown = true;\r\n                const touches = e.touches || e.originalEvent.touches;\r\n                if (touches) {\r\n                    this.chart.lastX = touches[touches.length - 1].pageX;\r\n                    if (touches.length > 1) {\r\n                        this.chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                    } else {\r\n                        this.chart.lastWidth = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n            zr.on('touchend', e => {\r\n                e.preventDefault();\r\n                this.mouseDown = false;\r\n                this.setNewRange(true);\r\n            });\r\n\r\n            zr.on('touchmove', e => {\r\n                e.preventDefault();\r\n                const touches = e.touches || e.originalEvent.touches;\r\n                if (!touches) {\r\n                    return;\r\n                }\r\n                const pageX = touches[touches.length - 1].pageX - GRID_PADDING_LEFT;\r\n                if (this.mouseDown) {\r\n                    if (touches.length > 1) {\r\n                        // zoom\r\n                        const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                        if (this.chart.lastWidth !== null && fingerWidth !== this.chart.lastWidth) {\r\n                            let diff = this.chart.max - this.chart.min;\r\n                            const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                            const amount     = fingerWidth > this.chart.lastWidth ? 1.1 : 0.9;\r\n                            const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                                touches[1].pageX - GRID_PADDING_LEFT + fingerWidth / 2 :\r\n                                touches[0].pageX - GRID_PADDING_LEFT + fingerWidth / 2;\r\n\r\n                            const pos = positionX / chartWidth;\r\n\r\n                            const oldDiff = diff;\r\n                            diff = diff * amount;\r\n                            const move = oldDiff - diff;\r\n\r\n                            this.chart.max += move * (1 - pos);\r\n                            this.chart.min -= move * pos;\r\n\r\n                            this.setNewRange();\r\n                        }\r\n                        this.chart.lastWidth = fingerWidth;\r\n                    } else {\r\n                        // swipe\r\n                        const moved = this.chart.lastX - pageX;\r\n                        const diff  = this.chart.max - this.chart.min;\r\n                        const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                        const shift = Math.round(moved * diff / chartWidth);\r\n                        this.chart.min += shift;\r\n                        this.chart.max += shift;\r\n\r\n                        this.setNewRange();\r\n                    }\r\n                }\r\n                this.chart.lastX = pageX;\r\n            });\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            const option = this.getOption();\r\n\r\n            //console.log(JSON.stringify(option, null, 2));\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.props.themeType === 'dark' ? 'dark' : '' }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const height = this.divRef.current.offsetHeight;\r\n            if (this.state.chartHeight !== height) {\r\n                const width  = this.divRef.current.offsetWidth;\r\n                setTimeout(() => this.setState({ chartHeight: height, chartWidth: width }), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        return <div ref={ this.divRef } className={ this.props.classes.chart } style={{background: this.props.config.window_bg || undefined}}>\r\n            { this.renderChart() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    socket: PropTypes.object,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            reading:    true,\r\n            seriesData: null,\r\n            noLoader:   Utils.parseQuery(window.location.search).noLoader || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: Utils.parseQuery(window.location.search).noBG || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noBG || false,\r\n        };\r\n        this.divRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        /*if (settings && settings.translations) {\r\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\r\n        } else if (props.translations) {\r\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\r\n        }*/\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            doNotLoadAllObjects: true,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n\r\n                        this.chartData = new ChartModel(this.socket);\r\n                        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n                        this.chartData.onReading(reading => this.setState({reading}));\r\n                        this.chartData.onUpdate(seriesData => this.setState({seriesData, reading: false}));\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        if (this.state.seriesData) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: this.state.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                {this.state.reading ? <LinearProgress className={this.props.classes.progress}/> : null}\r\n                <ChartView\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={this.chartData.getConfig()}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}