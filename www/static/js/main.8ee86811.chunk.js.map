{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","chartType","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","NOT_CONNECTED","ChartModel","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","actualValues","ticks","liveInterval","reading","navOptions","subscribes","sessionId","updateInterval","presetSubscribed","defaultHistory","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","onStateChangeBound","onStateChange","getSystemConfig","catch","e","console","error","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","range","_config","clearInterval","startsWith","includes","getObject","obj","native","type","stringify","isFloatComma","lang","language","live","presetId","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","log","Date","toISOString","readOnZoomTimeout","subscribed","unsubscribeState","removeEventListener","cb","index","step","end","start","_now","option","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","getStartStop","getHistoryEx","res","warn","values","_series","val","dp","value","ts","exact","unshift","last","sort","b","Promise","resolve","err","legActual","getState","state","subscribeState","_readObject","en","readOneChart","_readOneLine","_readData","splice","upperValue","lowerValue","readMarkings","subscribeAll","changed","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","brighterColor","amt","usePound","rgb","match","rgba2hex","slice","r","g","Gradient","colorStops","prototype","constructor","addColorStop","LinearGradient","x","y","x2","y2","globalCoord","global","call","clazz","baseClazz","clazzPrototype","F","prop","hasOwnProperty","superClass","zrUtilInherits","ChartOption","moment","themeType","calcTextWidth","compact","Error","chart","yAxis","isTouch","document","documentElement","lastFormattedTime","yAxisIndex","xMin","xMax","theme","colorCount","oneLine","dashes","_color","commonYAxis","cfg","clip","xAxisIndex","silent","showSymbol","points","smooth","convertData","itemStyle","symbolSize","symbol","emphasis","scale","focus","blurScope","lineStyle","shadowBlur","shadowOffsetY","shadowColor","areaStyle","opacity","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","_index","xFormatter","fontSize","x_labels_size","x_labels_color","rich","fontWeight","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_labels_size","y_ticks_color","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","param","distance","textStyle","fontStyle","line","withUnit","interpolated","ignoreWidth","toFixed","round","withSeconds","withTime","isTop","date","format","dateTxt","dateInMonth","showDate","getSeconds","hoverNoNulls","k","y1","params","find","seriesIndex","getInterpolatedValue","hoverNoInterpolate","filter","join","legend","left","padLeft","right","padRight","top","padTop","bottom","padBottom","backgroundColor","legBg","arg","legColor","legFontSize","orient","legendDirection","selected","hide","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","useCanvas","getSeries","getYAxis","xAxis","getXAxis","noAnimation","grid","bg_custom","isXLabelHasBreak","tooltip","trigger","renderTooltip","hoverAnimation","axisPointer","getMarkings","ser","cY","minTick","maxTick","wMin","wMax","getLegend","getTitle","axis","echarts","GridComponent","ToolboxComponent","TitleComponent","LegendComponent","DataZoomComponent","TimelineComponent","MarkLineComponent","MarkAreaComponent","TooltipComponent","LineChart","ScatterChart","SVGRenderer","CanvasRenderer","canvasCalcTextWidth","fontFamily","context","createElement","getContext","font","metrics","measureText","String","padStart","targetLength","padString","repeat","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","clear","chartOption","getOption","applySelected","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","current","style","display","getHelperChartData","event","shiftKey","yMoved","moved","lastY","offsetY","shift","chartHeight","_yAxis","setNewYAxis","xMoved","lastX","offsetX","chartWidth","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","amount","wheelDelta","move","updateDataTimer","onTouchStart","touches","originalEvent","preventDefault","stopImmediatePropagation","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","paddings","React","createRef","divRef","locale","I18n","getLanguage","updateChart","getZr","items","getElementsByClassName","div","_iobInstalled","keys","ref","notMerge","lazyUpdate","opts","renderer","onEvents","legendselectchanged","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","xml","encodeURIComponent","downloadLink","body","appendChild","href","target","download","click","alert","forceUpdate","background","noBackground","borderColor","border_color","borderStyle","border_style","padding","renderExportButton","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","setConfig","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBG","inEdit","edit","progressRef","progressShown","translations","require","ownTranslations","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","restoreAfterReconnection","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","ERRORS","showError","onError","onReading","showProgress","onUpdate","newState","dataLoaded","isShow","destroy","palette","errorText","onClose","prevProps","prevState","snapshot","getConfig","MD5","root","default","primary","renderError","withTheme","Boolean","hostname","version","host","Sentry","dsn","release","integrations","SentryIntegrations","beforeSend","hint","ignore","exception","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ee86811.chunk.js","sourcesContent":["/**\r\n * Parse a query string into its parts.\r\n * Copied from @iobroker/adapter-react/Components/Utils\r\n * @param {string} query\r\n * @returns {Record<string, string | boolean | number>}\r\n */\r\nfunction parseQuery(query) {\r\n    query = (query || '').toString().replace(/^\\?/, '');\r\n    /** @type {Record<string, string | boolean | number>} */\r\n    const result = {};\r\n    query.split('&').forEach(part => {\r\n        part = part.trim();\r\n        if (part) {\r\n            const parts = part.split('=');\r\n            const attr = decodeURIComponent(parts[0]).trim();\r\n            if (parts.length > 1) {\r\n                result[attr] = decodeURIComponent(parts[1]);\r\n                if (result[attr] === 'true') {\r\n                    result[attr] = true;\r\n                } else if (result[attr] === 'false') {\r\n                    result[attr] = false;\r\n                } else {\r\n                    const f = parseFloat(result[attr]);\r\n                    if (f.toString() === result[attr]) {\r\n                        result[attr] = f;\r\n                    }\r\n                }\r\n            } else {\r\n                result[attr] = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\n// Do not forget to change normalizeConfig in src/utils/flotConverter.js too\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = config.lines;\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate (from flot)\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\r\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\r\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\r\n            config.l[j].chartType = config.l[j].chartType || config.chartType || 'auto';\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n\r\n    return config;\r\n}\r\n\r\nconst NOT_CONNECTED = 'notConnectedError';\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\r\n\r\n        this.seriesData       = [];\r\n        this.actualValues     = []; // only if config.legActual === true\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n        this.reading          = false;\r\n\r\n        this.navOptions       = {};\r\n\r\n        this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.defaultHistory   = '';\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!this.serverSide) {\r\n            this.lastHash         = window.location.hash;\r\n\r\n            if (!config) {\r\n                this.onHashInstalled = true;\r\n                this.onHashChangeBound = this.onHashChange.bind(this);\r\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\r\n            }\r\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\r\n        } // else node.js\r\n\r\n        this.onStateChangeBound = this.onStateChange.bind(this);\r\n\r\n        this.socket.getSystemConfig()\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error('Cannot read systemConfig: ' + e);\r\n                return null;\r\n            })\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                this.defaultHistory = this.systemConfig.defaultHistory;\r\n                return this.analyseAndLoadConfig(config);\r\n            })\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else if (!this.serverSide) {\r\n            const query = parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset && typeof query.preset === 'string') {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                if (hQuery.preset) {\r\n                    this.preset = hQuery.preset;\r\n                    if (hQuery.range || hQuery.relativeEnd) {\r\n                        this.hash = {\r\n                            range: hQuery.range,\r\n                            relativeEnd: hQuery.relativeEnd\r\n                        };\r\n                    }\r\n                } else {\r\n                    // search ID and range\r\n                    const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                    if (hQuery.noLoader !== undefined) {\r\n                        _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                    }\r\n                    if (query.noLoader !== undefined) {\r\n                        _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                    }\r\n                    this.config = normalizeConfig(_config);\r\n                    //console.log(this.config);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config          = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n                    this.config.presetId = this.preset;\r\n\r\n                    if (this.hash && this.hash.range) {\r\n                        this.config.range = this.hash.range;\r\n                    }\r\n                    if (this.hash && this.hash.relativeEnd) {\r\n                        this.config.relativeEnd = this.hash.relativeEnd;\r\n                    }\r\n\r\n                    this.readData();\r\n\r\n                    // subscribe on preset changes\r\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\r\n                    }\r\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${this.preset}: ${e}`);\r\n                });\r\n\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange() {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate(id, obj) {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            !this.serverSide && this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChangeBound));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            !this.serverSide && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        if (!this.serverSide) {\r\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\r\n            this.onHashInstalled = false;\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getSystemConfig() {\r\n        return this.systemConfig;\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.includes('minute')) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.includes('hour')) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'week2Usa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setDate(_now.getDate() - 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'week2Europe') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setDate(_now.getDate() - 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || 300;\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        const dp = {value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]};\r\n\r\n                        // If value was interpolated by backend\r\n                        if (values[i].i) {\r\n                            dp.exact = false;\r\n                        }\r\n\r\n                        _series.push(dp);\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0].value[0] > option.start) {\r\n                            _series.unshift({value: [option.start, null], exact: false});\r\n                        }\r\n                        const last = _series[_series.length - 1];\r\n                        if (last.value[0] < option.end) {\r\n                            if (this.config.l[index].validTime) {\r\n                                // If last value is not older than X seconds, assume it is still the same\r\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\r\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\r\n                                } else {\r\n                                    _series.push({value: [option.end, null], exact: false});\r\n                                }\r\n                            } else {\r\n                                _series.push({value: [option.end, null], exact: false});\r\n                            }\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null], exact: false});\r\n                        _series.push({value: [option.end,   null], exact: false});\r\n                    }\r\n\r\n                    // TODO: May be not required?\r\n                    _series.sort((a, b) => a.value[0] > b.value[0] ? 1 : (a.value[0] < b.value[0] ? -1 : 0));\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => {\r\n                err === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(err);\r\n                err && console.error('[ChartModel] ' + err)\r\n            })\r\n            .then(() => {\r\n                if (this.config.legActual) {\r\n                    // read current value\r\n                    return this.socket.getState(id)\r\n                        .then(state => this.actualValues[index] = state && (state.val || state.val === 0) ? state.val : null)\r\n                        .catch(e => {\r\n                            console.warn(`Cannot read last value of ${id}: ${e}`);\r\n                            this.actualValues[index] = null;\r\n                        })\r\n                        .then(() => {\r\n                            if (!this.serverSide && !this.subscribes.includes(id)) {\r\n                                this.subscribes.push(id);\r\n                                this.subscribed = true;\r\n                                this.socket.subscribeState(id, this.onStateChangeBound);\r\n                            }\r\n                        });\r\n                } else {\r\n                    return Promise.resolve();\r\n                }\r\n            })\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id)\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${id}: ${e}`);\r\n                    return null;\r\n                });\r\n\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance || this.defaultHistory, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance || this.defaultHistory;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`[ChartModel] ${e}`);\r\n                })\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        })\r\n                        .catch(e => {\r\n                            e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                            console.error(`Cannot read marking ${this.config.marks[m].upperValueOrId}: ${e}`);\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(e => {\r\n                                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                                console.error(`Cannot read marking ${this.config.marks[m].lowerValueOrId}: ${e}`);\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (this.serverSide || !subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChangeBound);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange(id, state) {\r\n        if (!id || !state || !this.actualValues || this.reading) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        let changed = false;\r\n        for (let m = 0; m < this.config.l.length; m++) {\r\n            if (this.config.l[m].id === id) {\r\n                if (this.actualValues[m] !== state.val) {\r\n                    this.actualValues[m] = state.val;\r\n                    changed = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        changed && this.onUpdateFunc(null, this.actualValues);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        console.log('Read till ' + new Date(this.now));\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.reading = true;\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.reading = false;\r\n                            this.onUpdateFunc(this.seriesData, this.actualValues);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n            this.reading = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;\r\n","const THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    if (!num) {\r\n        return '00';\r\n    }\r\n    // on safari 9.0 it is unknown\r\n    // return num.toString().padStart(2, '0');\r\n    num = (num || '').toString();\r\n    if (num.length < 2) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nfunction rgba2hex(color) {\r\n    const rgb = color.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\r\n    return rgb ?\r\n        '#' +\r\n        padding2(parseInt(rgb[1], 10).toString(16)) +\r\n        padding2(parseInt(rgb[2], 10).toString(16)) +\r\n        padding2(parseInt(rgb[3], 10).toString(16)) : color;\r\n}\r\n\r\nfunction brighterColor(color, amt) {\r\n    let usePound = false;\r\n\r\n    if (color.includes('rgb')) {\r\n        color = rgba2hex(color);\r\n    }\r\n\r\n    if (color[0] === '#') {\r\n        color = color.slice(1);\r\n        usePound = true;\r\n    }\r\n\r\n    const num = parseInt(color,16);\r\n\r\n    let r = (num >> 16) + amt;\r\n    if (r > 255) {\r\n        r = 255;\r\n    } else if (r < 0) {\r\n        r = 0;\r\n    }\r\n\r\n    let b = ((num >> 8) & 0x00FF) + amt;\r\n    if (b > 255) {\r\n        b = 255;\r\n    } else if (b < 0) {\r\n        b = 0;\r\n    }\r\n\r\n    let g = (num & 0x0000FF) + amt;\r\n    if (g > 255) {\r\n        g = 255;\r\n    } else if (g < 0) {\r\n        g = 0;\r\n    }\r\n\r\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\n//----- copied from\r\nconst Gradient = function (colorStops) {\r\n    this.colorStops = colorStops || [];\r\n};\r\n\r\nGradient.prototype = {\r\n    constructor: Gradient,\r\n    addColorStop: function (offset, color) {\r\n        this.colorStops.push({\r\n            offset: offset,\r\n            color: color\r\n        });\r\n    }\r\n};\r\nconst LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n    // Should do nothing more in this constructor. Because gradient can be\r\n    // declared by `color: {type: 'linear', colorStops: ...}`, where\r\n    // this constructor will not be called.\r\n    this.x = x == null ? 0 : x;\r\n    this.y = y == null ? 0 : y;\r\n    this.x2 = x2 == null ? 1 : x2;\r\n    this.y2 = y2 == null ? 0 : y2; // Can be cloned\r\n\r\n    this.type = 'linear'; // If use global coord\r\n\r\n    this.global = globalCoord || false;\r\n    Gradient.call(this, colorStops);\r\n};\r\n\r\nLinearGradient.prototype = {\r\n    constructor: LinearGradient\r\n};\r\n\r\nfunction zrUtilInherits(clazz, baseClazz) {\r\n    const clazzPrototype = clazz.prototype;\r\n\r\n    function F() {}\r\n\r\n    F.prototype = baseClazz.prototype;\r\n    clazz.prototype = new F();\r\n\r\n    for (const prop in clazzPrototype) {\r\n        if (clazzPrototype.hasOwnProperty(prop)) {\r\n            clazz.prototype[prop] = clazzPrototype[prop];\r\n        }\r\n    }\r\n\r\n    clazz.prototype.constructor = clazz;\r\n    clazz.superClass = baseClazz;\r\n}\r\nzrUtilInherits(LinearGradient, Gradient);\r\n\r\nclass ChartOption {\r\n    constructor(moment, themeType, calcTextWidth, config, compact) {\r\n        this.moment = moment;\r\n        if (!this.moment) {\r\n            throw new Error('moment must be set and initialized');\r\n        }\r\n\r\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\r\n        this.calcTextWidth = calcTextWidth;\r\n        this.themeType = themeType || 'light';\r\n        this.chart = {yAxis: []};\r\n        this.isTouch = typeof window !== 'undefined' ? 'ontouchstart' in window.document.documentElement : false;\r\n        this.compact = compact;\r\n        this.lastFormattedTime = null;\r\n    }\r\n\r\n    setThemeName(themeType) {\r\n        this.themeType = themeType || 'light';\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    getHelperChartData() {\r\n        return this.chart;\r\n    }\r\n\r\n    convertData(data, i, yAxisIndex) {\r\n        const values = data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(data, theme) {\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return this.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n\r\n            oneLine.shadowsize = parseFloat(oneLine.shadowsize) || 0;\r\n            if (oneLine.dashes === 'false') {\r\n                oneLine.dashes = false;\r\n            } else if (oneLine.dashes === 'true') {\r\n                oneLine.dashes = true;\r\n            }\r\n\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                clip: true,\r\n                xAxisIndex: 0,\r\n\r\n                silent: true,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                //hoverAnimation: false,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'end' : (oneLine.chartType === 'stepsStart' ? 'start' : undefined) ,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(data, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                emphasis: {\r\n                    scale: false,\r\n                    focus: 'none',\r\n                    blurScope: 'none',\r\n                    lineStyle: {\r\n                        width:          oneLine.thickness !== undefined ? parseFloat(oneLine.thickness) : 1,\r\n                        shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                        shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                        shadowColor:    color,\r\n                        type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                    },\r\n                },\r\n                lineStyle: {\r\n                    width:          oneLine.thickness !== undefined ? parseFloat(oneLine.thickness) : 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                let _color;\r\n                if (!this.isTouch) {\r\n                    _color = new LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: brighterColor(color, 30)\r\n                    }, {\r\n                        offset: 1,\r\n                        color\r\n                    }]);\r\n                } else {\r\n                    _color = color;\r\n                }\r\n                cfg.areaStyle = {\r\n                    color: _color,\r\n                    opacity: parseFloat(oneLine.fill) || 0,\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis() {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.config.grid_hideX,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\r\n                        color: this.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\r\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    show: !this.compact,\r\n                    formatter: (value, _index) => this.xFormatter(value, _index, this.config.l[0].xaxe === 'top'),\r\n                    fontSize: parseInt(this.config.x_labels_size, 10) || 12,\r\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\r\n                    rich: {\r\n                        a: {\r\n                            fontWeight: 'bold',\r\n                        },\r\n                        b: {\r\n                            opacity: 0,\r\n                        },\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(theme, series) {\r\n        return this.config.l.map((oneLine, i) => {\r\n            if (!oneLine || (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined)) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (diff > 25000) {\r\n                        yMin = Math.floor(yMin / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMin = Math.floor(yMin / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMin = Math.floor(yMin / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMin = Math.floor(yMin / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMin = Math.floor(yMin);\r\n                    } else if (diff > 1) {\r\n                        yMin = Math.floor(yMin * 10) / 10;\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 25000) {\r\n                        yMax = Math.ceil(yMax / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                            'right' :\r\n                            (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !this.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    show: !this.compact,\r\n                    formatter: value => this.yFormatter(value, i, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\r\n                    fontSize: parseInt(this.config.y_labels_size, 10) || 12\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(options) {\r\n        // fill markings\r\n        this.config.marks && this.config.marks.forEach(oneMark => {\r\n            if (!oneMark) {\r\n                return;\r\n            }\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n\r\n            if (!series) {\r\n                console.error('Mark line has no chart line');\r\n                return;\r\n            }\r\n\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {\r\n                        yAxis: lowerLimitFloat,\r\n                        name: oneMark.text || '',\r\n                        itemStyle: {\r\n                            color:       oneMark.color || series.itemStyle.color,\r\n                            borderWidth: 0,\r\n                            opacity:     parseFloat(oneMark.fill) || 0,\r\n                        }\r\n                    },\r\n                    {\r\n                        yAxis: upperLimitFloat\r\n                    },\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        data: []\r\n                    };\r\n\r\n                    series.markLine.data.push({\r\n                        yAxis: limitFloat,\r\n                        name: oneMark.text,\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: param => param.name,\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: (-1 * oneMark.textOffset) || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                    });\r\n\r\n                    if (this.config.l[oneMark.lineId]) {\r\n                        // if minimum not set\r\n                        let yMin = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMin) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                                options.yAxis[0].min = limitFloat;\r\n                            }\r\n                        }\r\n                        let yMax = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMax) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                                options.yAxis[0].max = limitFloat;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, withUnit, interpolated, ignoreWidth) {\r\n        if (this.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = this.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (this.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (interpolated) {\r\n                val = Math.round(val * 10000) / 10000;\r\n            }\r\n\r\n            if (this.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    isXLabelHasBreak() {\r\n        if (this.config.timeFormat) {\r\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return true;\r\n        } else if (this.chart.withTime) {\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    xFormatter(value, _index, isTop) {\r\n        const date = new Date(value);\r\n        if (this.config.timeFormat) {\r\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\r\n        } else {\r\n            let dateTxt = '';\r\n            const dateInMonth = date.getDate();\r\n            if (this.chart.withSeconds || this.chart.withTime) {\r\n                let showDate = false;\r\n                if (_index < 2 || this.lastFormattedTime === null || value < this.lastFormattedTime) {\r\n                    showDate = true;\r\n                } else\r\n                if (!showDate && new Date(this.lastFormattedTime).getDate() !== dateInMonth) {\r\n                    showDate = true;\r\n                }\r\n                if (showDate) {\r\n                    if (isTop) {\r\n                        dateTxt = '{a|' + padding2(dateInMonth) + '.' + padding2(date.getMonth() + 1) + '.}\\n';\r\n                    } else {\r\n                        dateTxt = '{b|..}\\n{a|' + padding2(dateInMonth) + '.' + padding2(date.getMonth() + 1) + '.}';\r\n                    }\r\n                }\r\n\r\n                this.lastFormattedTime = value;\r\n\r\n                if (isTop) {\r\n                    if (this.chart.withSeconds) {\r\n                        return dateTxt + padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds()) + (dateTxt ? '{b|..}' : '');\r\n                    } else if (this.chart.withTime) {\r\n                        return dateTxt + padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + (dateTxt ? '{b|..}' : '');\r\n                    }\r\n                } else {\r\n                    if (this.chart.withSeconds) {\r\n                        return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds()) + dateTxt;\r\n                    } else if (this.chart.withTime) {\r\n                        return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + dateTxt;\r\n                    }\r\n                }\r\n            } else {\r\n                return padding2(dateInMonth) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n            }\r\n        }\r\n    }\r\n\r\n    // result.val === null => start and end are null\r\n    // result === null => no start or no end\r\n    getInterpolatedValue(i, ts, type, hoverNoNulls) {\r\n        const data = this.option.series[i].data;\r\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\r\n            return null;\r\n        }\r\n\r\n        for (let k = 0; k < data.length - 1; k++) {\r\n            if (data[k].value[0] === ts) {\r\n                // Calculate\r\n                const dp = {val: data[k].value[1]};\r\n                if (data[k].exact === false) {\r\n                    dp.exact = false\r\n                }\r\n                return dp;\r\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\r\n                const y1 = data[k].value[1];\r\n                const y2 = data[k + 1].value[1];\r\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\r\n                    return hoverNoNulls ? null : {exact: false, val: null};\r\n                }\r\n                if (type === 'boolean') {\r\n                    return {exact: false, val: y1};\r\n                }\r\n\r\n                // interpolate\r\n                const diff = data[k + 1].value[0] - data[k].value[0];\r\n                const kk = (data[k + 1].value[0] - ts) / diff;\r\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\r\n            }\r\n        }\r\n\r\n        return hoverNoNulls ? null : {exact: false, val: null};\r\n    }\r\n\r\n    renderTooltip(params) {\r\n        const ts = params[0].value[0];\r\n        const date = new Date(ts);\r\n        const hoverNoNulls = this.config.hoverNoNulls === true || this.config.hoverNoNulls === 'true';\r\n\r\n        const values = this.option.series.map((line, i) => {\r\n            const p = params.find(param => param.seriesIndex === i);\r\n            let interpolated;\r\n            if (p) {\r\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\r\n            }\r\n\r\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type, hoverNoNulls);\r\n            if (!interpolated) {\r\n                return '';\r\n            }\r\n            if (!interpolated.exact && this.config.hoverNoInterpolate) {\r\n                return '';\r\n            }\r\n\r\n            const val = interpolated.val === null ?\r\n                'null' :\r\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact, true);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\r\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\r\n                `</div>`;\r\n        });\r\n\r\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, HH:mm:ss.SSS';\r\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\r\n    }\r\n\r\n    getLegend(actualValues) {\r\n        if (!this.config.legend || this.config.legend === 'none') {\r\n            return undefined;\r\n        } else {\r\n            const legend = {\r\n                data:   this.config.l.map(oneLine => oneLine.name),\r\n                show:   true,\r\n                left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft   + 1 : undefined,\r\n                right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight  + 1 : undefined,\r\n                top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  this.chart.padTop    + 2 : undefined,\r\n                bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  this.chart.padBottom + 2 : undefined,\r\n                backgroundColor: this.config.legBg || undefined,\r\n                formatter: (name, arg) => {\r\n                    if (this.config.legActual && actualValues) {\r\n                        for (let i = 0; i < this.config.l.length; i++) {\r\n                            if (this.config.l[i].name === name) {\r\n                                return `${name} [${this.yFormatter(actualValues[i], i, true, true, true)}]`;\r\n                            }\r\n                        }\r\n                    }\r\n                    return name;\r\n                },\r\n                textStyle: {\r\n                    color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF'),\r\n                    fontSize:this.config.legFontSize,\r\n                },\r\n                orient: this.config.legendDirection || 'horizontal',\r\n                selected: {}\r\n            };\r\n\r\n            this.config.l.forEach(oneLine => legend.selected[oneLine.name] = oneLine.hide !== true);\r\n\r\n            return legend;\r\n        }\r\n    }\r\n\r\n    getTitle() {\r\n        if (!this.config || !this.config.title) {\r\n            return undefined;\r\n        }\r\n        let titlePos = {};\r\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\r\n            const parts = a.split(':');\r\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n        });\r\n\r\n        return {\r\n            text: this.config.title,\r\n            textStyle: {\r\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\r\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n            top:               titlePos.top  === 35 ? 5 + this.chart.padTop : (titlePos.top === 50 ? '50%'   : undefined),\r\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\r\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + this.chart.padBottom - 15 : titlePos.bottom) : undefined,\r\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n        };\r\n    }\r\n\r\n    getOption(data, config, actualValues) {\r\n        if (config) {\r\n            this.config = JSON.parse(JSON.stringify(config));\r\n        }\r\n        const useCanvas = this.isTouch && this.config.zoom;\r\n\r\n        let theme = this.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = this.config && this.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\r\n\r\n        const series = this.getSeries(data, theme);\r\n\r\n        if (this.config.start) {\r\n            if (this.chart.xMax < this.config.end) {\r\n                this.chart.xMax = this.config.end;\r\n            }\r\n            if (this.chart.xMin > this.config.start) {\r\n                this.chart.xMin = this.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n        this.config.y_labels_size = parseInt(this.config.y_labels_size, 10) || 12;\r\n        this.config.x_labels_size = parseInt(this.config.x_labels_size, 10) || 12;\r\n        this.config.legFontSize   = parseInt(this.config.legFontSize, 10) || 12;\r\n\r\n        const yAxis = this.getYAxis(theme, series);\r\n        const xAxis = this.getXAxis();\r\n\r\n        const option = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !this.config.noAnimation && !this.config.noLoader,\r\n            grid: {\r\n                backgroundColor: this.config.bg_custom || 'transparent',\r\n                show: !!this.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: this.compact ? 4 : (this.isXLabelHasBreak() ? 40 : 24),\r\n            },\r\n            tooltip: !this.compact && this.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,*/\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series,\r\n            useCanvas\r\n        };\r\n\r\n        this.getMarkings(option);\r\n\r\n        if (!this.compact) {\r\n            // calculate padding: left and right\r\n            let padLeft  = 0;\r\n            let padRight = 0;\r\n            let padBottom = 0;\r\n            let padTop = 0;\r\n            series.forEach((ser, i) => {\r\n                let yAxis = option.yAxis[ser.yAxisIndex];\r\n                if (!yAxis) {\r\n                    // seems this axis is defined something else\r\n                    const cY = this.config.l[ser.yAxisIndex] ? this.config.l[ser.yAxisIndex].commonYAxis : undefined;\r\n                    if (cY !== undefined) {\r\n                        yAxis = option.yAxis[cY];\r\n                    } else {\r\n                        console.log('Cannot find Y axis for line ' + i);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                let minTick = this.yFormatter(yAxis.min, i, true);\r\n                let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\r\n\r\n                if (xAxis[0].position === 'top') {\r\n                    padTop = this.isXLabelHasBreak() ? 40 : 24;\r\n                } else\r\n                if (xAxis[0].position !== 'off' || xAxis[0].position === 'bottom') {\r\n                    padBottom = this.isXLabelHasBreak() ? 40 : 24;\r\n                }\r\n\r\n                const position = yAxis.position;\r\n                if (position === 'off' || (yAxis.axisLabel && yAxis.axisLabel.color === 'rgba(0,0,0,0)')) {\r\n                    return;\r\n                }\r\n                let wMin = this.calcTextWidth(minTick, this.config.y_labels_size) + 4;\r\n                let wMax = this.calcTextWidth(maxTick, this.config.y_labels_size) + 4;\r\n                if (position !== 'right' && position !== 'rightColor') {\r\n                    if (wMin > padLeft) {\r\n                        padLeft = wMin;\r\n                    }\r\n                    if (wMax > padLeft) {\r\n                        padLeft = wMax;\r\n                    }\r\n                } else {\r\n                    if (wMin > padRight) {\r\n                        padRight = wMin;\r\n                    }\r\n                    if (wMax > padRight) {\r\n                        padRight = wMax;\r\n                    }\r\n                }\r\n            });\r\n            option.grid.left    = padLeft  + 10;\r\n            option.grid.right   = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\r\n            // if xAxis shown, let the place for last value\r\n            if (option.grid.right <= 10 && (padTop || padBottom)) {\r\n                option.grid.right = 18;\r\n            }\r\n            if (option.grid.left <= 10 && (padTop || padBottom)) {\r\n                option.grid.left = 18;\r\n            }\r\n            this.chart.padLeft  = option.grid.left;\r\n            this.chart.padRight = option.grid.right;\r\n            if (!padTop) {\r\n                padTop = 8;\r\n            }\r\n            if (!padBottom) {\r\n                padBottom = 8;\r\n            }\r\n            option.grid.top      = padTop;\r\n            option.grid.bottom   = padBottom;\r\n            this.chart.padTop    = option.grid.top;\r\n            this.chart.padBottom = option.grid.bottom;\r\n        }\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        option.legend = this.getLegend(actualValues);\r\n        option.title  = this.getTitle();\r\n\r\n        if (!this.config.grid_color) {\r\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        this.option = option;\r\n        return this.option;\r\n    }\r\n}\r\n\r\nexport default ChartOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\nimport {FaDownload as IconExport}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\n\r\nimport * as echarts from 'echarts/core';\r\nimport { LineChart, ScatterChart} from 'echarts/charts';\r\nimport {\r\n    GridComponent,\r\n    ToolboxComponent,\r\n    TitleComponent,\r\n    LegendComponent,\r\n    DataZoomComponent,\r\n    TimelineComponent,\r\n    MarkLineComponent,\r\n    MarkAreaComponent,\r\n    TooltipComponent,\r\n} from 'echarts/components';\r\n\r\nimport { SVGRenderer, CanvasRenderer } from 'echarts/renderers';\r\n\r\nimport ChartOption from './ChartOption';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\necharts.use([\r\n    GridComponent,\r\n    ToolboxComponent,\r\n    TitleComponent,\r\n    LegendComponent,\r\n    DataZoomComponent,\r\n    TimelineComponent,\r\n    MarkLineComponent,\r\n    MarkAreaComponent,\r\n    TooltipComponent,\r\n    // Axis2D,\r\n    // CartesianGrid,\r\n    GridComponent,\r\n\r\n    LineChart,\r\n    ScatterChart,\r\n\r\n    SVGRenderer,\r\n\r\n    CanvasRenderer,\r\n]);\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    exportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 5,\r\n        width: 20,\r\n        height: 20,\r\n        zIndex: 2,\r\n        opacity: 0.7,\r\n        cursor: 'pointer'\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nif (!String.prototype.padStart) {\r\n    // Copyright (c) 2019 Behnam Mohammadi MIT https://github.com/behnammodi/polyfill/blob/master/string.polyfill.js#L273\r\n    // eslint-disable-next-line\r\n    String.prototype.padStart = function padStart(targetLength, padString) {\r\n        targetLength = targetLength >> 0; // floor if number or convert non-number to 0;\r\n        padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n        if (this.length > targetLength) {\r\n            return String(this);\r\n        } else {\r\n            targetLength = targetLength - this.length;\r\n            if (targetLength > padString.length) {\r\n                padString += padString.repeat(targetLength / padString.length); // append to original to ensure we are longer than needed\r\n            }\r\n            return padString.slice(0, targetLength) + String(this);\r\n        }\r\n    };\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: null,\r\n            chartWidth: null,\r\n            paddings: {\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            }\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.selected = null;\r\n\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n\r\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth, undefined, this.props.compact);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.chartOption.getOption(props.data, props.config, props.actualValues);\r\n            this.applySelected();\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            try {\r\n                chartInstance.setOption(this.option, changed);\r\n            } catch (e) {\r\n                console.error('Cannot apply options: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.diff        = chart.xMax - chart.xMin;\r\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\r\n        chart.withSeconds = chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${new Date(chart.xMin)}, max: ${new Date(chart.xMax)}}`);\r\n\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = chart.xMin;\r\n            this.option.xAxis[0].max = chart.xMax;\r\n\r\n            try {\r\n                this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n                this.echartsReact.getEchartsInstance().setOption({\r\n                    xAxis: {\r\n                        min: chart.xMin,\r\n                        max: chart.xMax,\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.error('Cannot apply options 1: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    }\r\n\r\n    setNewYAxis(yAxis) {\r\n        // console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n        this.option.yAxis = yAxis;\r\n\r\n        try {\r\n            this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n                this.echartsReact.getEchartsInstance().setOption({ yAxis });\r\n        } catch (e) {\r\n            console.error('Cannot apply options: ' + JSON.stringify(this.option));\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n\r\n            const chart = this.chartOption.getHelperChartData();\r\n\r\n            if (e.event.shiftKey) {\r\n                chart.yMoved = true;\r\n                const moved = chart.lastY - (e.offsetY - chart.padTop);\r\n                chart.lastY = e.offsetY - chart.padTop;\r\n                const height = this.state.chartHeight - chart.padTop - chart.padBottom;\r\n\r\n                let shift;\r\n                let diff;\r\n                chart._yAxis.forEach(axis => {\r\n                    diff = axis.max - axis.min;\r\n                    shift = moved * diff / height;\r\n                    axis.min -= shift;\r\n                    axis.max -= shift;\r\n                });\r\n\r\n                this.setNewYAxis(chart._yAxis);\r\n            } else {\r\n                chart.xMoved = true;\r\n                const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n                chart.lastX = e.offsetX - chart.padLeft;\r\n                const diff = chart.xMax - chart.xMin;\r\n                const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / width);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n                this.setNewRange();\r\n            }\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.lastX = e.offsetX;\r\n        chart.lastY = e.offsetY;\r\n        chart.yMoved = false;\r\n        chart.xMoved = false;\r\n        chart._yAxis = JSON.parse(JSON.stringify(chart.yAxis));\r\n\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({ stopLive: true });\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        if (chart.xMoved) {\r\n            this.setNewRange(true);\r\n        }\r\n\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        if (e.event.shiftKey) {\r\n            const height = this.state.chartHeight - chart.padBottom - chart.padTop;\r\n            const y = e.offsetY - chart.padTop;\r\n            const pos = y / height;\r\n            const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n            const yAxis = JSON.parse(JSON.stringify(chart.yAxis));\r\n\r\n            chart.yAxis.forEach(axis => {\r\n                let diff = axis.max - axis.min;\r\n                const oldDiff = diff;\r\n                diff = diff * amount;\r\n                const move = oldDiff - diff;\r\n\r\n                axis.max += move * (1 - pos);\r\n                axis.min -= move * pos;\r\n            });\r\n\r\n            this.setNewYAxis(yAxis);\r\n        } else {\r\n            let diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n            const x = e.offsetX - chart.padLeft;\r\n            const pos = x / width;\r\n\r\n            const oldDiff = diff;\r\n            const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n            diff = diff * amount;\r\n            const move = oldDiff - diff;\r\n            chart.xMax += move * (1 - pos);\r\n            chart.xMin -= move * pos;\r\n\r\n            this.setNewRange();\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n        }\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            const chart = this.chartOption.getHelperChartData();\r\n            chart.lastX = touches[touches.length - 1].pageX;\r\n\r\n            if (touches.length > 1) {\r\n                chart.lastWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n            } else {\r\n                chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        if (this.mouseDown) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = false;\r\n            this.setNewRange(true);\r\n        }\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const chart = this.chartOption.getHelperChartData();\r\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\r\n        if (this.mouseDown) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                this.divResetButton.current.style.display = 'block';\r\n            }\r\n\r\n            if (touches.length > 1) {\r\n                console.log('touch move: ' + touches.length)\r\n                // zoom\r\n                const fingerWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\r\n                    let diff = chart.xMax - chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > chart.lastWidth ? 1.05 : 0.95;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    console.log(`Move: ${Math.round(move / 1000)} => ${Math.round(move * pos / 1000)} -- ${Math.round(move * (1 - pos) / 1000)}`);\r\n\r\n                    chart.xMax += move * (1 - pos);\r\n                    chart.xMin -= move * pos;\r\n\r\n                    chart.xMax = Math.round(chart.xMax);\r\n                    chart.xMin = Math.round(chart.xMin);\r\n\r\n                    this.setNewRange();\r\n                }\r\n                chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = chart.lastX - pageX;\r\n                const diff  = chart.xMax - chart.xMin;\r\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n        const items = this.divRef.current && this.divRef.current.getElementsByClassName('echarts-for-react');\r\n        const div = items && items[0];\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            if (!this.option || !this.option.useCanvas) {\r\n                this.zr.on('mousedown', this.onMouseDown);\r\n                this.zr.on('mouseup', this.onMouseUp);\r\n                this.zr.on('mousewheel', this.onMouseWheel);\r\n            } else if (div) {\r\n                div.addEventListener('touchstart', this.onTouchStart, false);\r\n                div.addEventListener('touchend', this.onTouchEnd, false);\r\n                div.addEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n\r\n            if (!!this.option || !this.option.useCanvas) {\r\n                this.zr.off('mousedown', this.onMouseDown);\r\n                this.zr.off('mouseup', this.onMouseUp);\r\n                this.zr.off('mousewheel', this.onMouseWheel);\r\n                if (this.zr && this.zr._mousemove) {\r\n                    this.zr._mousemove = false;\r\n                    this.zr.off('mousemove', this.onMouseMove);\r\n                }\r\n            } else if (div) {\r\n                div.removeEventListener('touchstart', this.onTouchStart, false);\r\n                div.removeEventListener('touchend', this.onTouchEnd, false);\r\n                div.removeEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    applySelected() {\r\n        // merge selected\r\n        if (this.selected && this.option.legend) {\r\n            Object.keys(this.selected)\r\n                .forEach(name => this.option.legend.selected[name] = this.selected[name]);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config, this.props.actualValues);\r\n\r\n            if (this.props.config.title) {\r\n                window.document.title = this.props.config.title;\r\n            } else if (this.props.config.presetId) {\r\n                window.document.title = this.props.config.presetId;\r\n            }\r\n\r\n            // console.log(JSON.stringify(this.option, null, 2));\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            this.applySelected();\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={this.option && this.option.useCanvas ? undefined : { renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    legendselectchanged: e => {\r\n                        this.selected = JSON.parse(JSON.stringify(e.selected));\r\n                    },\r\n                    rendered: e => {\r\n                        !this.props.compact && this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <IconExport\r\n                color={this.props.config.exportColor || 'default'}\r\n                className={this.props.classes.exportButton}\r\n                title={this.option && this.option.useCanvas ? I18n.t('Save chart as png') : I18n.t('Save chart as svg')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        let base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2, // only for png\r\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\r\n                        });\r\n\r\n                        // Add background to SVG\r\n                        if (!this.option || !this.option.useCanvas) {\r\n                            try {\r\n                                const data = base64.split(',');\r\n                                // decode base64\r\n                                let xml = decodeURIComponent(data[1]);\r\n                                xml = xml.replace('fill=\"none\"', 'fill=\"' + (this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF')) + '\"');\r\n                                xml = xml.replace('fill=\"transparent\"', 'fill=\"' + (this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF')) + '\"');\r\n                                base64 = data[0] + ',' + encodeURIComponent(xml);\r\n                            } catch (e) {\r\n                                console.warn('cannot attach background: ' + e);\r\n                            }\r\n                        }\r\n\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = base64;\r\n                        downloadLink.target = '_self';\r\n                        let name = '';\r\n                        if (this.props.config.l.length === 1) {\r\n                            name = this.props.config.l[0].name;\r\n                        } else {\r\n                            name = 'chart';\r\n                        }\r\n                        const option = this.option;\r\n                        if (option &&\r\n                            option.series &&\r\n                            option.series[0] &&\r\n                            option.series[0].data &&\r\n                            option.series[0].data.length) {\r\n                            const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\r\n                            try {\r\n                                downloadLink.download =\r\n                                    `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\r\n                                    `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.${this.option && this.option.useCanvas ? 'png' : 'svg'}`;\r\n                                downloadLink.click();\r\n                            } catch (e) {\r\n                                console.error(`Cannot access download: ${e}`);\r\n                                window.alert(I18n.t('Unfortunately your browser does not support this feature'));\r\n                            }\r\n                        } else {\r\n                            window.alert(I18n.t('No data found'));\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2 + 1}px)` : undefined,\r\n                height:         borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2}px)` : undefined,\r\n                background:     this.props.config.noBackground ? undefined : (this.props.config.window_bg || undefined),\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.state.chartHeight !== null ? this.renderChart() : null }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    actualValues: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n    compact: PropTypes.bool,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS, ERRORS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        const query     = Utils.parseQuery(window.location.search);\r\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            actualValues: null,\r\n            noLoader:   query.noLoader || queryHash.noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: query.noBG || queryHash.noBG || false,\r\n            compact:    query.compact || queryHash.compact || false,\r\n        };\r\n\r\n        this.inEdit =\r\n            query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit     === 'true' ||\r\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\r\n\r\n        this.divRef      = React.createRef();\r\n        this.progressRef = React.createRef();\r\n        this.progressShown = true;\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    if (this.state.seriesData) {\r\n                        this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                        this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n                    } else {\r\n                        this.setState({connected: false});\r\n                    }\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                } else {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n                        if (this.inEdit) {\r\n                            window.addEventListener('message', this.onReceiveMessage);\r\n                            if (window.self !== window.parent) {\r\n                                try {\r\n                                    window.parent.postMessage('chartReady','*');\r\n                                } catch (e) {\r\n                                    console.warn('Cannot send ready event to parent window');\r\n                                    console.error(e);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.createChartData();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (err === ERRORS.NOT_CONNECTED) {\r\n                            this.setState({connected: false});\r\n                        } else {\r\n                            this.showError(I18n.t(err));\r\n                        }\r\n                    })\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreAfterReconnection() {\r\n        this.divRef.current && (this.divRef.current.style.opacity = 1);\r\n        this.progressRef.current && !this.progressShown && (this.progressRef.current.style.display = 'none');\r\n        if (this.state.seriesData && !this.state.seriesData.find(series => series.length)) {\r\n            this.chartData.setNewRange();\r\n        }\r\n    }\r\n\r\n    createChartData(config) {\r\n        this.chartData = new ChartModel(this.socket, config, {compact: this.state.compact});\r\n        this.chartData.onError(err => {\r\n            if (err === ERRORS.NOT_CONNECTED) {\r\n                this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n            } else {\r\n                this.showError(I18n.t(err));\r\n            }\r\n        });\r\n        this.chartData.onReading(reading => this.showProgress(reading));\r\n        this.chartData.onUpdate((seriesData, actualValues) => {\r\n            const newState = {connected: true, dataLoaded: true};\r\n            seriesData   && (newState.seriesData   = seriesData);\r\n            actualValues && (newState.actualValues = actualValues);\r\n            this.setState(newState, () =>\r\n                this.showProgress(false));\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        this.progressShown = isShow;\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data !== 'chartReady') {\r\n            try {\r\n                const config = JSON.parse(message.data);\r\n                if (!this.chartData) {\r\n                    this.createChartData(config);\r\n                } else {\r\n                    this.chartData.setConfig(config);\r\n                }\r\n            } catch (e) {\r\n                return console.log('Cannot parse ' + message.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.progressShown && this.progressRef.current && this.progressRef.current.style.display !== 'none') {\r\n            this.progressRef.current.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: this.state.noBackground || config.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    actualValues={this.state.actualValues}\r\n                    config={config}\r\n                    compact={this.state.compact}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ],\r\n        beforeSend: function (event, hint) {\r\n            let ignore = false;\r\n\r\n            // ignore errors from echarts lib\r\n            if (event.exception &&\r\n                event.exception.values &&\r\n                event.exception.values[0]) {\r\n                if (event.exception.values[0].type === 'NS_ERROR_FAILURE') {\r\n                    ignore = true;\r\n                } else if (event.exception.values[0].value) {\r\n                    if (event.exception.values[0].value.includes('Microsoft YaHei')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === 'ResizeObserver loop completed with undelivered notifications.') {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `undefined is not an object (evaluating 't.get')`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'get' of undefined`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `this.painter is null`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value.includes('ioBroker is not connected')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'getDisplayList' of null`) {\r\n                        ignore = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ignore ? null : event;\r\n        },\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}