{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","NOT_CONNECTED","ChartModel","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","ticks","liveInterval","navOptions","sessionId","updateInterval","presetSubscribed","defaultHistory","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","getSystemConfig","catch","e","console","error","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","_config","clearInterval","startsWith","includes","getObject","obj","native","type","stringify","isFloatComma","lang","language","live","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","log","Date","toISOString","readOnZoomTimeout","removeEventListener","cb","index","step","end","start","_now","option","range","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","getStartStop","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","exact","last","Promise","resolve","err","_readObject","chartType","en","readOneChart","_readOneLine","_readData","splice","getState","state","upperValue","lowerValue","readMarkings","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","ChartOption","moment","themeType","calcTextWidth","Error","chart","yAxis","yAxisIndex","xMin","xMax","theme","colorCount","oneLine","commonYAxis","cfg","clip","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","areaStyle","opacity","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","xFormatter","x_labels_color","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_ticks_color","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","param","distance","textStyle","fontStyle","fontSize","line","withUnit","interpolated","toFixed","round","withSeconds","withTime","_index","date","format","getSeconds","hoverNoNulls","k","y1","y2","params","find","seriesIndex","getInterpolatedValue","filter","join","xAxisHeight","legend","left","padLeft","right","padRight","top","bottom","backgroundColor","legBg","legColor","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","getSeries","getYAxis","xAxis","getXAxis","noAnimation","grid","bg_custom","isXLabelHasBreak","tooltip","trigger","renderTooltip","axisPointer","getMarkings","ser","cY","minTick","maxTick","wMin","wMax","getLegend","getTitle","axis","canvasCalcTextWidth","fontFamily","context","document","createElement","getContext","font","metrics","measureText","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","sort","changed","clear","chartOption","getOption","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","current","style","display","getHelperChartData","moved","lastX","offsetX","chartWidth","shift","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","preventDefault","touches","originalEvent","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","React","createRef","divRef","locale","I18n","getLanguage","updateChart","getZr","_iobInstalled","ref","echarts","notMerge","lazyUpdate","opts","renderer","onEvents","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","downloadLink","body","appendChild","href","target","download","padStart","click","alert","forceUpdate","background","noBackground","borderColor","border_color","borderStyle","border_style","padding","renderExportButton","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","setConfig","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBG","inEdit","edit","progressRef","progressShown","translations","require","ownTranslations","keys","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","restoreAfterReconnection","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","ERRORS","showError","onError","onReading","reading","showProgress","onUpdate","dataLoaded","isShow","destroy","palette","errorText","onClose","prevProps","prevState","snapshot","getConfig","MD5","root","default","primary","key","renderError","withTheme","Boolean","hostname","match","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.432ff283.chunk.js","sourcesContent":["/**\r\n * Parse a query string into its parts.\r\n * Copied from @iobroker/adapter-react/Components/Utils\r\n * @param {string} query\r\n * @returns {Record<string, string | boolean | number>}\r\n */\r\nfunction parseQuery(query) {\r\n    query = (query || '').toString().replace(/^\\?/, '');\r\n    /** @type {Record<string, string | boolean | number>} */\r\n    const result = {};\r\n    query.split('&').forEach(part => {\r\n        part = part.trim();\r\n        if (part) {\r\n            const parts = part.split('=');\r\n            const attr = decodeURIComponent(parts[0]).trim();\r\n            if (parts.length > 1) {\r\n                result[attr] = decodeURIComponent(parts[1]);\r\n                if (result[attr] === 'true') {\r\n                    result[attr] = true;\r\n                } else if (result[attr] === 'false') {\r\n                    result[attr] = false;\r\n                } else {\r\n                    const f = parseFloat(result[attr]);\r\n                    if (f.toString() === result[attr]) {\r\n                        result[attr] = f;\r\n                    }\r\n                }\r\n            } else {\r\n                result[attr] = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\n// Do not forget to change normalizeConfig in src/utils/flotConverter.js too\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = config.lines;\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate (from flot)\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\r\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\r\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nconst NOT_CONNECTED = 'notConnectedError';\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\r\n\r\n        this.seriesData       = [];\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n\r\n        this.navOptions       = {};\r\n\r\n        //this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.defaultHistory   = '';\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!this.serverSide) {\r\n            this.lastHash         = window.location.hash;\r\n\r\n            if (!config) {\r\n                this.onHashInstalled = true;\r\n                this.onHashChangeBound = this.onHashChange.bind(this);\r\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\r\n            }\r\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\r\n        }\r\n\r\n        this.socket.getSystemConfig()\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error('Cannot read systemConfig: ' + e);\r\n                return null;\r\n            })\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                this.defaultHistory = this.systemConfig.defaultHistory;\r\n                return this.analyseAndLoadConfig(config);\r\n            })\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else {\r\n            const query = parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset && typeof query.preset === 'string') {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                // search ID and range\r\n                const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                if (hQuery.noLoader !== undefined) {\r\n                    _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                }\r\n                if (query.noLoader !== undefined) {\r\n                    _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                }\r\n                this.config = normalizeConfig(_config);\r\n                //console.log(this.config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config          = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    this.readData();\r\n\r\n                    // subscribe on preset changes\r\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\r\n                    }\r\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${this.preset}: ${e}`)\r\n                });\r\n\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange() {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate(id, obj) {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        /*if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }*/\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        if (!this.serverSide) {\r\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\r\n            this.onHashInstalled = false;\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getSystemConfig() {\r\n        return this.systemConfig;\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || 300;\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0].value[0] > option.start) {\r\n                            _series.unshift({value: [option.start, null], exact: false});\r\n                        }\r\n                        const last = _series[_series.length - 1];\r\n                        if (last.value[0] < option.end) {\r\n                            if (this.config.l[index].validTime) {\r\n                                // If last value is not older than X seconds, assume it is still the same\r\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\r\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\r\n                                } else {\r\n                                    _series.push({value: [option.end, null], exact: false});\r\n                                }\r\n                            } else {\r\n                                _series.push({value: [option.end, null], exact: false});\r\n                            }\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null], exact: false});\r\n                        _series.push({value: [option.end,   null], exact: false});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => {\r\n                err === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(err);\r\n                err && console.error('[ChartModel] ' + err)\r\n            })\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id)\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${id}: ${e}`);\r\n                    return null;\r\n                });\r\n\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance || this.defaultHistory, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance || this.defaultHistory;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`[ChartModel] ${e}`);\r\n                })\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        })\r\n                        .catch(e => {\r\n                            e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                            console.error(`Cannot read marking ${this.config.marks[m].upperValueOrId}: ${e}`);\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(e => {\r\n                                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                                console.error(`Cannot read marking ${this.config.marks[m].lowerValueOrId}: ${e}`);\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    /*subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };*/\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        console.log('Read till ' + new Date(this.now));\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;\r\n","const THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    // on safari 9.0 it is unknown\r\n    // return num.toString().padStart(2, '0');\r\n    num = (num || '').toString();\r\n    if (num.length < 2) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nclass ChartOption {\r\n    constructor(moment, themeType, calcTextWidth, config) {\r\n        this.moment = moment;\r\n        if (!this.moment) {\r\n            throw new Error('moment must be set and initialized');\r\n        }\r\n\r\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\r\n        this.calcTextWidth = calcTextWidth;\r\n        this.themeType = themeType || 'light';\r\n        this.chart = {yAxis: []};\r\n    }\r\n\r\n    setThemeName(themeType) {\r\n        this.themeType = themeType || 'light';\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    getHelperChartData() {\r\n        return this.chart;\r\n    }\r\n\r\n    convertData(data, i, yAxisIndex) {\r\n        const values = data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(data, theme) {\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return this.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n\r\n            oneLine.shadowsize = parseFloat(oneLine.shadowsize) || 0;\r\n\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                clip: true,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'end' : undefined,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(data, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          parseFloat(oneLine.thickness) || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                cfg.areaStyle = {\r\n                    color: color,\r\n                    opacity: parseFloat(oneLine.fill) || 0,\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis() {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.config.grid_hideX,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\r\n                        color: this.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\r\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    formatter: this.xFormatter.bind(this),\r\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(theme, series) {\r\n        return this.config.l.map((oneLine, i) => {\r\n            if (!oneLine || (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined)) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (diff > 25000) {\r\n                        yMin = Math.floor(yMin / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMin = Math.floor(yMin / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMin = Math.floor(yMin / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMin = Math.floor(yMin / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMin = Math.floor(yMin);\r\n                    } else if (diff > 1) {\r\n                        yMin = Math.floor(yMin * 10) / 10;\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 25000) {\r\n                        yMax = Math.ceil(yMax / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                            'right' :\r\n                            (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !this.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(options) {\r\n        // fill markings\r\n        this.config.marks && this.config.marks.forEach(oneMark => {\r\n            if (!oneMark) {\r\n                return;\r\n            }\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n\r\n            if (!series) {\r\n                console.error('Mark line has no chart line');\r\n                return;\r\n            }\r\n\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill) || 0,\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        data: []\r\n                    };\r\n\r\n                    series.markLine.data.push({\r\n                        yAxis: limitFloat,\r\n                        name: oneMark.text,\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: param => param.name,\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: (-1 * oneMark.textOffset) || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                    });\r\n\r\n                    if (this.config.l[oneMark.lineId]) {\r\n                        // if minimum not set\r\n                        let yMin = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMin) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                                options.yAxis[0].min = limitFloat;\r\n                            }\r\n                        }\r\n                        let yMax = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMax) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                                options.yAxis[0].max = limitFloat;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, withUnit, interpolated) {\r\n        if (this.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = this.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (this.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (interpolated) {\r\n                val = Math.round(val * 10000) / 10000;\r\n            }\r\n\r\n            if (this.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    isXLabelHasBreak() {\r\n        if (this.config.timeFormat) {\r\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return false;\r\n        } else if (this.chart.withTime) {\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    xFormatter(value, _index) {\r\n        const date = new Date(value);\r\n        if (this.config.timeFormat) {\r\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n        } else if (this.chart.withTime) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n        } else {\r\n            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n        }\r\n    }\r\n\r\n    // result.val === null => start and end are null\r\n    // result === null => no start or no end\r\n    getInterpolatedValue(i, ts, type, hoverNoNulls) {\r\n        const data = this.option.series[i].data;\r\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\r\n            return null;\r\n        }\r\n\r\n        for (let k = 0; k < data.length - 1; k++) {\r\n            if (data[k].value[0] === ts) {\r\n                // Calculate\r\n                return {exact: true, val: data[k].value[1]};\r\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\r\n                const y1 = data[k].value[1];\r\n                const y2 = data[k + 1].value[1];\r\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\r\n                    return hoverNoNulls ? null : {exact: false, val: null};\r\n                }\r\n                if (type === 'boolean') {\r\n                    return {exact: false, val: y1};\r\n                }\r\n\r\n                // interpolate\r\n                const diff = data[k + 1].value[0] - data[k].value[0];\r\n                const kk = (data[k + 1].value[0] - ts) / diff;\r\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\r\n            }\r\n        }\r\n        return hoverNoNulls ? null : {exact: false, val: null};\r\n    }\r\n\r\n    renderTooltip(params) {\r\n        const ts = params[0].value[0];\r\n        const date = new Date(ts);\r\n        const hoverNoNulls = this.config.hoverNoNulls === true || this.config.hoverNoNulls === 'true';\r\n\r\n        const values = this.option.series.map((line, i) => {\r\n            const p = params.find(param => param.seriesIndex === i);\r\n            let interpolated;\r\n            if (p) {\r\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\r\n            }\r\n\r\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type, hoverNoNulls);\r\n            if (!interpolated) {\r\n                return '';\r\n            }\r\n            const val = interpolated.val === null ?\r\n                'null' :\r\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\r\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\r\n                `</div>`;\r\n        });\r\n\r\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\r\n    }\r\n\r\n    getLegend(xAxisHeight) {\r\n        return !this.config.legend || this.config.legend === 'none' ? undefined : {\r\n            data:   this.config.l.map(oneLine => oneLine.name),\r\n            show:   true,\r\n            left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n            right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n            top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  10 : undefined,\r\n            bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n            backgroundColor: this.config.legBg || undefined,\r\n            textStyle: {\r\n                color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n        }\r\n    }\r\n\r\n    getTitle(xAxisHeight) {\r\n        if (!this.config.title) {\r\n            return undefined;\r\n        }\r\n        let titlePos = {};\r\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\r\n            const parts = a.split(':');\r\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n        });\r\n\r\n        return {\r\n            text: this.config.title,\r\n            textStyle: {\r\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\r\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n            top:               titlePos.top  === 35 ? 5        : (titlePos.top   === 50 ? '50%'   : undefined),\r\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\r\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n        };\r\n    }\r\n\r\n    getOption(data, config) {\r\n        if (config) {\r\n            this.config = JSON.parse(JSON.stringify(config));\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        let theme = this.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = this.config && this.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\r\n\r\n        const series = this.getSeries(data, theme);\r\n\r\n        if (this.config.start) {\r\n            if (this.chart.xMax < this.config.end) {\r\n                this.chart.xMax = this.config.end;\r\n            }\r\n            if (this.chart.xMin > this.config.start) {\r\n                this.chart.xMin = this.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(theme, series);\r\n        const xAxis = this.getXAxis();\r\n\r\n        const option = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !this.config.noAnimation && !this.config.noLoader,\r\n            grid: {\r\n                backgroundColor: this.config.bg_custom || 'transparent',\r\n                show: !!this.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: this.isXLabelHasBreak() ? 40 : 24,\r\n            },\r\n            tooltip: this.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,*/\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series\r\n        };\r\n\r\n        this.getMarkings(option);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let yAxis = option.yAxis[ser.yAxisIndex];\r\n            if (!yAxis) {\r\n                // seems this axis is defined something else\r\n                const cY = this.config.l[ser.yAxisIndex] ? this.config.l[ser.yAxisIndex].commonYAxis : undefined;\r\n                if (cY !== undefined) {\r\n                    yAxis = option.yAxis[cY];\r\n                } else {\r\n                    console.log('Cannot find Y axis for line ' + i);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let minTick = this.yFormatter(yAxis.min, i, true);\r\n            let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\r\n\r\n            const position = yAxis.position;\r\n            if (position === 'off' || (yAxis.axisLabel && yAxis.axisLabel.color === 'rgba(0,0,0,0)')) {\r\n                return;\r\n            }\r\n            let wMin = this.calcTextWidth(minTick) + 4;\r\n            let wMax = this.calcTextWidth(maxTick) + 4;\r\n            if (position === 'left' || position === 'leftColor') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        option.grid.left = padLeft + 10;\r\n        option.grid.right = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft = option.grid.left;\r\n        this.chart.padRight = option.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        option.legend = this.getLegend(xAxisHeight);\r\n        option.title  = this.getTitle(xAxisHeight);\r\n\r\n        if (!this.config.grid_color) {\r\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        this.option = option;\r\n        return this.option;\r\n    }\r\n}\r\n\r\nexport default ChartOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\nimport {FaDownload as IconExport}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\n\r\nimport ChartOption from './ChartOption';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    exportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 5,\r\n        width: 20,\r\n        height: 20,\r\n        zIndex: 2,\r\n        opacity: 0.7,\r\n        cursor: 'pointer'\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: null,\r\n            chartWidth: null,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n\r\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.chartOption.getOption(props.data, props.config);\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            try {\r\n                chartInstance.setOption(this.option, changed);\r\n            } catch (e) {\r\n                console.error('Cannot apply options: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.diff        = chart.xMax - chart.xMin;\r\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\r\n        chart.withSeconds = chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${chart.xMin}, max: ${chart.xMax}}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = chart.xMin;\r\n            this.option.xAxis[0].max = chart.xMax;\r\n\r\n            try {\r\n                this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n                this.echartsReact.getEchartsInstance().setOption({\r\n                    xAxis: {\r\n                        min: chart.xMin,\r\n                        max: chart.xMax,\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.error('Cannot apply options 1: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const chart = this.chartOption.getHelperChartData();\r\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n            chart.lastX = e.offsetX - chart.padLeft;\r\n            const diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            chart.xMin += shift;\r\n            chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        let diff = chart.xMax - chart.xMin;\r\n        const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n        const x = e.offsetX - chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        chart.xMax += move * (1 - pos);\r\n        chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            const chart = this.chartOption.getHelperChartData();\r\n            chart.lastX = touches[touches.length - 1].pageX;\r\n            if (touches.length > 1) {\r\n                chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n            } else {\r\n                chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        e.preventDefault();\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const chart = this.chartOption.getHelperChartData();\r\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\r\n        if (this.mouseDown) {\r\n            if (touches.length > 1) {\r\n                // zoom\r\n                const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\r\n                    let diff = chart.xMax - chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > chart.lastWidth ? 1.1 : 0.9;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    chart.xMax += move * (1 - pos);\r\n                    chart.xMin -= move * pos;\r\n\r\n                    this.setNewRange();\r\n                }\r\n                chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = chart.lastX - pageX;\r\n                const diff  = chart.xMax - chart.xMin;\r\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            this.zr.on('mousedown', this.onMouseDown);\r\n\r\n            this.zr.on('mouseup', this.onMouseUp);\r\n\r\n            this.zr.on('mousewheel', this.onMouseWheel);\r\n\r\n            this.zr.on('touchstart', this.onTouchStart);\r\n\r\n            this.zr.on('touchend', this.onTouchEnd);\r\n\r\n            this.zr.on('touchmove', this.onTouchMove);\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n            this.zr.off('mousedown', this.onMouseDown);\r\n            this.zr.off('mouseup', this.onMouseUp);\r\n            this.zr.off('mousewheel', this.onMouseWheel);\r\n            if (this.zr && this.zr._mousemove) {\r\n                this.zr._mousemove = false;\r\n                this.zr.off('mousemove', this.onMouseMove);\r\n            }\r\n            this.zr.off('touchstart', this.onTouchStart);\r\n            this.zr.off('touchend', this.onTouchEnd);\r\n            this.zr.off('touchmove', this.onTouchMove);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config);\r\n\r\n            console.log(JSON.stringify(this.option, null, 2));\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <IconExport\r\n                color={this.props.config.exportColor || 'default'}\r\n                className={this.props.classes.exportButton}\r\n                title={I18n.t('Save chart as svg')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        const base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2, // only for png\r\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\r\n                        });\r\n\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = base64;\r\n                        downloadLink.target = '_self';\r\n                        let name = '';\r\n                        if (this.props.config.l.length === 1) {\r\n                            name = this.props.config.l[0].name;\r\n                        } else {\r\n                            name = 'chart';\r\n                        }\r\n                        const option = this.option;\r\n                        const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\r\n                        try {\r\n                            downloadLink.download =\r\n                                `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\r\n                                `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.svg`;\r\n                            downloadLink.click();\r\n                        } catch (e) {\r\n                            console.error('Cannot access download: ' + e);\r\n                            window.alert(I18n.t('Unfortunately your browser does not support this feature'));\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? 'calc(100% - ' + ((borderWidth + borderPadding) * 2 + 1) + 'px' : undefined,\r\n                height:         borderWidth || borderPadding ? 'calc(100% - ' + (borderWidth + borderPadding) * 2 + 'px' : undefined,\r\n                background:     this.props.config.noBackground ? undefined : this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.state.chartHeight !== null ? this.renderChart() : null }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS, ERRORS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        const query     = Utils.parseQuery(window.location.search);\r\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            noLoader:   query.noLoader || queryHash.noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: query.noBG || queryHash.noBG || false,\r\n        };\r\n\r\n        this.inEdit = query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit === 'true' ||\r\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\r\n\r\n        this.divRef      = React.createRef();\r\n        this.progressRef = React.createRef();\r\n        this.progressShown = true;\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    if (this.state.seriesData) {\r\n                        this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                        this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n                    } else {\r\n                        this.setState({connected: false});\r\n                    }\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                } else {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n                        if (this.inEdit) {\r\n                            window.addEventListener('message', this.onReceiveMessage);\r\n                            if (window.self !== window.parent) {\r\n                                try {\r\n                                    window.parent.postMessage('chartReady');\r\n                                } catch (e) {\r\n                                    console.warn('Cannot send ready event to parent window');\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.createChartData();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (err === ERRORS.NOT_CONNECTED) {\r\n                            this.setState({connected: false});\r\n                        } else {\r\n                            this.showError(I18n.t(err));\r\n                        }\r\n                    })\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreAfterReconnection() {\r\n        this.divRef.current && (this.divRef.current.style.opacity = 1);\r\n        this.progressRef.current && !this.progressShown && (this.progressRef.current.style.display = 'none');\r\n        if (this.state.seriesData && !this.state.seriesData.find(series => series.length)) {\r\n            this.chartData.setNewRange();\r\n        }\r\n    }\r\n\r\n    createChartData(config) {\r\n        this.chartData = new ChartModel(this.socket, config);\r\n        this.chartData.onError(err => {\r\n            if (err === ERRORS.NOT_CONNECTED) {\r\n                this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n            } else {\r\n                this.showError(I18n.t(err));\r\n            }\r\n        });\r\n        this.chartData.onReading(reading => this.showProgress(reading));\r\n        this.chartData.onUpdate(seriesData =>\r\n            this.setState({seriesData, connected: true, dataLoaded: true}, () =>\r\n                this.showProgress(false)));\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        this.progressShown = isShow;\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data !== 'chartReady') {\r\n            try {\r\n                const config = JSON.parse(message.data);\r\n                if (!this.chartData) {\r\n                    this.createChartData(config);\r\n                } else {\r\n                    this.chartData.setConfig(config);\r\n                }\r\n            } catch (e) {\r\n                return console.log('Cannot parse ' + message.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.progressShown && this.progressRef.current && this.progressRef.current.style.display !== 'none') {\r\n            this.progressRef.current.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: config.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}