{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","NOT_CONNECTED","ChartModel","constructor","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","actualValues","ticks","liveInterval","reading","navOptions","subscribes","sessionId","updateInterval","presetSubscribed","defaultHistory","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","onStateChangeBound","onStateChange","getSystemConfig","catch","e","console","error","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","range","_config","clearInterval","startsWith","includes","getObject","obj","native","type","stringify","isFloatComma","lang","language","live","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","setNewRange","log","Date","toISOString","readOnZoomTimeout","destroy","subscribed","unsubscribeState","removeEventListener","onUpdate","cb","onReading","onError","getConfig","setConfig","getStartStop","index","step","end","start","_now","option","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","readOneChart","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","exact","last","Promise","resolve","err","legActual","getState","state","subscribeState","_readObject","_readOneLine","chartType","en","_readData","readTicks","splice","readValue","readMarkings","upperValue","lowerValue","subscribeAll","changed","time","plusOrMinus","isOffsetInMinutes","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","brighterColor","amt","usePound","rgb","match","rgba2hex","slice","r","b","g","Gradient","colorStops","prototype","addColorStop","LinearGradient","x","y","x2","y2","globalCoord","global","call","clazz","baseClazz","clazzPrototype","F","prop","hasOwnProperty","superClass","zrUtilInherits","ChartOption","moment","themeType","calcTextWidth","Error","chart","yAxis","isTouch","document","documentElement","setThemeName","getHelperChartData","convertData","yAxisIndex","xMin","xMax","getSeries","theme","colorCount","oneLine","dashes","commonYAxis","cfg","clip","xAxisIndex","showSymbol","points","hoverAnimation","smooth","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","_color","areaStyle","opacity","getXAxis","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","xFormatter","x_labels_color","getYAxis","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_ticks_color","getMarkings","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","param","distance","textStyle","fontStyle","fontSize","line","withUnit","interpolated","toFixed","round","isXLabelHasBreak","withSeconds","withTime","_index","date","format","getSeconds","getInterpolatedValue","hoverNoNulls","k","y1","renderTooltip","params","find","seriesIndex","hoverNoInterpolate","filter","join","getLegend","xAxisHeight","legend","left","padLeft","right","padRight","top","bottom","backgroundColor","legBg","arg","legColor","orient","legendDirection","selected","hide","getTitle","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","getOption","useCanvas","xAxis","noAnimation","grid","bg_custom","tooltip","trigger","axisPointer","ser","cY","minTick","maxTick","wMin","wMax","axis","canvasCalcTextWidth","fontFamily","context","createElement","getContext","font","metrics","measureText","String","padStart","targetLength","padString","repeat","ChartView","React","Component","props","super","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","sort","clear","chartOption","applySelected","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","current","style","display","moved","lastX","offsetX","chartWidth","shift","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","oldDiff","wheelDelta","move","updateDataTimer","onTouchStart","touches","originalEvent","preventDefault","stopImmediatePropagation","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","createRef","divRef","locale","I18n","getLanguage","componentDidMount","componentWillUnmount","UNSAFE_componentWillReceiveProps","updateChart","installEventHandlers","getZr","items","getElementsByClassName","div","_iobInstalled","keys","renderChart","ref","echarts","notMerge","lazyUpdate","opts","renderer","onEvents","legendselectchanged","rendered","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","renderResetButton","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","renderExportButton","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","downloadLink","body","appendChild","href","target","download","click","alert","render","forceUpdate","background","noBackground","borderColor","border_color","borderStyle","border_style","padding","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBG","inEdit","edit","progressRef","progressShown","translations","require","ownTranslations","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","restoreAfterReconnection","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","ERRORS","showError","showProgress","newState","dataLoaded","isShow","palette","errorText","renderError","onClose","prevProps","prevState","snapshot","MD5","root","default","primary","withTheme","Boolean","hostname","version","host","Sentry","dsn","release","integrations","SentryIntegrations","beforeSend","event","hint","ignore","exception","build","ReactDOM","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1e2fbb3.chunk.js","sourcesContent":["/**\r\n * Parse a query string into its parts.\r\n * Copied from @iobroker/adapter-react/Components/Utils\r\n * @param {string} query\r\n * @returns {Record<string, string | boolean | number>}\r\n */\r\nfunction parseQuery(query) {\r\n    query = (query || '').toString().replace(/^\\?/, '');\r\n    /** @type {Record<string, string | boolean | number>} */\r\n    const result = {};\r\n    query.split('&').forEach(part => {\r\n        part = part.trim();\r\n        if (part) {\r\n            const parts = part.split('=');\r\n            const attr = decodeURIComponent(parts[0]).trim();\r\n            if (parts.length > 1) {\r\n                result[attr] = decodeURIComponent(parts[1]);\r\n                if (result[attr] === 'true') {\r\n                    result[attr] = true;\r\n                } else if (result[attr] === 'false') {\r\n                    result[attr] = false;\r\n                } else {\r\n                    const f = parseFloat(result[attr]);\r\n                    if (f.toString() === result[attr]) {\r\n                        result[attr] = f;\r\n                    }\r\n                }\r\n            } else {\r\n                result[attr] = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\n// Do not forget to change normalizeConfig in src/utils/flotConverter.js too\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = config.lines;\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate (from flot)\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\r\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\r\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nconst NOT_CONNECTED = 'notConnectedError';\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\r\n\r\n        this.seriesData       = [];\r\n        this.actualValues     = []; // only if config.legActual === true\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n        this.reading          = false;\r\n\r\n        this.navOptions       = {};\r\n\r\n        this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.defaultHistory   = '';\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!this.serverSide) {\r\n            this.lastHash         = window.location.hash;\r\n\r\n            if (!config) {\r\n                this.onHashInstalled = true;\r\n                this.onHashChangeBound = this.onHashChange.bind(this);\r\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\r\n            }\r\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\r\n        }\r\n\r\n        this.onStateChangeBound = this.onStateChange.bind(this);\r\n\r\n        this.socket.getSystemConfig()\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error('Cannot read systemConfig: ' + e);\r\n                return null;\r\n            })\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                this.defaultHistory = this.systemConfig.defaultHistory;\r\n                return this.analyseAndLoadConfig(config);\r\n            })\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else {\r\n            const query = parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset && typeof query.preset === 'string') {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                if (hQuery.preset) {\r\n                    this.preset = hQuery.preset;\r\n                    if (hQuery.range || hQuery.relativeEnd) {\r\n                        this.hash = {\r\n                            range: hQuery.range,\r\n                            relativeEnd: hQuery.relativeEnd\r\n                        };\r\n                    }\r\n                } else {\r\n                    // search ID and range\r\n                    const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                    if (hQuery.noLoader !== undefined) {\r\n                        _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                    }\r\n                    if (query.noLoader !== undefined) {\r\n                        _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                    }\r\n                    this.config = normalizeConfig(_config);\r\n                    //console.log(this.config);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config          = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    if (this.hash && this.hash.range) {\r\n                        this.config.range = this.hash.range;\r\n                    }\r\n                    if (this.hash && this.hash.relativeEnd) {\r\n                        this.config.relativeEnd = this.hash.relativeEnd;\r\n                    }\r\n\r\n                    this.readData();\r\n\r\n                    // subscribe on preset changes\r\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\r\n                    }\r\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${this.preset}: ${e}`)\r\n                });\r\n\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange() {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate(id, obj) {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChangeBound));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        if (!this.serverSide) {\r\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\r\n            this.onHashInstalled = false;\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getSystemConfig() {\r\n        return this.systemConfig;\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || 300;\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0].value[0] > option.start) {\r\n                            _series.unshift({value: [option.start, null], exact: false});\r\n                        }\r\n                        const last = _series[_series.length - 1];\r\n                        if (last.value[0] < option.end) {\r\n                            if (this.config.l[index].validTime) {\r\n                                // If last value is not older than X seconds, assume it is still the same\r\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\r\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\r\n                                } else {\r\n                                    _series.push({value: [option.end, null], exact: false});\r\n                                }\r\n                            } else {\r\n                                _series.push({value: [option.end, null], exact: false});\r\n                            }\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null], exact: false});\r\n                        _series.push({value: [option.end,   null], exact: false});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => {\r\n                err === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(err);\r\n                err && console.error('[ChartModel] ' + err)\r\n            })\r\n            .then(() => {\r\n                if (this.config.legActual) {\r\n                    // read current value\r\n                    return this.socket.getState(id)\r\n                        .then(state => this.actualValues[index] = state && state.val && state.val !== null && state.val !== undefined ? state.val : null)\r\n                        .catch(e => {\r\n                            console.warn(`Cannot read last value of ${id}: ${e}`);\r\n                            this.actualValues[index] = null;\r\n                        })\r\n                        .then(() => {\r\n                            if (!this.subscribes.includes(id)) {\r\n                                this.subscribes.push(id);\r\n                                this.subscribed = true;\r\n                                this.socket.subscribeState(id, this.onStateChangeBound);\r\n                            }\r\n                        })\r\n                } else {\r\n                    return Promise.resolve();\r\n                }\r\n            })\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id)\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${id}: ${e}`);\r\n                    return null;\r\n                });\r\n\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance || this.defaultHistory, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance || this.defaultHistory;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`[ChartModel] ${e}`);\r\n                })\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        })\r\n                        .catch(e => {\r\n                            e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                            console.error(`Cannot read marking ${this.config.marks[m].upperValueOrId}: ${e}`);\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(e => {\r\n                                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                                console.error(`Cannot read marking ${this.config.marks[m].lowerValueOrId}: ${e}`);\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChangeBound);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange(id, state) {\r\n        if (!id || !state || !this.actualValues || this.reading) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        let changed = false;\r\n        for (let m = 0; m < this.config.l.length; m++) {\r\n            if (this.config.l[m].id === id) {\r\n                if (this.actualValues[m] !== state.val) {\r\n                    this.actualValues[m] = state.val;\r\n                    changed = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        changed && this.onUpdateFunc(null, this.actualValues);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        console.log('Read till ' + new Date(this.now));\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.reading = true;\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.reading = false;\r\n                            this.onUpdateFunc(this.seriesData, this.actualValues);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n            this.reading = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;\r\n","const THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    // on safari 9.0 it is unknown\r\n    // return num.toString().padStart(2, '0');\r\n    num = (num || '').toString();\r\n    if (num.length < 2) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nfunction rgba2hex(color) {\r\n    const rgb = color.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\r\n    return rgb ?\r\n        '#' +\r\n        padding2(parseInt(rgb[1], 10).toString(16)) +\r\n        padding2(parseInt(rgb[2], 10).toString(16)) +\r\n        padding2(parseInt(rgb[3], 10).toString(16)) : color;\r\n}\r\n\r\nfunction brighterColor(color, amt) {\r\n    let usePound = false;\r\n\r\n    if (color.includes('rgb')) {\r\n        color = rgba2hex(color);\r\n    }\r\n\r\n    if (color[0] === '#') {\r\n        color = color.slice(1);\r\n        usePound = true;\r\n    }\r\n\r\n    const num = parseInt(color,16);\r\n\r\n    let r = (num >> 16) + amt;\r\n    if (r > 255) {\r\n        r = 255;\r\n    } else if (r < 0) {\r\n        r = 0;\r\n    }\r\n\r\n    let b = ((num >> 8) & 0x00FF) + amt;\r\n    if (b > 255) {\r\n        b = 255;\r\n    } else if (b < 0) {\r\n        b = 0;\r\n    }\r\n\r\n    let g = (num & 0x0000FF) + amt;\r\n    if (g > 255) {\r\n        g = 255;\r\n    } else if (g < 0) {\r\n        g = 0;\r\n    }\r\n\r\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\n//----- copied from\r\nconst Gradient = function (colorStops) {\r\n    this.colorStops = colorStops || [];\r\n};\r\n\r\nGradient.prototype = {\r\n    constructor: Gradient,\r\n    addColorStop: function (offset, color) {\r\n        this.colorStops.push({\r\n            offset: offset,\r\n            color: color\r\n        });\r\n    }\r\n};\r\nconst LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n    // Should do nothing more in this constructor. Because gradient can be\r\n    // declared by `color: {type: 'linear', colorStops: ...}`, where\r\n    // this constructor will not be called.\r\n    this.x = x == null ? 0 : x;\r\n    this.y = y == null ? 0 : y;\r\n    this.x2 = x2 == null ? 1 : x2;\r\n    this.y2 = y2 == null ? 0 : y2; // Can be cloned\r\n\r\n    this.type = 'linear'; // If use global coord\r\n\r\n    this.global = globalCoord || false;\r\n    Gradient.call(this, colorStops);\r\n};\r\n\r\nLinearGradient.prototype = {\r\n    constructor: LinearGradient\r\n};\r\n\r\nfunction zrUtilInherits(clazz, baseClazz) {\r\n    const clazzPrototype = clazz.prototype;\r\n\r\n    function F() {}\r\n\r\n    F.prototype = baseClazz.prototype;\r\n    clazz.prototype = new F();\r\n\r\n    for (const prop in clazzPrototype) {\r\n        if (clazzPrototype.hasOwnProperty(prop)) {\r\n            clazz.prototype[prop] = clazzPrototype[prop];\r\n        }\r\n    }\r\n\r\n    clazz.prototype.constructor = clazz;\r\n    clazz.superClass = baseClazz;\r\n}\r\nzrUtilInherits(LinearGradient, Gradient);\r\n\r\nclass ChartOption {\r\n    constructor(moment, themeType, calcTextWidth, config) {\r\n        this.moment = moment;\r\n        if (!this.moment) {\r\n            throw new Error('moment must be set and initialized');\r\n        }\r\n\r\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\r\n        this.calcTextWidth = calcTextWidth;\r\n        this.themeType = themeType || 'light';\r\n        this.chart = {yAxis: []};\r\n        this.isTouch = 'ontouchstart' in window.document.documentElement;\r\n    }\r\n\r\n    setThemeName(themeType) {\r\n        this.themeType = themeType || 'light';\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    getHelperChartData() {\r\n        return this.chart;\r\n    }\r\n\r\n    convertData(data, i, yAxisIndex) {\r\n        const values = data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(data, theme) {\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return this.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n\r\n            oneLine.shadowsize = parseFloat(oneLine.shadowsize) || 0;\r\n            if (oneLine.dashes === 'false') {\r\n                oneLine.dashes = false;\r\n            } else if (oneLine.dashes === 'true') {\r\n                oneLine.dashes = true;\r\n            }\r\n\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                clip: true,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'end' : (oneLine.chartType === 'stepsStart' ? 'start' : undefined) ,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(data, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          parseFloat(oneLine.thickness) || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                let _color;\r\n                if (!this.isTouch) {\r\n                    _color = new LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: brighterColor(color, 30)\r\n                    }, {\r\n                        offset: 1,\r\n                        color\r\n                    }]);\r\n                } else {\r\n                    _color = color;\r\n                }\r\n                cfg.areaStyle = {\r\n                    color: _color,\r\n                    opacity: parseFloat(oneLine.fill) || 0,\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis() {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.config.grid_hideX,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\r\n                        color: this.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\r\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    formatter: this.xFormatter.bind(this),\r\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(theme, series) {\r\n        return this.config.l.map((oneLine, i) => {\r\n            if (!oneLine || (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined)) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (diff > 25000) {\r\n                        yMin = Math.floor(yMin / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMin = Math.floor(yMin / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMin = Math.floor(yMin / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMin = Math.floor(yMin / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMin = Math.floor(yMin);\r\n                    } else if (diff > 1) {\r\n                        yMin = Math.floor(yMin * 10) / 10;\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 25000) {\r\n                        yMax = Math.ceil(yMax / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                            'right' :\r\n                            (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !this.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(options) {\r\n        // fill markings\r\n        this.config.marks && this.config.marks.forEach(oneMark => {\r\n            if (!oneMark) {\r\n                return;\r\n            }\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n\r\n            if (!series) {\r\n                console.error('Mark line has no chart line');\r\n                return;\r\n            }\r\n\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill) || 0,\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        data: []\r\n                    };\r\n\r\n                    series.markLine.data.push({\r\n                        yAxis: limitFloat,\r\n                        name: oneMark.text,\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: param => param.name,\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: (-1 * oneMark.textOffset) || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                    });\r\n\r\n                    if (this.config.l[oneMark.lineId]) {\r\n                        // if minimum not set\r\n                        let yMin = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMin) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                                options.yAxis[0].min = limitFloat;\r\n                            }\r\n                        }\r\n                        let yMax = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMax) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                                options.yAxis[0].max = limitFloat;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, withUnit, interpolated) {\r\n        if (this.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = this.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (this.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (interpolated) {\r\n                val = Math.round(val * 10000) / 10000;\r\n            }\r\n\r\n            if (this.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    isXLabelHasBreak() {\r\n        if (this.config.timeFormat) {\r\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return false;\r\n        } else if (this.chart.withTime) {\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    xFormatter(value, _index) {\r\n        const date = new Date(value);\r\n        if (this.config.timeFormat) {\r\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n        } else if (this.chart.withTime) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n        } else {\r\n            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n        }\r\n    }\r\n\r\n    // result.val === null => start and end are null\r\n    // result === null => no start or no end\r\n    getInterpolatedValue(i, ts, type, hoverNoNulls) {\r\n        const data = this.option.series[i].data;\r\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\r\n            return null;\r\n        }\r\n\r\n        for (let k = 0; k < data.length - 1; k++) {\r\n            if (data[k].value[0] === ts) {\r\n                // Calculate\r\n                return {exact: true, val: data[k].value[1]};\r\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\r\n                const y1 = data[k].value[1];\r\n                const y2 = data[k + 1].value[1];\r\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\r\n                    return hoverNoNulls ? null : {exact: false, val: null};\r\n                }\r\n                if (type === 'boolean') {\r\n                    return {exact: false, val: y1};\r\n                }\r\n\r\n                // interpolate\r\n                const diff = data[k + 1].value[0] - data[k].value[0];\r\n                const kk = (data[k + 1].value[0] - ts) / diff;\r\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\r\n            }\r\n        }\r\n        return hoverNoNulls ? null : {exact: false, val: null};\r\n    }\r\n\r\n    renderTooltip(params) {\r\n        const ts = params[0].value[0];\r\n        const date = new Date(ts);\r\n        const hoverNoNulls = this.config.hoverNoNulls === true || this.config.hoverNoNulls === 'true';\r\n\r\n        const values = this.option.series.map((line, i) => {\r\n            const p = params.find(param => param.seriesIndex === i);\r\n            let interpolated;\r\n            if (p) {\r\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\r\n            }\r\n\r\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type, hoverNoNulls);\r\n            if (!interpolated) {\r\n                return '';\r\n            }\r\n            if (!interpolated.exact && this.config.hoverNoInterpolate) {\r\n                return '';\r\n            }\r\n\r\n            const val = interpolated.val === null ?\r\n                'null' :\r\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\r\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\r\n                `</div>`;\r\n        });\r\n\r\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\r\n    }\r\n\r\n    getLegend(xAxisHeight, actualValues) {\r\n        if (!this.config.legend || this.config.legend === 'none') {\r\n            return undefined;\r\n        } else {\r\n            const legend = {\r\n                data:   this.config.l.map(oneLine => oneLine.name),\r\n                show:   true,\r\n                left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n                right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n                top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  10 : undefined,\r\n                bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n                backgroundColor: this.config.legBg || undefined,\r\n                formatter: (name, arg) => {\r\n                    if (this.config.legActual && actualValues) {\r\n                        for (let i = 0; i < this.config.l.length; i++) {\r\n                            if (this.config.l[i].name === name) {\r\n                                return `${name} [${this.yFormatter(actualValues[i], i, true)}]`;\r\n                            }\r\n                        }\r\n                    }\r\n                    return name;\r\n                },\r\n                textStyle: {\r\n                    color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n                },\r\n                orient: this.config.legendDirection || 'horizontal',\r\n                selected: {}\r\n            };\r\n\r\n            this.config.l.forEach(oneLine => legend.selected[oneLine.name] = oneLine.hide !== true);\r\n\r\n            return legend;\r\n        }\r\n    }\r\n\r\n    getTitle(xAxisHeight) {\r\n        if (!this.config || !this.config.title) {\r\n            return undefined;\r\n        }\r\n        let titlePos = {};\r\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\r\n            const parts = a.split(':');\r\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n        });\r\n\r\n        return {\r\n            text: this.config.title,\r\n            textStyle: {\r\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\r\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n            top:               titlePos.top  === 35 ? 5        : (titlePos.top   === 50 ? '50%'   : undefined),\r\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\r\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n        };\r\n    }\r\n\r\n    getOption(data, config, actualValues) {\r\n        if (config) {\r\n            this.config = JSON.parse(JSON.stringify(config));\r\n        }\r\n        const useCanvas = this.isTouch && this.config.zoom;\r\n        const xAxisHeight = 20;\r\n\r\n        let theme = this.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = this.config && this.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\r\n\r\n        const series = this.getSeries(data, theme);\r\n\r\n        if (this.config.start) {\r\n            if (this.chart.xMax < this.config.end) {\r\n                this.chart.xMax = this.config.end;\r\n            }\r\n            if (this.chart.xMin > this.config.start) {\r\n                this.chart.xMin = this.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(theme, series);\r\n        const xAxis = this.getXAxis();\r\n\r\n        const option = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !this.config.noAnimation && !this.config.noLoader,\r\n            grid: {\r\n                backgroundColor: this.config.bg_custom || 'transparent',\r\n                show: !!this.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: this.isXLabelHasBreak() ? 40 : 24,\r\n            },\r\n            tooltip: this.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,*/\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series,\r\n            useCanvas\r\n        };\r\n\r\n        this.getMarkings(option);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let yAxis = option.yAxis[ser.yAxisIndex];\r\n            if (!yAxis) {\r\n                // seems this axis is defined something else\r\n                const cY = this.config.l[ser.yAxisIndex] ? this.config.l[ser.yAxisIndex].commonYAxis : undefined;\r\n                if (cY !== undefined) {\r\n                    yAxis = option.yAxis[cY];\r\n                } else {\r\n                    console.log('Cannot find Y axis for line ' + i);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let minTick = this.yFormatter(yAxis.min, i, true);\r\n            let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\r\n\r\n            const position = yAxis.position;\r\n            if (position === 'off' || (yAxis.axisLabel && yAxis.axisLabel.color === 'rgba(0,0,0,0)')) {\r\n                return;\r\n            }\r\n            let wMin = this.calcTextWidth(minTick) + 4;\r\n            let wMax = this.calcTextWidth(maxTick) + 4;\r\n            if (position === 'left' || position === 'leftColor') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        option.grid.left    = padLeft  + 10;\r\n        option.grid.right   = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft  = option.grid.left;\r\n        this.chart.padRight = option.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        option.legend = this.getLegend(xAxisHeight, actualValues);\r\n        option.title  = this.getTitle(xAxisHeight);\r\n\r\n        if (!this.config.grid_color) {\r\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        this.option = option;\r\n        return this.option;\r\n    }\r\n}\r\n\r\nexport default ChartOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\nimport {FaDownload as IconExport}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\nimport 'echarts/lib/coord/cartesian/Grid';\r\nimport 'echarts/lib/coord/cartesian/Axis2D';\r\nimport 'zrender/lib/svg/svg';\r\nimport 'zrender/lib/canvas/canvas';\r\n\r\nimport ChartOption from './ChartOption';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    exportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 5,\r\n        width: 20,\r\n        height: 20,\r\n        zIndex: 2,\r\n        opacity: 0.7,\r\n        cursor: 'pointer'\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nif (!String.prototype.padStart) {\r\n    // Copyright (c) 2019 Behnam Mohammadi MIT https://github.com/behnammodi/polyfill/blob/master/string.polyfill.js#L273\r\n    // eslint-disable-next-line\r\n    String.prototype.padStart = function padStart(targetLength, padString) {\r\n        targetLength = targetLength >> 0; // floor if number or convert non-number to 0;\r\n        padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n        if (this.length > targetLength) {\r\n            return String(this);\r\n        } else {\r\n            targetLength = targetLength - this.length;\r\n            if (targetLength > padString.length) {\r\n                padString += padString.repeat(targetLength / padString.length); // append to original to ensure we are longer than needed\r\n            }\r\n            return padString.slice(0, targetLength) + String(this);\r\n        }\r\n    };\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: null,\r\n            chartWidth: null,\r\n\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.selected = null;\r\n\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n\r\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.chartOption.getOption(props.data, props.config, props.actualValues);\r\n            this.applySelected();\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            try {\r\n                chartInstance.setOption(this.option, changed);\r\n            } catch (e) {\r\n                console.error('Cannot apply options: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.diff        = chart.xMax - chart.xMin;\r\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\r\n        chart.withSeconds = chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${new Date(chart.xMin)}, max: ${new Date(chart.xMax)}}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = chart.xMin;\r\n            this.option.xAxis[0].max = chart.xMax;\r\n\r\n            try {\r\n                this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n                this.echartsReact.getEchartsInstance().setOption({\r\n                    xAxis: {\r\n                        min: chart.xMin,\r\n                        max: chart.xMax,\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.error('Cannot apply options 1: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const chart = this.chartOption.getHelperChartData();\r\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n            chart.lastX = e.offsetX - chart.padLeft;\r\n            const diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            chart.xMin += shift;\r\n            chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        let diff = chart.xMax - chart.xMin;\r\n        const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n        const x = e.offsetX - chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        chart.xMax += move * (1 - pos);\r\n        chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            const chart = this.chartOption.getHelperChartData();\r\n            chart.lastX = touches[touches.length - 1].pageX;\r\n\r\n            if (touches.length > 1) {\r\n                chart.lastWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n            } else {\r\n                chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        if (this.mouseDown) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = false;\r\n            this.setNewRange(true);\r\n        }\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const chart = this.chartOption.getHelperChartData();\r\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\r\n        if (this.mouseDown) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                this.divResetButton.current.style.display = 'block';\r\n            }\r\n\r\n            if (touches.length > 1) {\r\n                console.log('touch move: ' + touches.length)\r\n                // zoom\r\n                const fingerWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\r\n                    let diff = chart.xMax - chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > chart.lastWidth ? 1.05 : 0.95;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    console.log(`Move: ${Math.round(move / 1000)} => ${Math.round(move * pos / 1000)} -- ${Math.round(move * (1 - pos) / 1000)}`);\r\n\r\n                    chart.xMax += move * (1 - pos);\r\n                    chart.xMin -= move * pos;\r\n\r\n                    chart.xMax = Math.round(chart.xMax);\r\n                    chart.xMin = Math.round(chart.xMin);\r\n\r\n                    this.setNewRange();\r\n                }\r\n                chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = chart.lastX - pageX;\r\n                const diff  = chart.xMax - chart.xMin;\r\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n        const items = this.divRef.current && this.divRef.current.getElementsByClassName('echarts-for-react');\r\n        const div = items && items[0];\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            if (!this.option || !this.option.useCanvas) {\r\n                this.zr.on('mousedown', this.onMouseDown);\r\n                this.zr.on('mouseup', this.onMouseUp);\r\n                this.zr.on('mousewheel', this.onMouseWheel);\r\n            } else if (div) {\r\n                div.addEventListener('touchstart', this.onTouchStart, false);\r\n                div.addEventListener('touchend', this.onTouchEnd, false);\r\n                div.addEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n\r\n            if (!!this.option || !this.option.useCanvas) {\r\n                this.zr.off('mousedown', this.onMouseDown);\r\n                this.zr.off('mouseup', this.onMouseUp);\r\n                this.zr.off('mousewheel', this.onMouseWheel);\r\n                if (this.zr && this.zr._mousemove) {\r\n                    this.zr._mousemove = false;\r\n                    this.zr.off('mousemove', this.onMouseMove);\r\n                }\r\n            } else if (div) {\r\n                div.removeEventListener('touchstart', this.onTouchStart, false);\r\n                div.removeEventListener('touchend', this.onTouchEnd, false);\r\n                div.removeEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    applySelected() {\r\n        // merge selected\r\n        if (this.selected && this.option.legend) {\r\n            Object.keys(this.selected).forEach(name => this.option.legend.selected[name] = this.selected[name]);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config, this.props.actualValues);\r\n\r\n            // console.log(JSON.stringify(this.option, null, 2));\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            this.applySelected();\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={this.option && this.option.useCanvas ? undefined : { renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    legendselectchanged: e => {\r\n                        this.selected = JSON.parse(JSON.stringify(e.selected));\r\n                    },\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <IconExport\r\n                color={this.props.config.exportColor || 'default'}\r\n                className={this.props.classes.exportButton}\r\n                title={this.option && this.option.useCanvas ? I18n.t('Save chart as png') : I18n.t('Save chart as svg')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        const base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2, // only for png\r\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\r\n                        });\r\n\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = base64;\r\n                        downloadLink.target = '_self';\r\n                        let name = '';\r\n                        if (this.props.config.l.length === 1) {\r\n                            name = this.props.config.l[0].name;\r\n                        } else {\r\n                            name = 'chart';\r\n                        }\r\n                        const option = this.option;\r\n                        if (option &&\r\n                            option.series &&\r\n                            option.series[0] &&\r\n                            option.series[0].data &&\r\n                            option.series[0].data.length) {\r\n                            const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\r\n                            try {\r\n                                downloadLink.download =\r\n                                    `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\r\n                                    `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.${this.option && this.option.useCanvas ? 'png' : 'svg'}`;\r\n                                downloadLink.click();\r\n                            } catch (e) {\r\n                                console.error(`Cannot access download: ${e}`);\r\n                                window.alert(I18n.t('Unfortunately your browser does not support this feature'));\r\n                            }\r\n                        } else {\r\n                            window.alert(I18n.t('No data found'));\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2 + 1}px)` : undefined,\r\n                height:         borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2}px)` : undefined,\r\n                background:     this.props.config.noBackground ? undefined : this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.state.chartHeight !== null ? this.renderChart() : null }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    actualValues: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS, ERRORS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        const query     = Utils.parseQuery(window.location.search);\r\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            actualValues: null,\r\n            noLoader:   query.noLoader || queryHash.noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: query.noBG || queryHash.noBG || false,\r\n        };\r\n\r\n        this.inEdit =\r\n            query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit     === 'true' ||\r\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\r\n\r\n        this.divRef      = React.createRef();\r\n        this.progressRef = React.createRef();\r\n        this.progressShown = true;\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    if (this.state.seriesData) {\r\n                        this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                        this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n                    } else {\r\n                        this.setState({connected: false});\r\n                    }\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                } else {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n                        if (this.inEdit) {\r\n                            window.addEventListener('message', this.onReceiveMessage);\r\n                            if (window.self !== window.parent) {\r\n                                try {\r\n                                    window.parent.postMessage('chartReady','*');\r\n                                } catch (e) {\r\n                                    console.warn('Cannot send ready event to parent window');\r\n                                    console.error(e);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.createChartData();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (err === ERRORS.NOT_CONNECTED) {\r\n                            this.setState({connected: false});\r\n                        } else {\r\n                            this.showError(I18n.t(err));\r\n                        }\r\n                    })\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreAfterReconnection() {\r\n        this.divRef.current && (this.divRef.current.style.opacity = 1);\r\n        this.progressRef.current && !this.progressShown && (this.progressRef.current.style.display = 'none');\r\n        if (this.state.seriesData && !this.state.seriesData.find(series => series.length)) {\r\n            this.chartData.setNewRange();\r\n        }\r\n    }\r\n\r\n    createChartData(config) {\r\n        this.chartData = new ChartModel(this.socket, config);\r\n        this.chartData.onError(err => {\r\n            if (err === ERRORS.NOT_CONNECTED) {\r\n                this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n            } else {\r\n                this.showError(I18n.t(err));\r\n            }\r\n        });\r\n        this.chartData.onReading(reading => this.showProgress(reading));\r\n        this.chartData.onUpdate((seriesData, actualValues) => {\r\n            const newState = {connected: true, dataLoaded: true};\r\n            seriesData   && (newState.seriesData   = seriesData);\r\n            actualValues && (newState.actualValues = actualValues);\r\n            this.setState(newState, () =>\r\n                this.showProgress(false));\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        this.progressShown = isShow;\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data !== 'chartReady') {\r\n            try {\r\n                const config = JSON.parse(message.data);\r\n                if (!this.chartData) {\r\n                    this.createChartData(config);\r\n                } else {\r\n                    this.chartData.setConfig(config);\r\n                }\r\n            } catch (e) {\r\n                return console.log('Cannot parse ' + message.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.progressShown && this.progressRef.current && this.progressRef.current.style.display !== 'none') {\r\n            this.progressRef.current.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: config.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    actualValues={this.state.actualValues}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ],\r\n        beforeSend: function (event, hint) {\r\n            let ignore = false;\r\n\r\n            // ignore errors from echarts lib\r\n            if (event.exception &&\r\n                event.exception.values &&\r\n                event.exception.values[0]) {\r\n                if (event.exception.values[0].type === 'NS_ERROR_FAILURE') {\r\n                    ignore = true;\r\n                } else if (event.exception.values[0].value) {\r\n                    if (event.exception.values[0].value.includes('Microsoft YaHei')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === 'ResizeObserver loop completed with undelivered notifications.') {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `undefined is not an object (evaluating 't.get')`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'get' of undefined`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `this.painter is null`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value.includes('ioBroker is not connected')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'getDisplayList' of null`) {\r\n                        ignore = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ignore ? null : event;\r\n        },\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}