{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","NOT_CONNECTED","ChartModel","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","actualValues","ticks","liveInterval","reading","navOptions","subscribes","sessionId","updateInterval","presetSubscribed","defaultHistory","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","onStateChangeBound","onStateChange","getSystemConfig","catch","e","console","error","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","_config","clearInterval","startsWith","includes","getObject","obj","native","type","stringify","isFloatComma","lang","language","live","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","log","Date","toISOString","readOnZoomTimeout","subscribed","unsubscribeState","removeEventListener","cb","index","step","end","start","_now","option","range","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","getStartStop","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","exact","last","Promise","resolve","err","legActual","getState","state","subscribeState","_readObject","chartType","en","readOneChart","_readOneLine","_readData","splice","upperValue","lowerValue","readMarkings","subscribeAll","changed","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","brighterColor","amt","usePound","rgb","match","rgba2hex","slice","r","b","g","Gradient","colorStops","prototype","constructor","addColorStop","LinearGradient","x","y","x2","y2","globalCoord","global","call","clazz","baseClazz","clazzPrototype","F","prop","hasOwnProperty","superClass","zrUtilInherits","ChartOption","moment","themeType","calcTextWidth","Error","chart","yAxis","isTouch","document","documentElement","yAxisIndex","xMin","xMax","theme","colorCount","oneLine","_color","commonYAxis","cfg","clip","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","areaStyle","opacity","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","xFormatter","x_labels_color","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_ticks_color","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","param","distance","textStyle","fontStyle","fontSize","line","withUnit","interpolated","toFixed","round","withSeconds","withTime","_index","date","format","getSeconds","hoverNoNulls","k","y1","params","find","seriesIndex","getInterpolatedValue","hoverNoInterpolate","filter","join","xAxisHeight","legend","left","padLeft","right","padRight","top","bottom","backgroundColor","legBg","arg","legColor","orient","legendDirection","selected","hide","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","getSeries","getYAxis","xAxis","getXAxis","noAnimation","grid","bg_custom","isXLabelHasBreak","tooltip","trigger","renderTooltip","axisPointer","getMarkings","ser","cY","minTick","maxTick","wMin","wMax","getLegend","getTitle","axis","canvasCalcTextWidth","fontFamily","context","createElement","getContext","font","metrics","measureText","String","padStart","targetLength","padString","repeat","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","sort","clear","chartOption","getOption","applySelected","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","current","style","display","getHelperChartData","moved","lastX","offsetX","chartWidth","shift","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","touches","originalEvent","preventDefault","stopImmediatePropagation","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","React","createRef","divRef","locale","I18n","getLanguage","updateChart","getZr","items","getElementsByClassName","div","_iobInstalled","keys","ref","echarts","notMerge","lazyUpdate","opts","renderer","onEvents","legendselectchanged","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","downloadLink","body","appendChild","href","target","download","click","alert","forceUpdate","background","noBackground","borderColor","border_color","borderStyle","border_style","padding","renderExportButton","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","setConfig","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBG","inEdit","edit","progressRef","progressShown","translations","require","ownTranslations","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","restoreAfterReconnection","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","ERRORS","showError","onError","onReading","showProgress","onUpdate","newState","dataLoaded","isShow","destroy","palette","errorText","onClose","prevProps","prevState","snapshot","getConfig","MD5","root","default","primary","key","renderError","withTheme","Boolean","hostname","version","host","Sentry","dsn","release","integrations","SentryIntegrations","beforeSend","event","hint","ignore","exception","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,EAAQ,KAAO,GAEjCuN,GAAsC,KAA7BlK,SAASrD,EAAQ,KAAO,IAItCuN,I,iCAGC,IAAD,OACHvJ,KAAKwE,oBACLN,aAAalE,KAAKwE,mBAClBxE,KAAKwE,kBAAoB,MAG7BxE,KAAKuF,IAAMjB,KAAKiB,MAChBpD,QAAQkC,IAAI,aAAe,IAAIC,KAAKtE,KAAKuF,MACzCvF,KAAKS,UAAYT,KAAKS,WAAa,EACnCT,KAAKS,YACDT,KAAKS,UAAY,WACjBT,KAAKS,UAAY,GAGjBT,KAAK9E,OAAOE,GACZ4E,KAAKM,SAAU,EACfN,KAAKc,eAAiBd,KAAKc,eAAc,GAmBzCd,KAAKE,WAAa,GAClBF,KAAKgJ,WAAU,kBACX,EAAKU,WAAU,SAAAC,GAAM,OACjB,EAAKP,cAAa,WAMV,EAAK9I,SAAU,EACf,EAAKO,aAAa,EAAKX,WAAY,EAAKC,yBAIxDH,KAAKe,aAAef,KAAKe,YAAY,sBACrCf,KAAKc,eAAiBd,KAAKc,eAAc,GACzCd,KAAKM,SAAU,O,mJCllCrBsJ,G,sEAAS,CACXC,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,eAAgB,CACZ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,KAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,QAAS,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,SAAU,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,MAAO,CACH,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UA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","file":"static/js/main.aa207e1c.chunk.js","sourcesContent":["/**\r\n * Parse a query string into its parts.\r\n * Copied from @iobroker/adapter-react/Components/Utils\r\n * @param {string} query\r\n * @returns {Record<string, string | boolean | number>}\r\n */\r\nfunction parseQuery(query) {\r\n    query = (query || '').toString().replace(/^\\?/, '');\r\n    /** @type {Record<string, string | boolean | number>} */\r\n    const result = {};\r\n    query.split('&').forEach(part => {\r\n        part = part.trim();\r\n        if (part) {\r\n            const parts = part.split('=');\r\n            const attr = decodeURIComponent(parts[0]).trim();\r\n            if (parts.length > 1) {\r\n                result[attr] = decodeURIComponent(parts[1]);\r\n                if (result[attr] === 'true') {\r\n                    result[attr] = true;\r\n                } else if (result[attr] === 'false') {\r\n                    result[attr] = false;\r\n                } else {\r\n                    const f = parseFloat(result[attr]);\r\n                    if (f.toString() === result[attr]) {\r\n                        result[attr] = f;\r\n                    }\r\n                }\r\n            } else {\r\n                result[attr] = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\n// Do not forget to change normalizeConfig in src/utils/flotConverter.js too\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = config.lines;\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate (from flot)\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\r\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\r\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nconst NOT_CONNECTED = 'notConnectedError';\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\r\n\r\n        this.seriesData       = [];\r\n        this.actualValues     = []; // only if config.legActual === true\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n        this.reading          = false;\r\n\r\n        this.navOptions       = {};\r\n\r\n        this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.defaultHistory   = '';\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!this.serverSide) {\r\n            this.lastHash         = window.location.hash;\r\n\r\n            if (!config) {\r\n                this.onHashInstalled = true;\r\n                this.onHashChangeBound = this.onHashChange.bind(this);\r\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\r\n            }\r\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\r\n        }\r\n\r\n        this.onStateChangeBound = this.onStateChange.bind(this);\r\n\r\n        this.socket.getSystemConfig()\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error('Cannot read systemConfig: ' + e);\r\n                return null;\r\n            })\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                this.defaultHistory = this.systemConfig.defaultHistory;\r\n                return this.analyseAndLoadConfig(config);\r\n            })\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else {\r\n            const query = parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset && typeof query.preset === 'string') {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                // search ID and range\r\n                const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                if (hQuery.noLoader !== undefined) {\r\n                    _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                }\r\n                if (query.noLoader !== undefined) {\r\n                    _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                }\r\n                this.config = normalizeConfig(_config);\r\n                //console.log(this.config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config          = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    this.readData();\r\n\r\n                    // subscribe on preset changes\r\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\r\n                    }\r\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${this.preset}: ${e}`)\r\n                });\r\n\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange() {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate(id, obj) {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChangeBound));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        if (!this.serverSide) {\r\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\r\n            this.onHashInstalled = false;\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getSystemConfig() {\r\n        return this.systemConfig;\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || 300;\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0].value[0] > option.start) {\r\n                            _series.unshift({value: [option.start, null], exact: false});\r\n                        }\r\n                        const last = _series[_series.length - 1];\r\n                        if (last.value[0] < option.end) {\r\n                            if (this.config.l[index].validTime) {\r\n                                // If last value is not older than X seconds, assume it is still the same\r\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\r\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\r\n                                } else {\r\n                                    _series.push({value: [option.end, null], exact: false});\r\n                                }\r\n                            } else {\r\n                                _series.push({value: [option.end, null], exact: false});\r\n                            }\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null], exact: false});\r\n                        _series.push({value: [option.end,   null], exact: false});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => {\r\n                err === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(err);\r\n                err && console.error('[ChartModel] ' + err)\r\n            })\r\n            .then(() => {\r\n                if (this.config.legActual) {\r\n                    // read current value\r\n                    return this.socket.getState(id)\r\n                        .then(state => this.actualValues[index] = state ? state.val || null : null)\r\n                        .catch(e => {\r\n                            console.warn(`Cannot read last value of ${id}: ${e}`);\r\n                            this.actualValues[index] = null;\r\n                        })\r\n                        .then(() => {\r\n                            if (!this.subscribes.includes(id)) {\r\n                                this.subscribes.push(id);\r\n                                this.subscribed = true;\r\n                                this.socket.subscribeState(id, this.onStateChangeBound);\r\n                            }\r\n                        })\r\n                } else {\r\n                    return Promise.resolve();\r\n                }\r\n            })\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id)\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${id}: ${e}`);\r\n                    return null;\r\n                });\r\n\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance || this.defaultHistory, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance || this.defaultHistory;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`[ChartModel] ${e}`);\r\n                })\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        })\r\n                        .catch(e => {\r\n                            e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                            console.error(`Cannot read marking ${this.config.marks[m].upperValueOrId}: ${e}`);\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(e => {\r\n                                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                                console.error(`Cannot read marking ${this.config.marks[m].lowerValueOrId}: ${e}`);\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChangeBound);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange(id, state) {\r\n        if (!id || !state || !this.actualValues || this.reading) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        let changed = false;\r\n        for (let m = 0; m < this.config.l.length; m++) {\r\n            if (this.config.l[m].id === id) {\r\n                if (this.actualValues[m] !== state.val) {\r\n                    this.actualValues[m] = state.val;\r\n                    changed = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        changed && this.onUpdateFunc(null, this.actualValues);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        console.log('Read till ' + new Date(this.now));\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.reading = true;\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.reading = false;\r\n                            this.onUpdateFunc(this.seriesData, this.actualValues);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n            this.reading = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;\r\n","const THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    // on safari 9.0 it is unknown\r\n    // return num.toString().padStart(2, '0');\r\n    num = (num || '').toString();\r\n    if (num.length < 2) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nfunction rgba2hex(color) {\r\n    const rgb = color.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\r\n    return rgb ?\r\n        '#' +\r\n        padding2(parseInt(rgb[1], 10).toString(16)) +\r\n        padding2(parseInt(rgb[2], 10).toString(16)) +\r\n        padding2(parseInt(rgb[3], 10).toString(16)) : color;\r\n}\r\n\r\nfunction brighterColor(color, amt) {\r\n    let usePound = false;\r\n\r\n    if (color.includes('rgb')) {\r\n        color = rgba2hex(color);\r\n    }\r\n\r\n    if (color[0] === '#') {\r\n        color = color.slice(1);\r\n        usePound = true;\r\n    }\r\n\r\n    const num = parseInt(color,16);\r\n\r\n    let r = (num >> 16) + amt;\r\n    if (r > 255) {\r\n        r = 255;\r\n    } else if (r < 0) {\r\n        r = 0;\r\n    }\r\n\r\n    let b = ((num >> 8) & 0x00FF) + amt;\r\n    if (b > 255) {\r\n        b = 255;\r\n    } else if (b < 0) {\r\n        b = 0;\r\n    }\r\n\r\n    let g = (num & 0x0000FF) + amt;\r\n    if (g > 255) {\r\n        g = 255;\r\n    } else if (g < 0) {\r\n        g = 0;\r\n    }\r\n\r\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\n//----- copied from\r\nconst Gradient = function (colorStops) {\r\n    this.colorStops = colorStops || [];\r\n};\r\n\r\nGradient.prototype = {\r\n    constructor: Gradient,\r\n    addColorStop: function (offset, color) {\r\n        this.colorStops.push({\r\n            offset: offset,\r\n            color: color\r\n        });\r\n    }\r\n};\r\nconst LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n    // Should do nothing more in this constructor. Because gradient can be\r\n    // declared by `color: {type: 'linear', colorStops: ...}`, where\r\n    // this constructor will not be called.\r\n    this.x = x == null ? 0 : x;\r\n    this.y = y == null ? 0 : y;\r\n    this.x2 = x2 == null ? 1 : x2;\r\n    this.y2 = y2 == null ? 0 : y2; // Can be cloned\r\n\r\n    this.type = 'linear'; // If use global coord\r\n\r\n    this.global = globalCoord || false;\r\n    Gradient.call(this, colorStops);\r\n};\r\n\r\nLinearGradient.prototype = {\r\n    constructor: LinearGradient\r\n};\r\n\r\nfunction zrUtilInherits(clazz, baseClazz) {\r\n    const clazzPrototype = clazz.prototype;\r\n\r\n    function F() {}\r\n\r\n    F.prototype = baseClazz.prototype;\r\n    clazz.prototype = new F();\r\n\r\n    for (const prop in clazzPrototype) {\r\n        if (clazzPrototype.hasOwnProperty(prop)) {\r\n            clazz.prototype[prop] = clazzPrototype[prop];\r\n        }\r\n    }\r\n\r\n    clazz.prototype.constructor = clazz;\r\n    clazz.superClass = baseClazz;\r\n}\r\nzrUtilInherits(LinearGradient, Gradient);\r\n\r\nclass ChartOption {\r\n    constructor(moment, themeType, calcTextWidth, config) {\r\n        this.moment = moment;\r\n        if (!this.moment) {\r\n            throw new Error('moment must be set and initialized');\r\n        }\r\n\r\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\r\n        this.calcTextWidth = calcTextWidth;\r\n        this.themeType = themeType || 'light';\r\n        this.chart = {yAxis: []};\r\n        this.isTouch = 'ontouchstart' in document.documentElement;\r\n    }\r\n\r\n    setThemeName(themeType) {\r\n        this.themeType = themeType || 'light';\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    getHelperChartData() {\r\n        return this.chart;\r\n    }\r\n\r\n    convertData(data, i, yAxisIndex) {\r\n        const values = data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(data, theme) {\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return this.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n\r\n            oneLine.shadowsize = parseFloat(oneLine.shadowsize) || 0;\r\n\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                clip: true,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'end' : (oneLine.chartType === 'stepsStart' ? 'start' : undefined) ,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(data, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          parseFloat(oneLine.thickness) || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                let _color;\r\n                if (!this.isTouch) {\r\n                    _color = new LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: brighterColor(color, 30)\r\n                    }, {\r\n                        offset: 1,\r\n                        color\r\n                    }]);\r\n                } else {\r\n                    _color = color;\r\n                }\r\n                cfg.areaStyle = {\r\n                    color: _color,\r\n                    opacity: parseFloat(oneLine.fill) || 0,\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis() {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.config.grid_hideX,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\r\n                        color: this.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\r\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    formatter: this.xFormatter.bind(this),\r\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(theme, series) {\r\n        return this.config.l.map((oneLine, i) => {\r\n            if (!oneLine || (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined)) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (diff > 25000) {\r\n                        yMin = Math.floor(yMin / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMin = Math.floor(yMin / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMin = Math.floor(yMin / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMin = Math.floor(yMin / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMin = Math.floor(yMin);\r\n                    } else if (diff > 1) {\r\n                        yMin = Math.floor(yMin * 10) / 10;\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 25000) {\r\n                        yMax = Math.ceil(yMax / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                            'right' :\r\n                            (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !this.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(options) {\r\n        // fill markings\r\n        this.config.marks && this.config.marks.forEach(oneMark => {\r\n            if (!oneMark) {\r\n                return;\r\n            }\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n\r\n            if (!series) {\r\n                console.error('Mark line has no chart line');\r\n                return;\r\n            }\r\n\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill) || 0,\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        data: []\r\n                    };\r\n\r\n                    series.markLine.data.push({\r\n                        yAxis: limitFloat,\r\n                        name: oneMark.text,\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: param => param.name,\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: (-1 * oneMark.textOffset) || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                    });\r\n\r\n                    if (this.config.l[oneMark.lineId]) {\r\n                        // if minimum not set\r\n                        let yMin = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMin) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                                options.yAxis[0].min = limitFloat;\r\n                            }\r\n                        }\r\n                        let yMax = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMax) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                                options.yAxis[0].max = limitFloat;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, withUnit, interpolated) {\r\n        if (this.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = this.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (this.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (interpolated) {\r\n                val = Math.round(val * 10000) / 10000;\r\n            }\r\n\r\n            if (this.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    isXLabelHasBreak() {\r\n        if (this.config.timeFormat) {\r\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return false;\r\n        } else if (this.chart.withTime) {\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    xFormatter(value, _index) {\r\n        const date = new Date(value);\r\n        if (this.config.timeFormat) {\r\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n        } else if (this.chart.withTime) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n        } else {\r\n            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n        }\r\n    }\r\n\r\n    // result.val === null => start and end are null\r\n    // result === null => no start or no end\r\n    getInterpolatedValue(i, ts, type, hoverNoNulls) {\r\n        const data = this.option.series[i].data;\r\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\r\n            return null;\r\n        }\r\n\r\n        for (let k = 0; k < data.length - 1; k++) {\r\n            if (data[k].value[0] === ts) {\r\n                // Calculate\r\n                return {exact: true, val: data[k].value[1]};\r\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\r\n                const y1 = data[k].value[1];\r\n                const y2 = data[k + 1].value[1];\r\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\r\n                    return hoverNoNulls ? null : {exact: false, val: null};\r\n                }\r\n                if (type === 'boolean') {\r\n                    return {exact: false, val: y1};\r\n                }\r\n\r\n                // interpolate\r\n                const diff = data[k + 1].value[0] - data[k].value[0];\r\n                const kk = (data[k + 1].value[0] - ts) / diff;\r\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\r\n            }\r\n        }\r\n        return hoverNoNulls ? null : {exact: false, val: null};\r\n    }\r\n\r\n    renderTooltip(params) {\r\n        const ts = params[0].value[0];\r\n        const date = new Date(ts);\r\n        const hoverNoNulls = this.config.hoverNoNulls === true || this.config.hoverNoNulls === 'true';\r\n\r\n        const values = this.option.series.map((line, i) => {\r\n            const p = params.find(param => param.seriesIndex === i);\r\n            let interpolated;\r\n            if (p) {\r\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\r\n            }\r\n\r\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type, hoverNoNulls);\r\n            if (!interpolated) {\r\n                return '';\r\n            }\r\n            if (!interpolated.exact && this.config.hoverNoInterpolate) {\r\n                return '';\r\n            }\r\n\r\n            const val = interpolated.val === null ?\r\n                'null' :\r\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\r\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\r\n                `</div>`;\r\n        });\r\n\r\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\r\n    }\r\n\r\n    getLegend(xAxisHeight, actualValues) {\r\n        if (!this.config.legend || this.config.legend === 'none') {\r\n            return undefined;\r\n        } else {\r\n            const legend = {\r\n                data:   this.config.l.map(oneLine => oneLine.name),\r\n                show:   true,\r\n                left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n                right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n                top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  10 : undefined,\r\n                bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n                backgroundColor: this.config.legBg || undefined,\r\n                formatter: (name, arg) => {\r\n                    if (this.config.legActual && actualValues) {\r\n                        for (let i = 0; i < this.config.l.length; i++) {\r\n                            if (this.config.l[i].name === name) {\r\n                                return `${name} [${this.yFormatter(actualValues[i], i, true)}]`;\r\n                            }\r\n                        }\r\n                    }\r\n                    return name;\r\n                },\r\n                textStyle: {\r\n                    color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n                },\r\n                orient: this.config.legendDirection || 'horizontal',\r\n                selected: {}\r\n            };\r\n\r\n            this.config.l.forEach(oneLine => legend.selected[oneLine.name] = oneLine.hide !== true);\r\n\r\n            return legend;\r\n        }\r\n    }\r\n\r\n    getTitle(xAxisHeight) {\r\n        if (!this.config || !this.config.title) {\r\n            return undefined;\r\n        }\r\n        let titlePos = {};\r\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\r\n            const parts = a.split(':');\r\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n        });\r\n\r\n        return {\r\n            text: this.config.title,\r\n            textStyle: {\r\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\r\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n            top:               titlePos.top  === 35 ? 5        : (titlePos.top   === 50 ? '50%'   : undefined),\r\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\r\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n        };\r\n    }\r\n\r\n    getOption(data, config, actualValues) {\r\n        if (config) {\r\n            this.config = JSON.parse(JSON.stringify(config));\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        let theme = this.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = this.config && this.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\r\n\r\n        const series = this.getSeries(data, theme);\r\n\r\n        if (this.config.start) {\r\n            if (this.chart.xMax < this.config.end) {\r\n                this.chart.xMax = this.config.end;\r\n            }\r\n            if (this.chart.xMin > this.config.start) {\r\n                this.chart.xMin = this.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(theme, series);\r\n        const xAxis = this.getXAxis();\r\n\r\n        const option = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !this.config.noAnimation && !this.config.noLoader,\r\n            grid: {\r\n                backgroundColor: this.config.bg_custom || 'transparent',\r\n                show: !!this.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: this.isXLabelHasBreak() ? 40 : 24,\r\n            },\r\n            tooltip: this.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,*/\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series\r\n        };\r\n\r\n        this.getMarkings(option);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let yAxis = option.yAxis[ser.yAxisIndex];\r\n            if (!yAxis) {\r\n                // seems this axis is defined something else\r\n                const cY = this.config.l[ser.yAxisIndex] ? this.config.l[ser.yAxisIndex].commonYAxis : undefined;\r\n                if (cY !== undefined) {\r\n                    yAxis = option.yAxis[cY];\r\n                } else {\r\n                    console.log('Cannot find Y axis for line ' + i);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let minTick = this.yFormatter(yAxis.min, i, true);\r\n            let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\r\n\r\n            const position = yAxis.position;\r\n            if (position === 'off' || (yAxis.axisLabel && yAxis.axisLabel.color === 'rgba(0,0,0,0)')) {\r\n                return;\r\n            }\r\n            let wMin = this.calcTextWidth(minTick) + 4;\r\n            let wMax = this.calcTextWidth(maxTick) + 4;\r\n            if (position === 'left' || position === 'leftColor') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        option.grid.left    = padLeft  + 10;\r\n        option.grid.right   = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft  = option.grid.left;\r\n        this.chart.padRight = option.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        option.legend = this.getLegend(xAxisHeight, actualValues);\r\n        option.title  = this.getTitle(xAxisHeight);\r\n\r\n        if (!this.config.grid_color) {\r\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        this.option = option;\r\n        return this.option;\r\n    }\r\n}\r\n\r\nexport default ChartOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\nimport {FaDownload as IconExport}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\nimport 'echarts/lib/coord/cartesian/Grid';\r\nimport 'echarts/lib/coord/cartesian/Axis2D';\r\nimport 'zrender/lib/svg/svg';\r\nimport 'zrender/lib/canvas/canvas';\r\n\r\nimport ChartOption from './ChartOption';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    exportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 5,\r\n        width: 20,\r\n        height: 20,\r\n        zIndex: 2,\r\n        opacity: 0.7,\r\n        cursor: 'pointer'\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nif (!String.prototype.padStart) {\r\n    // Copyright (c) 2019 Behnam Mohammadi MIT https://github.com/behnammodi/polyfill/blob/master/string.polyfill.js#L273\r\n    // eslint-disable-next-line\r\n    String.prototype.padStart = function padStart(targetLength, padString) {\r\n        targetLength = targetLength >> 0; // floor if number or convert non-number to 0;\r\n        padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n        if (this.length > targetLength) {\r\n            return String(this);\r\n        } else {\r\n            targetLength = targetLength - this.length;\r\n            if (targetLength > padString.length) {\r\n                padString += padString.repeat(targetLength / padString.length); // append to original to ensure we are longer than needed\r\n            }\r\n            return padString.slice(0, targetLength) + String(this);\r\n        }\r\n    };\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: null,\r\n            chartWidth: null,\r\n\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.selected = null;\r\n\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n\r\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth);\r\n\r\n        this.isTouch = 'ontouchstart' in document.documentElement;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.chartOption.getOption(props.data, props.config, props.actualValues);\r\n            this.applySelected();\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            try {\r\n                chartInstance.setOption(this.option, changed);\r\n            } catch (e) {\r\n                console.error('Cannot apply options: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.diff        = chart.xMax - chart.xMin;\r\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\r\n        chart.withSeconds = chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${new Date(chart.xMin)}, max: ${new Date(chart.xMax)}}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = chart.xMin;\r\n            this.option.xAxis[0].max = chart.xMax;\r\n\r\n            try {\r\n                this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n                this.echartsReact.getEchartsInstance().setOption({\r\n                    xAxis: {\r\n                        min: chart.xMin,\r\n                        max: chart.xMax,\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.error('Cannot apply options 1: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const chart = this.chartOption.getHelperChartData();\r\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n            chart.lastX = e.offsetX - chart.padLeft;\r\n            const diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            chart.xMin += shift;\r\n            chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        let diff = chart.xMax - chart.xMin;\r\n        const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n        const x = e.offsetX - chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        chart.xMax += move * (1 - pos);\r\n        chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            const chart = this.chartOption.getHelperChartData();\r\n            chart.lastX = touches[touches.length - 1].pageX;\r\n\r\n            if (touches.length > 1) {\r\n                chart.lastWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n            } else {\r\n                chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        if (this.mouseDown) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = false;\r\n            this.setNewRange(true);\r\n        }\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const chart = this.chartOption.getHelperChartData();\r\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\r\n        if (this.mouseDown) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                this.divResetButton.current.style.display = 'block';\r\n            }\r\n\r\n            if (touches.length > 1) {\r\n                console.log('touch move: ' + touches.length)\r\n                // zoom\r\n                const fingerWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\r\n                    let diff = chart.xMax - chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > chart.lastWidth ? 1.05 : 0.95;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    console.log(`Move: ${Math.round(move / 1000)} => ${Math.round(move * pos / 1000)} -- ${Math.round(move * (1 - pos) / 1000)}`);\r\n\r\n                    chart.xMax += move * (1 - pos);\r\n                    chart.xMin -= move * pos;\r\n\r\n                    chart.xMax = Math.round(chart.xMax);\r\n                    chart.xMin = Math.round(chart.xMin);\r\n\r\n                    this.setNewRange();\r\n                }\r\n                chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = chart.lastX - pageX;\r\n                const diff  = chart.xMax - chart.xMin;\r\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n        const items = this.divRef.current && this.divRef.current.getElementsByClassName('echarts-for-react');\r\n        const div = items && items[0];\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            if (!this.isTouch) {\r\n                this.zr.on('mousedown', this.onMouseDown);\r\n                this.zr.on('mouseup', this.onMouseUp);\r\n                this.zr.on('mousewheel', this.onMouseWheel);\r\n            } else if (div) {\r\n                div.addEventListener('touchstart', this.onTouchStart, false);\r\n                div.addEventListener('touchend', this.onTouchEnd, false);\r\n                div.addEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n\r\n            if (!this.isTouch) {\r\n                this.zr.off('mousedown', this.onMouseDown);\r\n                this.zr.off('mouseup', this.onMouseUp);\r\n                this.zr.off('mousewheel', this.onMouseWheel);\r\n                if (this.zr && this.zr._mousemove) {\r\n                    this.zr._mousemove = false;\r\n                    this.zr.off('mousemove', this.onMouseMove);\r\n                }\r\n            } else if (div) {\r\n                div.removeEventListener('touchstart', this.onTouchStart, false);\r\n                div.removeEventListener('touchend', this.onTouchEnd, false);\r\n                div.removeEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    applySelected() {\r\n        // merge selected\r\n        if (this.selected && this.option.legend) {\r\n            Object.keys(this.selected).forEach(name => this.option.legend.selected[name] = this.selected[name]);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config, this.props.actualValues);\r\n\r\n            // console.log(JSON.stringify(this.option, null, 2));\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            this.applySelected();\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={this.isTouch && this.props.config.zoom ? undefined : { renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    legendselectchanged: e => {\r\n                        this.selected = JSON.parse(JSON.stringify(e.selected));\r\n                    },\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <IconExport\r\n                color={this.props.config.exportColor || 'default'}\r\n                className={this.props.classes.exportButton}\r\n                title={this.isTouch && this.props.config.zoom ? I18n.t('Save chart as png') : I18n.t('Save chart as svg')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        const base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2, // only for png\r\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\r\n                        });\r\n\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = base64;\r\n                        downloadLink.target = '_self';\r\n                        let name = '';\r\n                        if (this.props.config.l.length === 1) {\r\n                            name = this.props.config.l[0].name;\r\n                        } else {\r\n                            name = 'chart';\r\n                        }\r\n                        const option = this.option;\r\n                        if (option &&\r\n                            option.series &&\r\n                            option.series[0] &&\r\n                            option.series[0].data &&\r\n                            option.series[0].data.length) {\r\n                            const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\r\n                            try {\r\n                                downloadLink.download =\r\n                                    `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\r\n                                    `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.${this.isTouch && this.props.config.zoom ? 'png' : 'svg'}`;\r\n                                downloadLink.click();\r\n                            } catch (e) {\r\n                                console.error(`Cannot access download: ${e}`);\r\n                                window.alert(I18n.t('Unfortunately your browser does not support this feature'));\r\n                            }\r\n                        } else {\r\n                            window.alert(I18n.t('No data found'));\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2 + 1}px)` : undefined,\r\n                height:         borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2}px)` : undefined,\r\n                background:     this.props.config.noBackground ? undefined : this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.state.chartHeight !== null ? this.renderChart() : null }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    actualValues: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS, ERRORS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        const query     = Utils.parseQuery(window.location.search);\r\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            actualValues: null,\r\n            noLoader:   query.noLoader || queryHash.noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: query.noBG || queryHash.noBG || false,\r\n        };\r\n\r\n        this.inEdit =\r\n            query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit     === 'true' ||\r\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\r\n\r\n        this.divRef      = React.createRef();\r\n        this.progressRef = React.createRef();\r\n        this.progressShown = true;\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    if (this.state.seriesData) {\r\n                        this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                        this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n                    } else {\r\n                        this.setState({connected: false});\r\n                    }\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                } else {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n                        if (this.inEdit) {\r\n                            window.addEventListener('message', this.onReceiveMessage);\r\n                            if (window.self !== window.parent) {\r\n                                try {\r\n                                    window.parent.postMessage('chartReady','*');\r\n                                } catch (e) {\r\n                                    console.warn('Cannot send ready event to parent window');\r\n                                    console.error(e);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.createChartData();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (err === ERRORS.NOT_CONNECTED) {\r\n                            this.setState({connected: false});\r\n                        } else {\r\n                            this.showError(I18n.t(err));\r\n                        }\r\n                    })\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreAfterReconnection() {\r\n        this.divRef.current && (this.divRef.current.style.opacity = 1);\r\n        this.progressRef.current && !this.progressShown && (this.progressRef.current.style.display = 'none');\r\n        if (this.state.seriesData && !this.state.seriesData.find(series => series.length)) {\r\n            this.chartData.setNewRange();\r\n        }\r\n    }\r\n\r\n    createChartData(config) {\r\n        this.chartData = new ChartModel(this.socket, config);\r\n        this.chartData.onError(err => {\r\n            if (err === ERRORS.NOT_CONNECTED) {\r\n                this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n            } else {\r\n                this.showError(I18n.t(err));\r\n            }\r\n        });\r\n        this.chartData.onReading(reading => this.showProgress(reading));\r\n        this.chartData.onUpdate((seriesData, actualValues) => {\r\n            const newState = {connected: true, dataLoaded: true};\r\n            seriesData   && (newState.seriesData   = seriesData);\r\n            actualValues && (newState.actualValues = actualValues);\r\n            this.setState(newState, () =>\r\n                this.showProgress(false));\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        this.progressShown = isShow;\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data !== 'chartReady') {\r\n            try {\r\n                const config = JSON.parse(message.data);\r\n                if (!this.chartData) {\r\n                    this.createChartData(config);\r\n                } else {\r\n                    this.chartData.setConfig(config);\r\n                }\r\n            } catch (e) {\r\n                return console.log('Cannot parse ' + message.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.progressShown && this.progressRef.current && this.progressRef.current.style.display !== 'none') {\r\n            this.progressRef.current.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: config.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    actualValues={this.state.actualValues}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ],\r\n        beforeSend: function (event, hint) {\r\n            let ignore = false;\r\n\r\n            // ignore errors from echarts lib\r\n            if (event.exception &&\r\n                event.exception.values &&\r\n                event.exception.values[0]) {\r\n                if (event.exception.values[0].type === 'NS_ERROR_FAILURE') {\r\n                    ignore = true;\r\n                } else if (event.exception.values[0].value) {\r\n                    if (event.exception.values[0].value.includes('Microsoft YaHei')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === 'ResizeObserver loop completed with undelivered notifications.') {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `undefined is not an object (evaluating 't.get')`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'get' of undefined`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `this.painter is null`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value.includes('ioBroker is not connected')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'getDisplayList' of null`) {\r\n                        ignore = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ignore ? null : event;\r\n        },\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}