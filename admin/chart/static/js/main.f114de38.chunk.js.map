{"version":3,"sources":["Components/ChartModel.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["deParam","params","coerce","obj","coerceTypes","replace","split","forEach","v","param","val","key","decodeURIComponent","i","keys","keysLast","length","test","shift","concat","isNaN","undefined","cur","Object","prototype","toString","call","push","hasOwnProperty","normalizeConfig","config","lines","l","JSON","parse","stringify","_ids","ids","colors","_colors","names","_names","units","_units","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","timeType","ChartModel","constructor","socket","onHashChange","this","lastHash","window","location","hash","analyseAndLoadConfig","onPresetUpdate","native","data","seriesData","onUpdateFunc","onStateChange","state","m","console","log","oid","parseFloat","oidl","vl","ticks","liveInterval","navOptions","subscribes","subscribed","sessionId","onReadingFunc","onErrorFunc","onHashInstalled","addEventListener","preset","query","Utils","parseQuery","search","_config","assign","getObject","then","readData","subscribeObject","destroy","unsubscribeState","unsubscribeObject","removeEventListener","onUpdate","cb","onReading","onError","getConfig","getStartStop","index","step","end","start","_now","option","range","includes","monthRange","a","addTime","now","minusMonth","Date","setMonth","getMonth","Math","floor","getTime","zoomed","zMax","zMin","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","readOneChart","yOffset","getHistoryEx","res","warn","values","_series","value","ts","unshift","Promise","resolve","catch","err","error","_readOneLine","common","type","chartType","e","systemConfig","language","en","_readData","setTimeout","readTicks","splice","readValue","getState","readMarkings","subscribeAll","s","subscribeState","time","plusOrMinus","isOffsetInMinutes","_ticks","padding2","num","ChartView","React","Component","props","super","onResize","timerResize","clearTimeout","componentDidUpdate","chartHeight","chartWidth","echartsReact","createRef","divRef","chart","componentDidMount","componentWillUnmount","convertData","getSeries","oneLine","xAxisIndex","showSymbol","hoverAnimation","lineStyle","getOption","titlePos","parts","trim","options","backgroundColor","noAnimation","title","text","textStyle","fontSize","titleSize","titleColor","padding","textVerticalAlign","bottom","textAlign","left","right","top","grid","bg_custom","show","tooltip","trigger","formatter","date","seriesIndex","toLocaleString","ms","getMilliseconds","join","axisPointer","xAxis","splitLine","grid_color","axisTick","alignWithLabel","axisLabel","withSeconds","getSeconds","withTime","x_labels_color","yAxis","boundaryGap","y_labels_color","toolbox","feature","saveAsImage","t","series","axis","updateChart","withReadData","readTimeout","diff","readHistory","getEchartsInstance","setOption","setNewRange","relativeRange","setState","setRelativeInterval","mins","dontSave","localStorage","setItem","installEventHandlers","getZr","renderChart","ref","echarts","notMerge","lazyUpdate","theme","themeType","style","opts","renderer","onEvents","rendered","LinearProgress","offsetWidth","offsetHeight","render","forceUpdate","className","classes","background","window_bg","withWidth","withStyles","maxHeight","maxWidth","overflow","App","themeInstance","createTheme","connected","reading","themeName","getThemeName","getThemeType","translations","require","I18n","setTranslations","isIFrame","self","Connection","adapterName","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","getSystemConfig","isFloatComma","chartData","showError","palette","errorText","renderError","onClose","root","default","primary","lang","getLanguage","withTheme","Boolean","hostname","match","version","host","build","ReactDOM","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f114de38.chunk.js","sourcesContent":["import Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = JSON.parse(JSON.stringify(config.lines));\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '%H:%M:%S %e.%m.%y';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config) {\r\n\r\n\r\n        this.socket = socket;\r\n\r\n        this.seriesData      = [];\r\n        this.ticks           = null;\r\n        this.liveInterval    = null;\r\n\r\n        this.navOptions      = {};\r\n\r\n        this.subscribes      = [];\r\n        this.subscribed      = false;\r\n        this.sessionId       = 1;\r\n\r\n        this.onUpdateFunc    = null;\r\n        this.onReadingFunc   = null;\r\n        this.onErrorFunc     = null;\r\n\r\n        this.lastHash = window.location.hash;\r\n\r\n        if (!config) {\r\n            this.onHashInstalled = true;\r\n            window.addEventListener('hashchange', this.onHashChange, false);\r\n        }\r\n\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = config;\r\n            }\r\n        } else {\r\n            const query = Utils.parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                // search ID and range\r\n                const _config = Object.assign(deParam((window.location.search || '').toString().replace(/^\\?/, ''), true), deParam((window.location.hash || '').toString().replace(/^#/, ''), true));\r\n                this.config = normalizeConfig(_config);\r\n            }\r\n        }\r\n\r\n        if (this.preset) {\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    this.config = normalizeConfig(obj.native.data);\r\n                    this.readData();\r\n                    this.socket.subscribeObject(this.preset, this.onPresetUpdate);\r\n                });\r\n        } else {\r\n            this.readData();\r\n        }\r\n    }\r\n\r\n    onHashChange = () => {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate = (id, obj) => {\r\n        if (obj) {\r\n            this.config = normalizeConfig(obj.native.data);\r\n        } else {\r\n            this.config = normalizeConfig({});\r\n        }\r\n\r\n        // just copy data to force update\r\n        this.seriesData = JSON.parse(JSON.stringify(this.seriesData));\r\n        this.onUpdateFunc && this.onUpdateFunc(this.seriesData);\r\n    };\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.preset) {\r\n            this.socket.unsubscribeObject(this.preset, this.onPresetUpdate);\r\n        }\r\n        this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChange, false);\r\n        this.onHashInstalled = false;\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.config.zoomed) {\r\n            this.navOptions[index].end   = this.config.l[index].zMax;\r\n            this.navOptions[index].start = this.config.l[index].zMin;\r\n            return this.navOptions[index];\r\n        } else {\r\n            if (!step) {\r\n                if (this.config.timeType === 'static') {\r\n                    let startTime;\r\n                    let endTime;\r\n                    if (this.config.start_time !== undefined) {\r\n                        startTime = this.config.start_time.split(':').map(Number);\r\n                    } else {\r\n                        startTime = [0, 0];\r\n                    }\r\n\r\n                    if (this.config.end_time !== undefined) {\r\n                        endTime = this.config.end_time.split(':').map(Number);\r\n                    } else {\r\n                        endTime = [24, 0];\r\n                    }\r\n\r\n                    // offset is in seconds\r\n                    start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                    end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                    start = this.addTime(start, this.config.l[index].offset);\r\n                    end   = this.addTime(end,   this.config.l[index].offset);\r\n                } else {\r\n                    this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                    if (this.config.relativeEnd === 'now') {\r\n                        _now = new Date(this.now);\r\n                    } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                        const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                        const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'today') {\r\n                        _now = new Date(this.now);\r\n                        _now.setDate(_now.getDate() + 1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'weekUsa') {\r\n                        //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'weekEurope') {\r\n                        //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        // If\r\n                        if (_now.getDay() === 0) {\r\n                            _now.setDate(_now.getDate() + 1);\r\n                        } else {\r\n                            _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                        }\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'month') {\r\n                        _now = new Date(this.now);\r\n                        _now.setMonth(_now.getMonth() + 1);\r\n                        _now.setDate(1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'year') {\r\n                        _now = new Date(this.now);\r\n                        _now.setFullYear(_now.getFullYear() + 1);\r\n                        _now.setMonth(0);\r\n                        _now.setDate(1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    }\r\n\r\n                    this.config.range = this.config.range || '30m';\r\n\r\n                    end   = this.addTime(_now, this.config.l[index].offset);\r\n                    start = this.addTime(end,  this.config.range, false, true);\r\n                }\r\n\r\n                option = {\r\n                    start:      start,\r\n                    end:        end,\r\n                    ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                    aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                    from:       false,\r\n                    ack:        false,\r\n                    q:          false,\r\n                    addID:      false,\r\n\r\n                };\r\n\r\n                if (this.config.aggregateType === 'step') {\r\n                    option.step = this.config.aggregateSpan * 1000;\r\n                } else if (this.config.aggregateType === 'count') {\r\n                    option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n                }\r\n\r\n                this.navOptions[index] = option;\r\n                return option;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n\r\n                option = {\r\n                    start:      start,\r\n                    end:        end,\r\n                    ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                    aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                    count:      1,\r\n                    from:       false,\r\n                    ack:        false,\r\n                    q:          false,\r\n                    addID:      false,\r\n                };\r\n\r\n                this.navOptions[index].end   = end;\r\n                this.navOptions[index].start = this.addTime(end, this.config.range, false, true);\r\n                return option;\r\n            }\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n        this.config.l[index].yOffset = parseFloat(this.config.l[index].yOffset) || 0;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        console.log(new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // if less 2000.01.01 00:00:00\r\n                        //if (values[i].ts < 946681200000) {\r\n                        //    values[i].ts = values[i].ts * 1000;\r\n                        //}\r\n\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0][0] > option.start) {\r\n                            _series.unshift({value: [option.start, null]});\r\n                        }\r\n                        if (_series[_series.length - 1][0] < option.end) {\r\n                            _series.push({value: [option.end, null]});\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null]});\r\n                        _series.push({value: [option.end,   null]});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error(err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this.socket.getObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.state.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            console.log('Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(e))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.m || !this.config.m.length || m >= this.config.m.length) {\r\n            return cb();\r\n        } else {\r\n            if (!this.config.m[m].oid && this.config.m[m].v && parseFloat(this.config.m[m].v).toString() !== this.config.m[m].v && this.config.m[m].v.includes('.')) {\r\n                if (!this.subscribes.includes(this.config.m[m].v)) {\r\n                    this.subscribes.push(this.config.m[m].v);\r\n                }\r\n\r\n                this.readValue(this.config.m[m].v, m, (index, val) => {\r\n                    this.config.m[index].oid = this.config.m[index].v;\r\n                    this.config.m[index].v   = val;\r\n\r\n                    if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                        if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                            this.subscribes.push(this.config.m[m].vl);\r\n                        }\r\n\r\n                        this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                            this.config.m[index].oidl = this.config.m[index].vl;\r\n                            this.config.m[index].vl   = val;\r\n                            setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                        });\r\n                    } else {\r\n                        setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                    }\r\n                });\r\n            } else\r\n            if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                    this.subscribes.push(this.config.m[m].vl);\r\n                }\r\n                this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                    this.config.m[index].oidl = this.config.m[index].vl;\r\n                    this.config.m[index].vl   = val;\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                });\r\n            } else {\r\n                setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.state.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        this.now = Date.now();\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        }\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction padding3(ms) {\r\n    if (ms < 10) {\r\n        return '00' + ms;\r\n    } else if (ms < 100) {\r\n        return '0' + ms;\r\n    } else {\r\n        return ms;\r\n    }\r\n}\r\n\r\nfunction padding2(num) {\r\n    if (num < 10) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n});\r\n\r\nconst GRID_PADDING_LEFT = 80;\r\nconst GRID_PADDING_RIGHT = 25;\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: 300,\r\n            chartWidth: 500,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n\r\n        this.chart = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.max + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    convertData(i) {\r\n        const values = this.props.data[i];\r\n        if (!values.length) {\r\n            return [];\r\n        }\r\n\r\n        if (!this.chart.min) {\r\n            this.chart.min = values[0].ts;\r\n            this.chart.max = values[values.length - 1].ts;\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries() {\r\n        return this.props.config.l.map((oneLine, i) => {\r\n            const cfg = {\r\n                xAxisIndex: 0,\r\n                type: 'line',\r\n                showSymbol: false,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                data: this.convertData(i),\r\n                lineStyle:{\r\n                    color: oneLine.color,\r\n                }\r\n            };\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getOption() {\r\n\r\n        console.log(JSON.stringify(this.props.config, null, 2));\r\n\r\n        let titlePos = {};\r\n        if (this.props.config.titlePos) {\r\n            this.props.config.titlePos.split(';').forEach(a => {\r\n                const parts = a.split(':');\r\n                titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n            });\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        const options = {\r\n            backgroundColor: 'transparent',\r\n            animation: !this.props.config.noAnimation && !this.props.config.noLoader,\r\n            title: {\r\n                text: this.props.config.title || '',\r\n                textStyle: {\r\n                    fontSize: this.props.config.titleSize ? parseInt(this.props.config.titleSize, 10) : undefined,\r\n                    color: this.props.config.titleColor || undefined\r\n                },\r\n                padding: [\r\n                    8,  // up\r\n                    0,  // right\r\n                    0,  // down\r\n                    90, // left\r\n                ],\r\n                textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n                textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n                top:               titlePos.top  === 35 ? 0 : (titlePos.top === 50 ? '50%' : undefined),\r\n                left:              titlePos.left === 50 ? '50%' : (titlePos.left === 65 ? 0 : undefined),\r\n                bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight : titlePos.bottom) : undefined,\r\n                right:             titlePos.right === 5 ? 25 : undefined,\r\n            },\r\n            grid: {\r\n                backgroundColor: this.props.config.bg_custom || 'transparent',\r\n                show: !!this.props.config.bg_custom,\r\n                left:   GRID_PADDING_LEFT,\r\n                top:    8,\r\n                right:  GRID_PADDING_RIGHT,\r\n                bottom: 40,\r\n            },\r\n            tooltip: this.props.config.export ? {\r\n                trigger: 'axis',\r\n                formatter: params => {\r\n                    const date = new Date(params[0].value[0]);\r\n                    const values = params.map(param => param.value[1] === null ? 'null' : param.value[1] + this.props.config.l[param.seriesIndex].unit);\r\n                    return `${date.toLocaleString()}.${padding3(date.getMilliseconds())}: ${values.join(', ')}`;\r\n                },\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis:\r\n            [{\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.props.config.grid_hideX,\r\n                    lineStyle: this.props.config.grid_color ? {\r\n                        color: this.props.config.grid_color,\r\n                    } : undefined,\r\n                },\r\n                //splitNumber: Math.round((this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT) / 50),\r\n                min: this.chart.min,\r\n                max: this.chart.max,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                },\r\n                axisLabel: {\r\n                    formatter: (value, index) => {\r\n                        const date = new Date(value);\r\n                        if (this.chart.withSeconds) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n                        } else if (this.chart.withTime) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n                        } else {\r\n                            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n                        }\r\n                    },\r\n                    color: this.props.config.x_labels_color || undefined,\r\n                }\r\n            }],\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n                    boundaryGap: [0, '100%'],\r\n                    splitLine: {\r\n                        show: !this.props.config.grid_hideY,\r\n                        lineStyle: this.props.config.grid_color ? {\r\n                            color: this.props.config.grid_color,\r\n                        } : undefined,\r\n                    },\r\n                    //splitNumber: Math.round(this.state.chartHeight / 100),\r\n                    axisLabel: {\r\n                        formatter: '{value}' + this.props.config.l[0].unit,\r\n                        color: this.props.config.y_labels_color || undefined,\r\n                    },\r\n                    axisTick: {\r\n                        alignWithLabel: true,\r\n                    }\r\n                }\r\n            ],\r\n            toolbox: this.props.config.export ? {\r\n                left: 'right',\r\n                feature: {\r\n                    /*dataZoom: {\r\n                        yAxisIndex: 'none',\r\n                        title: this.props.t('Zoom'),\r\n                    },\r\n                    restore: {\r\n                        title: this.props.t('Restore')\r\n                    },*/\r\n                    saveAsImage: {\r\n                        title: this.props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series: this.getSeries()\r\n        };\r\n        if (!this.props.config.grid_color) {\r\n            options.yAxis.forEach(axis => delete axis.splitLine.lineStyle);\r\n            options.xAxis.forEach(axis => delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.data !== state.data) {\r\n            return {data: props.data};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.max - this.chart.min;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.min,\r\n                                max: this.chart.max,\r\n                            }\r\n                        });\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.min,\r\n                        max: this.chart.max,\r\n                    }\r\n                });\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }\r\n\r\n    setNewRange(updateChart) {\r\n        /*if (this.rangeRef.current &&\r\n            this.rangeRef.current.childNodes[1] &&\r\n            this.rangeRef.current.childNodes[1].value) {\r\n            this.rangeRef.current.childNodes[0].innerHTML = '';\r\n            this.rangeRef.current.childNodes[1].value = '';\r\n        }*/\r\n        this.chart.diff        = this.chart.max - this.chart.min;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        if (this.state.relativeRange !== 'absolute') {\r\n            this.setState({ relativeRange: 'absolute' });\r\n        } else {\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: this.chart.min,\r\n                    max: this.chart.max,\r\n                }\r\n            });\r\n\r\n            updateChart && this.updateChart(this.chart.min, this.chart.max, true);\r\n        }\r\n    }\r\n\r\n    setRelativeInterval(mins, dontSave, cb) {\r\n        if (!dontSave) {\r\n            window.localStorage.setItem('App.relativeRange', mins);\r\n            this.setState({ relativeRange: mins });\r\n        }\r\n\r\n        const now = new Date();\r\n        if (now.getMilliseconds()) {\r\n            now.setMilliseconds(1000);\r\n        }\r\n        if (now.getSeconds()) {\r\n            now.setSeconds(60);\r\n        }\r\n\r\n        this.chart.max = now.getTime();\r\n\r\n        if (mins === 'day') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'week') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            // find week start\r\n            if (now.getDay()) { // if not sunday\r\n                now.setDate(now.getDate() - now.getDay() - 1);\r\n            } else {\r\n                now.setDate(now.getDate() - 6);\r\n            }\r\n\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === '2weeks') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            // find week start\r\n            if (now.getDay()) { // if not sunday\r\n                now.setDate(now.getDate() - now.getDay() - 8);\r\n            } else {\r\n                now.setDate(now.getDate() - 13);\r\n            }\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'month') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setDate(1);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'year') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setDate(1);\r\n            now.setMonth(0);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === '12months') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            this.chart.min = now.getTime();\r\n        } else {\r\n            mins = parseInt(mins, 10);\r\n            this.chart.min = this.chart.max - mins * 60000;\r\n        }\r\n        this.updateChart(this.chart.min, this.chart.max, true, cb);\r\n    }\r\n\r\n    installEventHandlers() {\r\n        const zr = this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (false && !zr._iobInstalled) {\r\n            zr._iobInstalled = true;\r\n\r\n            zr.on('mousedown', e => {\r\n                console.log('mouse down');\r\n                this.mouseDown = true;\r\n                this.chart.lastX = e.offsetX;\r\n            });\r\n\r\n            zr.on('mouseup', () => {\r\n                console.log('mouse up');\r\n                this.mouseDown = false;\r\n                this.setNewRange(true);\r\n            });\r\n\r\n            zr.on('mousewheel', e => {\r\n                let diff = this.chart.max - this.chart.min;\r\n                const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n                const x = e.offsetX - GRID_PADDING_LEFT;\r\n                const pos = x / width;\r\n\r\n                const oldDiff = diff;\r\n                const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n                diff = diff * amount;\r\n                const move = oldDiff - diff;\r\n                this.chart.max += move * (1 - pos);\r\n                this.chart.min -= move * pos;\r\n\r\n                this.setNewRange();\r\n            });\r\n\r\n            zr.on('mousemove', e => {\r\n                if (this.mouseDown) {\r\n                    const moved = this.chart.lastX - (e.offsetX - GRID_PADDING_LEFT);\r\n                    this.chart.lastX = e.offsetX - GRID_PADDING_LEFT;\r\n                    const diff = this.chart.max - this.chart.min;\r\n                    const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                    const shift = Math.round(moved * diff / width);\r\n                    this.chart.min += shift;\r\n                    this.chart.max += shift;\r\n                    this.setNewRange();\r\n                }\r\n            });\r\n\r\n            zr.on('touchstart', e => {\r\n                e.preventDefault();\r\n                this.mouseDown = true;\r\n                const touches = e.touches || e.originalEvent.touches;\r\n                if (touches) {\r\n                    this.chart.lastX = touches[touches.length - 1].pageX;\r\n                    if (touches.length > 1) {\r\n                        this.chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                    } else {\r\n                        this.chart.lastWidth = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n            zr.on('touchend', e => {\r\n                e.preventDefault();\r\n                this.mouseDown = false;\r\n                this.setNewRange(true);\r\n            });\r\n\r\n            zr.on('touchmove', e => {\r\n                e.preventDefault();\r\n                const touches = e.touches || e.originalEvent.touches;\r\n                if (!touches) {\r\n                    return;\r\n                }\r\n                const pageX = touches[touches.length - 1].pageX - GRID_PADDING_LEFT;\r\n                if (this.mouseDown) {\r\n                    if (touches.length > 1) {\r\n                        // zoom\r\n                        const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                        if (this.chart.lastWidth !== null && fingerWidth !== this.chart.lastWidth) {\r\n                            let diff = this.chart.max - this.chart.min;\r\n                            const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                            const amount     = fingerWidth > this.chart.lastWidth ? 1.1 : 0.9;\r\n                            const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                                touches[1].pageX - GRID_PADDING_LEFT + fingerWidth / 2 :\r\n                                touches[0].pageX - GRID_PADDING_LEFT + fingerWidth / 2;\r\n\r\n                            const pos = positionX / chartWidth;\r\n\r\n                            const oldDiff = diff;\r\n                            diff = diff * amount;\r\n                            const move = oldDiff - diff;\r\n\r\n                            this.chart.max += move * (1 - pos);\r\n                            this.chart.min -= move * pos;\r\n\r\n                            this.setNewRange();\r\n                        }\r\n                        this.chart.lastWidth = fingerWidth;\r\n                    } else {\r\n                        // swipe\r\n                        const moved = this.chart.lastX - pageX;\r\n                        const diff  = this.chart.max - this.chart.min;\r\n                        const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                        const shift = Math.round(moved * diff / chartWidth);\r\n                        this.chart.min += shift;\r\n                        this.chart.max += shift;\r\n\r\n                        this.setNewRange();\r\n                    }\r\n                }\r\n                this.chart.lastX = pageX;\r\n            });\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.state.data) {\r\n            const option = this.getOption();\r\n\r\n            //console.log(JSON.stringify(option, null, 2));\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.props.themeType === 'dark' ? 'dark' : '' }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const width  = this.divRef.current.offsetWidth;\r\n            const height = this.divRef.current.offsetHeight;\r\n            if (this.state.chartHeight !== height) {// || this.state.chartHeight !== height) {\r\n                setTimeout(() => this.setState({ chartHeight: height, chartWidth: width }), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        return <div ref={ this.divRef } className={ this.props.classes.chart } style={{background: this.props.config.window_bg || undefined}}>\r\n            { this.renderChart() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    socket: PropTypes.object,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            reading:    true,\r\n            seriesData: null,\r\n            noLoader:   Utils.parseQuery(window.location.search).noLoader || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n        };\r\n        this.divRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        /*if (settings && settings.translations) {\r\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\r\n        } else if (props.translations) {\r\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\r\n        }*/\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            doNotLoadAllObjects: true,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n\r\n                        this.chartData = new ChartModel(this.socket);\r\n                        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n                        this.chartData.onReading(reading => this.setState({reading}));\r\n                        this.chartData.onUpdate(seriesData => this.setState({seriesData}));\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        if (this.state.seriesData) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{width: config.width, height: config.height, background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                <ChartView\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={this.chartData.getConfig()}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-index';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://709f116e1de34029921e4f2696d6740f@sentry.iobroker.net/88',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}