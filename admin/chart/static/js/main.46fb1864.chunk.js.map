{"version":3,"sources":["Components/ChartModel.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["deParam","params","coerce","obj","coerceTypes","replace","split","forEach","v","val","param","key","decodeURIComponent","i","keys","keysLast","length","test","shift","concat","isNaN","undefined","cur","Object","prototype","toString","call","push","hasOwnProperty","normalizeConfig","config","lines","l","JSON","parse","stringify","_ids","ids","colors","_colors","names","_names","units","_units","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","timeType","ChartModel","socket","options","onHashChange","lastHash","window","location","hash","analyseAndLoadConfig","onPresetUpdate","preset","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","native","data","updateInterval","clearInterval","live","zoomData","stopLive","setInterval","readData","assign","updateTimeout","this","seriesData","ticks","liveInterval","navOptions","sessionId","presetSubscribed","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","onHashInstalled","addEventListener","getSystemConfig","then","systemConfig","common","query","Utils","parseQuery","search","_config","startsWith","includes","getObject","type","console","error","isFloatComma","lang","language","unsubscribeObject","subscribeObject","log","Date","toISOString","readOnZoomTimeout","removeEventListener","cb","index","step","end","start","_now","option","range","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","getStartStop","yOffset","parseFloat","getHistoryEx","res","warn","values","_series","value","ts","unshift","Promise","resolve","catch","err","_readObject","chartType","e","en","readOneChart","_readOneLine","_readData","splice","getState","state","m","oid","readValue","oidl","vl","readMarkings","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","padding2","num","padStart","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","clear","setOption","getOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","style","display","moved","chart","lastX","offsetX","diff","chartWidth","round","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","preventDefault","touches","originalEvent","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","React","createRef","divRef","moment","locale","I18n","getLanguage","oneLine","cfg","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","fill","areaStyle","opacity","line","toFixed","date","yFormatter","seriesIndex","format","join","titlePos","parts","trim","legend","show","left","GRID_PADDING_LEFT","right","GRID_PADDING_RIGHT","top","bottom","xAxisHeight","backgroundColor","legBg","series","getSeries","withTime","withSeconds","noAnimation","title","text","textStyle","fontSize","titleSize","titleColor","padding","textVerticalAlign","textAlign","grid","bg_custom","tooltip","trigger","formatter","renderTooltip","axisPointer","xAxis","splitLine","grid_color","axisTick","alignWithLabel","axisLabel","getSeconds","x_labels_color","yAxis","boundaryGap","y_labels_color","toolbox","feature","saveAsImage","t","axis","updateChart","getZr","_iobInstalled","ref","echarts","notMerge","lazyUpdate","theme","themeType","opts","renderer","onEvents","rendered","installEventHandlers","LinearProgress","borderWidth","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","forceUpdate","background","window_bg","borderColor","border_color","borderStyle","border_style","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","position","zIndex","paddingTop","App","themeInstance","createTheme","connected","themeName","getThemeName","getThemeType","noBackground","noBG","progressRef","translations","require","ownTranslations","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","chartData","onError","showError","onReading","reading","showProgress","onUpdate","isShow","destroy","palette","errorText","onClose","getConfig","root","default","primary","renderError","withTheme","Boolean","hostname","match","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46fb1864.chunk.js","sourcesContent":["import Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = JSON.parse(JSON.stringify(config.lines));\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '%H:%M:%S %e.%m.%y';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n\r\n        this.seriesData       = [];\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n\r\n        this.navOptions       = {};\r\n\r\n        //this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n\r\n        this.lastHash         = window.location.hash;\r\n\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!config) {\r\n            this.onHashInstalled = true;\r\n            window.addEventListener('hashchange', this.onHashChange, false);\r\n        }\r\n\r\n        this.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                return this.analyseAndLoadConfig(config);\r\n            });\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = config;\r\n            }\r\n        } else {\r\n            const query = Utils.parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                // search ID and range\r\n                const _config = Object.assign(deParam((window.location.search || '').toString().replace(/^\\?/, ''), true), deParam((window.location.hash || '').toString().replace(/^#/, ''), true));\r\n                this.config = normalizeConfig(_config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if (!this.preset.startsWith('echarts.') || !this.preset.startsWith('flot.') || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    this.readData();\r\n                    // subscribe on preset changes\r\n                    if (this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdate);\r\n                    }\r\n                    if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                });\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange = () => {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate = (id, obj) => {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        /*if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }*/\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChange, false);\r\n        this.onHashInstalled = false;\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n        this.config.l[index].yOffset = parseFloat(this.config.l[index].yOffset) || 0;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // if less 2000.01.01 00:00:00\r\n                        //if (values[i].ts < 946681200000) {\r\n                        //    values[i].ts = values[i].ts * 1000;\r\n                        //}\r\n\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0][0] > option.start) {\r\n                            _series.unshift({value: [option.start, null]});\r\n                        }\r\n                        if (_series[_series.length - 1][0] < option.end) {\r\n                            _series.push({value: [option.end, null]});\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null]});\r\n                        _series.push({value: [option.end,   null]});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error('[ChartModel] ' + err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id);\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(`[ChartModel] ${e}`))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.m || !this.config.m.length || m >= this.config.m.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            if (!this.config.m[m].oid && this.config.m[m].v && parseFloat(this.config.m[m].v).toString() !== this.config.m[m].v && this.config.m[m].v.includes('.')) {\r\n                /*if (!this.subscribes.includes(this.config.m[m].v)) {\r\n                    this.subscribes.push(this.config.m[m].v);\r\n                }*/\r\n\r\n                this.readValue(this.config.m[m].v, m, (index, val) => {\r\n                    this.config.m[index].oid = this.config.m[index].v;\r\n                    this.config.m[index].v   = val;\r\n\r\n                    if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                            this.subscribes.push(this.config.m[m].vl);\r\n                        }*/\r\n\r\n                        this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                            this.config.m[index].oidl = this.config.m[index].vl;\r\n                            this.config.m[index].vl   = val;\r\n                            setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                        });\r\n                    } else {\r\n                        setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                    }\r\n                });\r\n            } else\r\n            if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                /*if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                    this.subscribes.push(this.config.m[m].vl);\r\n                }*/\r\n                this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                    this.config.m[index].oidl = this.config.m[index].vl;\r\n                    this.config.m[index].vl   = val;\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                });\r\n            } else {\r\n                setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };*/\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nfunction padding2(num) {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nconst GRID_PADDING_LEFT = 100;\r\nconst GRID_PADDING_RIGHT = 30;\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: 300,\r\n            chartWidth: 500,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.chart = {};\r\n        moment.locale(I18n.getLanguage());\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties`);\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            chartInstance.clear();  // may be it is not required\r\n            chartInstance.setOption(this.getOption(props));\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.max + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    convertData(props, i) {\r\n        props = props || this.props;\r\n        const values = props.data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        if (this.chart.min === null || this.chart.min > values[0].value[0]) {\r\n            this.chart.min = values[0].value[0];\r\n\r\n        }\r\n        if (this.chart.max === null || this.chart.max < values[values.length - 1].value[0]) {\r\n            this.chart.max = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(props) {\r\n        props = props || this.props;\r\n        this.chart.min = null;\r\n        this.chart.max = null;\r\n\r\n        return props.config.l.map((oneLine, i) => {\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                xAxisIndex: 0,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'start' : undefined,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(props, i),\r\n                itemStyle: {\r\n                    color: oneLine.color\r\n                },\r\n                symbolSize: oneLine.chartType === 'scatterplot' || oneLine.points ? oneLine.symbolSize || 3 : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          oneLine.thickness || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    oneLine.color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (oneLine.fill) {\r\n                cfg.areaStyle = {\r\n                    color: oneLine.color,\r\n                    opacity: parseFloat(oneLine.fill),\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    yFormatter(val, line, props) {\r\n        props = props || this.props;\r\n        if (props.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        const afterComma = props.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (props.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',');\r\n            } else {\r\n                return val.toFixed(afterComma);\r\n            }\r\n        } else {\r\n            if (props.config.useComma) {\r\n                val = parseFloat(val);\r\n                return val.toString().replace('.', ',');\r\n            } else {\r\n                return val;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTooltip(props, params) {\r\n        const date = new Date(params[0].value[0]);\r\n\r\n        const values = params.map(param => {\r\n            let val = param.value[1] === null ?\r\n                'null' :\r\n                this.yFormatter(param.value[1], param.seriesIndex, props);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${props.config.l[param.seriesIndex].color}\">` +\r\n                `<div style=\"display: flex;\">${props.config.l[param.seriesIndex].name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\"><b>${val}</b>${param.value[1] !== null ? props.config.l[param.seriesIndex].unit : ''}</div>` +\r\n                `</div>`\r\n        });\r\n\r\n        const format = props.config.timeFormat || 'dddd, MMMM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${moment(date).format(format)}</b><br/>${values.join('<br/>')}`;\r\n    }\r\n\r\n    getOption(props) {\r\n        props = props || this.props;\r\n        this.debug = props.config && props.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(props.config, null, 2)}`);\r\n\r\n        let titlePos = {};\r\n        if (props.config.titlePos) {\r\n            props.config.titlePos.split(';').forEach(a => {\r\n                const parts = a.split(':');\r\n                titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n            });\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        const legend = !props.config.legend || props.config.legend === 'none' ? undefined : {\r\n            data:   props.config.l.map(oneLine => oneLine.name),\r\n            show:   true,\r\n            left:   props.config.legend === 'nw' || props.config.legend === 'sw' ?  GRID_PADDING_LEFT + 1 : undefined,\r\n            right:  props.config.legend === 'ne' || props.config.legend === 'se' ?  GRID_PADDING_RIGHT + 1 : undefined,\r\n            top:    props.config.legend === 'nw' || props.config.legend === 'ne' ?  10 : undefined,\r\n            bottom: props.config.legend === 'sw' || props.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n            backgroundColor: props.config.legBg\r\n        };\r\n\r\n        const series = this.getSeries(props);\r\n\r\n        if (props.config.start) {\r\n            if (this.chart.max < props.config.end) {\r\n                this.chart.max = props.config.end;\r\n            }\r\n            if (this.chart.min > props.config.start) {\r\n                this.chart.min = props.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.max - this.chart.min;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const options = {\r\n            backgroundColor: 'transparent',\r\n            animation: !props.config.noAnimation && !props.config.noLoader,\r\n            title: {\r\n                text: props.config.title || '',\r\n                textStyle: {\r\n                    fontSize: props.config.titleSize ? parseInt(props.config.titleSize, 10) : undefined,\r\n                    color: props.config.titleColor || undefined\r\n                },\r\n                padding: [\r\n                    8,  // up\r\n                    0,  // right\r\n                    0,  // down\r\n                    90, // left\r\n                ],\r\n                textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n                textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n                top:               titlePos.top  === 35 ? 5 : (titlePos.top === 50 ? '50%' : undefined),\r\n                left:              titlePos.left === 50 ? '50%' : (titlePos.left === 65 ? 15 : undefined),\r\n                bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 5 : titlePos.bottom) : undefined,\r\n                right:             titlePos.right === 5 ? 35 : undefined,\r\n            },\r\n            legend,\r\n            grid: {\r\n                backgroundColor: props.config.bg_custom || 'transparent',\r\n                show: !!props.config.bg_custom,\r\n                left:   GRID_PADDING_LEFT,\r\n                top:    8,\r\n                right:  GRID_PADDING_RIGHT,\r\n                bottom: 40,\r\n            },\r\n            tooltip: props.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(props, params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis: [\r\n                {\r\n                    type: 'time',\r\n                    splitLine: {\r\n                        show: !props.config.grid_hideX,\r\n                        lineStyle: props.config.grid_color ? {\r\n                            color: props.config.grid_color,\r\n                        } : undefined,\r\n                    },\r\n                    //splitNumber: Math.round((this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT) / 50),\r\n                    min: this.chart.min,\r\n                    max: this.chart.max,\r\n                    axisTick: {\r\n                        alignWithLabel: true,\r\n                    },\r\n                    axisLabel: {\r\n                        formatter: (value, index) => {\r\n                            const date = new Date(value);\r\n                            if (props.config.timeFormat) {\r\n                                return moment(date).format(props.config.timeFormat).replace('<br/>', '\\n');\r\n                            } else\r\n                            if (this.chart.withSeconds) {\r\n                                return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n                            } else if (this.chart.withTime) {\r\n                                return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n                            } else {\r\n                                return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n                            }\r\n                        },\r\n                        color: props.config.x_labels_color || undefined,\r\n                    }\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n                    boundaryGap: [0, '100%'],\r\n                    splitLine: {\r\n                        show: !props.config.grid_hideY,\r\n                        lineStyle: props.config.grid_color ? {\r\n                            color: props.config.grid_color,\r\n                        } : undefined,\r\n                    },\r\n                    //splitNumber: Math.round(this.state.chartHeight / 100),\r\n                    axisLabel: {\r\n                        formatter: function (value) {\r\n                            if (props.config.useComma) {\r\n                                value = value.toString().replace('.', ',');\r\n                            }\r\n                            return value + props.config.l[0].unit;\r\n                        },//'{value}' + props.config.l[0].unit,\r\n                        color: props.config.y_labels_color || undefined,\r\n                    },\r\n                    axisTick: {\r\n                        alignWithLabel: true,\r\n                    }\r\n                }\r\n            ],\r\n            toolbox: props.config.export === true || props.config.export === 'true' ? {\r\n                left: 'right',\r\n                feature: {\r\n                    /*dataZoom: {\r\n                        yAxisIndex: 'none',\r\n                        title: props.t('Zoom'),\r\n                    },\r\n                    restore: {\r\n                        title: props.t('Restore')\r\n                    },*/\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series\r\n        };\r\n\r\n        if (!props.config.grid_color) {\r\n            options.yAxis.forEach(axis => delete axis.splitLine.lineStyle);\r\n            options.xAxis.forEach(axis => delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.max - this.chart.min;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.min,\r\n                                max: this.chart.max,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.min,\r\n                        max: this.chart.max,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        this.chart.diff        = this.chart.max - this.chart.min;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n\r\n            this.props.onRangeChange && this.props.onRangeChange({start: this.chart.min, end: this.chart.max});\r\n        } else {\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: this.chart.min,\r\n                    max: this.chart.max,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const moved = this.chart.lastX - (e.offsetX - GRID_PADDING_LEFT);\r\n            this.chart.lastX = e.offsetX - GRID_PADDING_LEFT;\r\n            const diff = this.chart.max - this.chart.min;\r\n            const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            this.chart.min += shift;\r\n            this.chart.max += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        this.chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        let diff = this.chart.max - this.chart.min;\r\n        const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n        const x = e.offsetX - GRID_PADDING_LEFT;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        this.chart.max += move * (1 - pos);\r\n        this.chart.min -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            this.chart.lastX = touches[touches.length - 1].pageX;\r\n            if (touches.length > 1) {\r\n                this.chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n            } else {\r\n                this.chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        e.preventDefault();\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const pageX = touches[touches.length - 1].pageX - GRID_PADDING_LEFT;\r\n        if (this.mouseDown) {\r\n            if (touches.length > 1) {\r\n                // zoom\r\n                const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                if (this.chart.lastWidth !== null && fingerWidth !== this.chart.lastWidth) {\r\n                    let diff = this.chart.max - this.chart.min;\r\n                    const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                    const amount     = fingerWidth > this.chart.lastWidth ? 1.1 : 0.9;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - GRID_PADDING_LEFT + fingerWidth / 2 :\r\n                        touches[0].pageX - GRID_PADDING_LEFT + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    this.chart.max += move * (1 - pos);\r\n                    this.chart.min -= move * pos;\r\n\r\n                    this.setNewRange();\r\n                }\r\n                this.chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = this.chart.lastX - pageX;\r\n                const diff  = this.chart.max - this.chart.min;\r\n                const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                this.chart.min += shift;\r\n                this.chart.max += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        this.chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            this.zr.on('mousedown', this.onMouseDown);\r\n\r\n            this.zr.on('mouseup', this.onMouseUp);\r\n\r\n            this.zr.on('mousewheel', this.onMouseWheel);\r\n\r\n            this.zr.on('touchstart', this.onTouchStart);\r\n\r\n            this.zr.on('touchend', this.onTouchEnd);\r\n\r\n            this.zr.on('touchmove', this.onTouchMove);\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n            this.zr.off('mousedown', this.onMouseDown);\r\n            this.zr.off('mouseup', this.onMouseUp);\r\n            this.zr.off('mousewheel', this.onMouseWheel);\r\n            if (this.zr && this.zr._mousemove) {\r\n                this.zr._mousemove = false;\r\n                this.zr.off('mousemove', this.onMouseMove);\r\n            }\r\n            this.zr.off('touchstart', this.onTouchStart);\r\n            this.zr.off('touchend', this.onTouchEnd);\r\n            this.zr.off('touchmove', this.onTouchMove);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            const option = this.getOption();\r\n\r\n            //console.log(JSON.stringify(option, null, 2));\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.props.themeType === 'dark' ? 'dark' : '' }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = parseFloat(this.props.config.border_width) || 0;\r\n            const borderPadding = borderWidth ? parseFloat(this.props.config.border_padding) || 0 : 0;\r\n            const height = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== height) {\r\n                const width  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({ chartHeight: height, chartWidth: width }), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth = parseFloat(this.props.config.border_width) || 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                width:  borderWidth ? 'calc(100% - ' + (borderWidth + borderPadding) * 2 + 'px' : undefined,\r\n                height: borderWidth ? 'calc(100% - ' + (borderWidth + borderPadding) * 2 + 'px' : undefined,\r\n                background: this.props.config.window_bg || undefined,\r\n                borderWidth,\r\n                borderColor: this.props.config.border_color || undefined,\r\n                borderStyle: borderWidth ? this.props.config.border_style || 'solid' : '',\r\n                padding: borderWidth && borderPadding ? borderPadding : 0,\r\n            }}>\r\n            { this.renderResetButton() }\r\n            { this.renderChart() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    socket: PropTypes.object,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            noLoader:   Utils.parseQuery(window.location.search).noLoader || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: Utils.parseQuery(window.location.search).noBG || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noBG || false,\r\n        };\r\n        this.divRef = React.createRef();\r\n        this.progressRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n\r\n                        this.chartData = new ChartModel(this.socket);\r\n                        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n                        this.chartData.onReading(reading => this.showProgress(reading));\r\n                        this.chartData.onUpdate(seriesData => this.setState({seriesData}, () => this.showProgress(false)));\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: this.state.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}