{"version":3,"sources":["Components/ChartModel.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["normalizeConfig","config","lines","l","JSON","parse","stringify","_ids","ids","split","colors","_colors","names","_names","units","_units","i","length","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","f","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","ChartModel","socket","options","onHashChange","lastHash","window","location","hash","analyseAndLoadConfig","onPresetUpdate","obj","preset","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","native","data","updateInterval","clearInterval","live","zoomData","stopLive","setInterval","readData","Object","assign","updateTimeout","this","seriesData","ticks","liveInterval","navOptions","sessionId","presetSubscribed","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","onHashInstalled","addEventListener","getSystemConfig","then","systemConfig","common","query","Utils","parseQuery","search","hQuery","toString","replace","e","_config","startsWith","includes","getObject","type","console","error","isFloatComma","lang","language","unsubscribeObject","subscribeObject","log","Date","toISOString","readOnZoomTimeout","removeEventListener","cb","index","step","end","start","_now","option","range","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","getStartStop","yOffset","parseFloat","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","Promise","resolve","catch","err","_readObject","chartType","en","readOneChart","_readOneLine","_readData","splice","getState","state","upperValue","lowerValue","readMarkings","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","padding2","num","padStart","canvasCalcTextWidth","calcTextWidth","fontSize","fontFamily","context","document","createElement","getContext","font","metrics","measureText","ceil","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","clear","setOption","getOptions","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","style","display","moved","chart","lastX","offsetX","padLeft","diff","xMax","xMin","chartWidth","padRight","shift","round","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","preventDefault","touches","originalEvent","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","React","createRef","divRef","yAxis","moment","locale","I18n","getLanguage","yAxisIndex","oneLine","commonYAxis","cfg","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","dashes","areaStyle","opacity","yMin","yMax","isNaN","position","yaxe","splitLine","show","grid_color","axisLabel","formatter","yFormatter","y_labels_color","axisTick","alignWithLabel","forEach","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","series","markArea","borderWidth","limitFloat","markLine","label","distance","textStyle","fontStyle","line","withUnit","toFixed","params","date","filter","param","seriesName","seriesIndex","format","join","titlePos","parts","trim","getSeries","withTime","withSeconds","getYAxis","backgroundColor","noAnimation","title","titleSize","titleColor","textVerticalAlign","bottom","textAlign","left","right","top","grid","bg_custom","tooltip","trigger","renderTooltip","axisPointer","xAxis","getSeconds","x_labels_color","toolbox","feature","saveAsImage","getMarkings","ser","minTick","maxTick","wMin","wMax","legend","xAxisHeight","legBg","axis","updateChart","getZr","_iobInstalled","ref","echarts","notMerge","lazyUpdate","theme","themeType","opts","renderer","onEvents","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","forceUpdate","background","window_bg","borderColor","border_color","borderStyle","border_style","padding","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","paddingTop","App","themeInstance","createTheme","connected","themeName","getThemeName","getThemeType","noBackground","noBG","progressRef","translations","require","ownTranslations","keys","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","chartData","onError","showError","onReading","reading","showProgress","onUpdate","isShow","destroy","palette","errorText","onClose","getConfig","root","default","primary","renderError","withTheme","Boolean","hostname","match","version","host","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dfcd950.chunk.js","sourcesContent":["import Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = JSON.parse(JSON.stringify(config.lines));\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '%H:%M:%S %e.%m.%y';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n\r\n        this.seriesData       = [];\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n\r\n        this.navOptions       = {};\r\n\r\n        //this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n\r\n        this.lastHash         = window.location.hash;\r\n\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!config) {\r\n            this.onHashInstalled = true;\r\n            window.addEventListener('hashchange', this.onHashChange, false);\r\n        }\r\n\r\n        this.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                return this.analyseAndLoadConfig(config);\r\n            });\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = config;\r\n            }\r\n        } else {\r\n            const query = Utils.parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = Utils.parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                // search ID and range\r\n                const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                if (hQuery.noLoader !== undefined) {\r\n                    _config.noLoader = hQuery.noLoader;\r\n                }\r\n                if (query.noLoader !== undefined) {\r\n                    _config.noLoader = query.noLoader;\r\n                }\r\n                this.config = normalizeConfig(_config);\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if (!this.preset.startsWith('echarts.') || !this.preset.startsWith('flot.') || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    this.readData();\r\n                    // subscribe on preset changes\r\n                    if (this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdate);\r\n                    }\r\n                    if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                });\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange = () => {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate = (id, obj) => {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        /*if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }*/\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdate);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChange, false);\r\n        this.onHashInstalled = false;\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n        this.config.l[index].yOffset = parseFloat(this.config.l[index].yOffset) || 0;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // if less 2000.01.01 00:00:00\r\n                        //if (values[i].ts < 946681200000) {\r\n                        //    values[i].ts = values[i].ts * 1000;\r\n                        //}\r\n\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0][0] > option.start) {\r\n                            _series.unshift({value: [option.start, null]});\r\n                        }\r\n                        if (_series[_series.length - 1][0] < option.end) {\r\n                            _series.push({value: [option.end, null]});\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null]});\r\n                        _series.push({value: [option.end,   null]});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error('[ChartModel] ' + err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id);\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(`[ChartModel] ${e}`))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    /*subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };*/\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nfunction padding2(num) {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: 300,\r\n            chartWidth: 500,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.chart = {yAxis: []};\r\n        moment.locale(I18n.getLanguage());\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties`);\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            chartInstance.clear();  // may be it is not required\r\n            chartInstance.setOption(this.getOptions(props));\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    convertData(props, i, yAxisIndex) {\r\n        props = props || this.props;\r\n        const values = props.data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {min: null, max: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(props) {\r\n        props = props || this.props;\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n\r\n        return props.config.l.map((oneLine, i) => {\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'start' : undefined,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(props, i, yAxisIndex),\r\n                itemStyle: {\r\n                    color: oneLine.color\r\n                },\r\n                symbolSize: oneLine.chartType === 'scatterplot' || oneLine.points ? oneLine.symbolSize || 3 : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          oneLine.thickness || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    oneLine.color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (oneLine.fill) {\r\n                cfg.areaStyle = {\r\n                    color: oneLine.color,\r\n                    opacity: parseFloat(oneLine.fill),\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getYAxis(props) {\r\n        props = props || this.props;\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n\r\n        return props.config.l.map((oneLine, i) => {\r\n            if (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (yMin > 0) {\r\n                        yMin = 0;\r\n                    } else {\r\n                        if (diff > 5000) {\r\n                            yMin = Math.floor(yMin / 1000) * 1000;\r\n                        } else if (diff > 200) {\r\n                            yMin = Math.floor(yMin / 100) * 100;\r\n                        } else if (diff > 30) {\r\n                            yMin = Math.floor(yMin / 10) * 10;\r\n                        } else if (diff > 10) {\r\n                            yMin = Math.floor(yMin);\r\n                        } else if (diff > 1) {\r\n                            yMin = Math.floor(yMin * 10) / 10;\r\n                        }\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: oneLine.yaxe || (!i ? 'left' : 'right'), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !props.config.grid_hideY,\r\n                    lineStyle: props.config.grid_color ? {\r\n                        color: props.config.grid_color,\r\n                    } : undefined,\r\n                } : undefined,\r\n                //splitNumber: Math.round(this.state.chartHeight / 100),\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, props, true),\r\n                    color: props.config.y_labels_color || undefined,\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(props, options) {\r\n        // fill markings\r\n        props.config.marks && props.config.marks.forEach(oneMark => {\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill),\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: oneMark.text || '',\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: oneMark.textOffset || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        data: []\r\n                    };\r\n                    series.markLine.data.push({yAxis: limitFloat});\r\n\r\n                    // if minimum not set\r\n                    let yMin = parseFloat(props.config.l[oneMark.lineId].min);\r\n                    if (isNaN(yMin)) {\r\n                        if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                            options.yAxis[0].min = limitFloat;\r\n                        }\r\n                    }\r\n                    let yMax = parseFloat(props.config.l[oneMark.lineId].min);\r\n                    if (isNaN(yMax)) {\r\n                        if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                            options.yAxis[0].max = limitFloat;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, props, withUnit) {\r\n        props = props || this.props;\r\n        if (props.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = props.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (props.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? props.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? props.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (props.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? props.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? props.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTooltip(props, params) {\r\n        const date = new Date(params[0].value[0]);\r\n\r\n        const values = params.filter(param => !param.seriesName.startsWith('__markings__')).map(param => {\r\n            let val = param.value[1] === null ?\r\n                'null' :\r\n                this.yFormatter(param.value[1], param.seriesIndex, props);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${props.config.l[param.seriesIndex].color}\">` +\r\n                `<div style=\"display: flex;\">${props.config.l[param.seriesIndex].name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\"><b>${val}</b>${param.value[1] !== null ? props.config.l[param.seriesIndex].unit : ''}</div>` +\r\n                `</div>`\r\n        });\r\n\r\n        const format = props.config.timeFormat || 'dddd, MMMM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${moment(date).format(format)}</b><br/>${values.join('<br/>')}`;\r\n    }\r\n\r\n    getOptions(props) {\r\n        props = props || this.props;\r\n        this.debug = props.config && props.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(props.config, null, 2)}`);\r\n\r\n        let titlePos = {};\r\n        if (props.config.titlePos) {\r\n            props.config.titlePos.split(';').forEach(a => {\r\n                const parts = a.split(':');\r\n                titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n            });\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        const series = this.getSeries(props);\r\n\r\n        if (props.config.start) {\r\n            if (this.chart.xMax < props.config.end) {\r\n                this.chart.xMax = props.config.end;\r\n            }\r\n            if (this.chart.xMin > props.config.start) {\r\n                this.chart.xMin = props.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(props);\r\n\r\n        const options = {\r\n            backgroundColor: 'transparent',\r\n            animation: !props.config.noAnimation && !props.config.noLoader,\r\n            title: {\r\n                text: props.config.title || '',\r\n                textStyle: {\r\n                    fontSize: props.config.titleSize ? parseInt(props.config.titleSize, 10) : undefined,\r\n                    color: props.config.titleColor || undefined\r\n                },\r\n                textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n                textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n                top:               titlePos.top  === 35 ? 5 : (titlePos.top === 50 ? '50%' : undefined),\r\n                left:              titlePos.left === 50 ? '50%' : (titlePos.left === 65 ? 15 : undefined),\r\n                bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n                right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n            },\r\n            grid: {\r\n                backgroundColor: props.config.bg_custom || 'transparent',\r\n                show: !!props.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: 40,\r\n            },\r\n            tooltip: props.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(props, params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis: [\r\n                {\r\n                    type: 'time',\r\n                    splitLine: {\r\n                        show: !props.config.grid_hideX,\r\n                        lineStyle: props.config.grid_color ? {\r\n                            color: props.config.grid_color,\r\n                        } : undefined,\r\n                    },\r\n                    //splitNumber: Math.round((this.state.chartWidth - this.chart.padRight - this.chart.padLeft) / 50),\r\n                    min: this.chart.xMin,\r\n                    max: this.chart.xMax,\r\n                    axisTick: {\r\n                        alignWithLabel: true,\r\n                    },\r\n                    axisLabel: {\r\n                        formatter: (value, index) => {\r\n                            const date = new Date(value);\r\n                            if (props.config.timeFormat) {\r\n                                return moment(date).format(props.config.timeFormat).replace('<br/>', '\\n');\r\n                            } else\r\n                            if (this.chart.withSeconds) {\r\n                                return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n                            } else if (this.chart.withTime) {\r\n                                return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n                            } else {\r\n                                return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n                            }\r\n                        },\r\n                        color: props.config.x_labels_color || undefined,\r\n                    }\r\n                }\r\n            ],\r\n            yAxis,\r\n            toolbox: props.config.export === true || props.config.export === 'true' ? {\r\n                left: 'right',\r\n                feature: {\r\n                    /*dataZoom: {\r\n                        yAxisIndex: 'none',\r\n                        title: props.t('Zoom'),\r\n                    },\r\n                    restore: {\r\n                        title: props.t('Restore')\r\n                    },*/\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series\r\n        };\r\n\r\n        this.getMarkings(props, options);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let minTick = this.yFormatter(options.yAxis[ser.yAxisIndex].min, i, props, true);\r\n            let maxTick = this.yFormatter(options.yAxis[ser.yAxisIndex].max, i, props, true);\r\n\r\n            const position = options.yAxis[ser.yAxisIndex].position;\r\n            let wMin = calcTextWidth(minTick);\r\n            let wMax = calcTextWidth(maxTick);\r\n            if (position === 'left') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        options.grid.left = padLeft + 10;\r\n        options.grid.right = padRight + 10 + (props.config.export === true || props.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft = options.grid.left;\r\n        this.chart.padRight = options.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        options.legend = !props.config.legend || props.config.legend === 'none' ? undefined : {\r\n            data:   props.config.l.map(oneLine => oneLine.name),\r\n            show:   true,\r\n            left:   props.config.legend === 'nw' || props.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n            right:  props.config.legend === 'ne' || props.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n            top:    props.config.legend === 'nw' || props.config.legend === 'ne' ?  10 : undefined,\r\n            bottom: props.config.legend === 'sw' || props.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n            backgroundColor: props.config.legBg || undefined\r\n        };\r\n\r\n        if (!props.config.grid_color) {\r\n            options.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            options.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n\r\n            this.props.onRangeChange && this.props.onRangeChange({start: this.chart.xMin, end: this.chart.xMax});\r\n        } else {\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: this.chart.xMin,\r\n                    max: this.chart.xMax,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const moved = this.chart.lastX - (e.offsetX - this.chart.padLeft);\r\n            this.chart.lastX = e.offsetX - this.chart.padLeft;\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            const width = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            this.chart.xMin += shift;\r\n            this.chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        this.chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        let diff = this.chart.xMax - this.chart.xMin;\r\n        const width = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n        const x = e.offsetX - this.chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        this.chart.xMax += move * (1 - pos);\r\n        this.chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            this.chart.lastX = touches[touches.length - 1].pageX;\r\n            if (touches.length > 1) {\r\n                this.chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n            } else {\r\n                this.chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        e.preventDefault();\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        e.preventDefault();\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const pageX = touches[touches.length - 1].pageX - this.chart.padLeft;\r\n        if (this.mouseDown) {\r\n            if (touches.length > 1) {\r\n                // zoom\r\n                const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                if (this.chart.lastWidth !== null && fingerWidth !== this.chart.lastWidth) {\r\n                    let diff = this.chart.xMax - this.chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > this.chart.lastWidth ? 1.1 : 0.9;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - this.chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - this.chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    this.chart.xMax += move * (1 - pos);\r\n                    this.chart.xMin -= move * pos;\r\n\r\n                    this.setNewRange();\r\n                }\r\n                this.chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = this.chart.lastX - pageX;\r\n                const diff  = this.chart.xMax - this.chart.xMin;\r\n                const chartWidth = this.state.chartWidth - this.chart.padRight - this.chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                this.chart.xMin += shift;\r\n                this.chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        this.chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            this.zr.on('mousedown', this.onMouseDown);\r\n\r\n            this.zr.on('mouseup', this.onMouseUp);\r\n\r\n            this.zr.on('mousewheel', this.onMouseWheel);\r\n\r\n            this.zr.on('touchstart', this.onTouchStart);\r\n\r\n            this.zr.on('touchend', this.onTouchEnd);\r\n\r\n            this.zr.on('touchmove', this.onTouchMove);\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n            this.zr.off('mousedown', this.onMouseDown);\r\n            this.zr.off('mouseup', this.onMouseUp);\r\n            this.zr.off('mousewheel', this.onMouseWheel);\r\n            if (this.zr && this.zr._mousemove) {\r\n                this.zr._mousemove = false;\r\n                this.zr.off('mousemove', this.onMouseMove);\r\n            }\r\n            this.zr.off('touchstart', this.onTouchStart);\r\n            this.zr.off('touchend', this.onTouchEnd);\r\n            this.zr.off('touchmove', this.onTouchMove);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            const option = this.getOptions();\r\n\r\n            //console.log(JSON.stringify(option, null, 2));\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.props.themeType === 'dark' ? 'dark' : '' }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? 'calc(100% - ' + ((borderWidth + borderPadding) * 2 + 1) + 'px' : undefined,\r\n                height:         borderWidth || borderPadding ? 'calc(100% - ' + (borderWidth + borderPadding) * 2 + 'px' : undefined,\r\n                background:     this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderResetButton() }\r\n            { this.renderChart() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    socket: PropTypes.object,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            noLoader:   Utils.parseQuery(window.location.search).noLoader || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: Utils.parseQuery(window.location.search).noBG || Utils.parseQuery((window.location.hash || '').replace(/^#/,'')).noBG || false,\r\n        };\r\n        this.divRef = React.createRef();\r\n        this.progressRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n\r\n                        this.chartData = new ChartModel(this.socket);\r\n                        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n                        this.chartData.onReading(reading => this.showProgress(reading));\r\n                        this.chartData.onUpdate(seriesData => this.setState({seriesData}, () => this.showProgress(false)));\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: this.state.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}