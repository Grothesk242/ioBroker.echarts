{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","NOT_CONNECTED","ChartModel","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","actualValues","ticks","liveInterval","reading","navOptions","subscribes","sessionId","updateInterval","presetSubscribed","defaultHistory","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","onStateChangeBound","onStateChange","getSystemConfig","catch","e","console","error","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","range","_config","clearInterval","startsWith","includes","getObject","obj","native","type","stringify","isFloatComma","lang","language","live","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","log","Date","toISOString","readOnZoomTimeout","subscribed","unsubscribeState","removeEventListener","cb","index","step","end","start","_now","option","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","getStartStop","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","exact","last","sort","b","Promise","resolve","err","legActual","getState","state","subscribeState","_readObject","chartType","en","readOneChart","_readOneLine","_readData","splice","upperValue","lowerValue","readMarkings","subscribeAll","changed","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","brighterColor","amt","usePound","rgb","match","rgba2hex","slice","r","g","Gradient","colorStops","prototype","constructor","addColorStop","LinearGradient","x","y","x2","y2","globalCoord","global","call","clazz","baseClazz","clazzPrototype","F","prop","hasOwnProperty","superClass","zrUtilInherits","ChartOption","moment","themeType","calcTextWidth","Error","chart","yAxis","isTouch","document","documentElement","yAxisIndex","xMin","xMax","theme","colorCount","oneLine","dashes","_color","commonYAxis","cfg","clip","xAxisIndex","showSymbol","points","hoverAnimation","smooth","convertData","itemStyle","symbolSize","symbol","lineStyle","shadowBlur","shadowOffsetY","shadowColor","areaStyle","opacity","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","xFormatter","x_labels_color","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_ticks_color","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","param","distance","textStyle","fontStyle","fontSize","line","withUnit","interpolated","toFixed","round","withSeconds","withTime","_index","date","format","getSeconds","hoverNoNulls","k","y1","params","find","seriesIndex","getInterpolatedValue","hoverNoInterpolate","filter","join","xAxisHeight","legend","left","padLeft","right","padRight","top","bottom","backgroundColor","legBg","arg","legColor","orient","legendDirection","selected","hide","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","useCanvas","getSeries","getYAxis","xAxis","getXAxis","noAnimation","grid","bg_custom","isXLabelHasBreak","tooltip","trigger","renderTooltip","axisPointer","getMarkings","ser","cY","minTick","maxTick","wMin","wMax","getLegend","getTitle","axis","canvasCalcTextWidth","fontFamily","context","createElement","getContext","font","metrics","measureText","String","padStart","targetLength","padString","repeat","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","clear","chartOption","getOption","applySelected","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","current","style","display","getHelperChartData","moved","lastX","offsetX","chartWidth","shift","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","touches","originalEvent","preventDefault","stopImmediatePropagation","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","React","createRef","divRef","locale","I18n","getLanguage","updateChart","getZr","items","getElementsByClassName","div","_iobInstalled","keys","ref","echarts","notMerge","lazyUpdate","opts","renderer","onEvents","legendselectchanged","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","downloadLink","body","appendChild","href","target","download","click","alert","forceUpdate","background","noBackground","borderColor","border_color","borderStyle","border_style","padding","renderExportButton","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","setConfig","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBG","inEdit","edit","progressRef","progressShown","translations","require","ownTranslations","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","restoreAfterReconnection","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","ERRORS","showError","onError","onReading","showProgress","onUpdate","newState","dataLoaded","isShow","destroy","palette","errorText","onClose","prevProps","prevState","snapshot","getConfig","MD5","root","default","primary","renderError","withTheme","Boolean","hostname","version","host","Sentry","dsn","release","integrations","SentryIntegrations","beforeSend","event","hint","ignore","exception","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f249197c.chunk.js","sourcesContent":["/**\r\n * Parse a query string into its parts.\r\n * Copied from @iobroker/adapter-react/Components/Utils\r\n * @param {string} query\r\n * @returns {Record<string, string | boolean | number>}\r\n */\r\nfunction parseQuery(query) {\r\n    query = (query || '').toString().replace(/^\\?/, '');\r\n    /** @type {Record<string, string | boolean | number>} */\r\n    const result = {};\r\n    query.split('&').forEach(part => {\r\n        part = part.trim();\r\n        if (part) {\r\n            const parts = part.split('=');\r\n            const attr = decodeURIComponent(parts[0]).trim();\r\n            if (parts.length > 1) {\r\n                result[attr] = decodeURIComponent(parts[1]);\r\n                if (result[attr] === 'true') {\r\n                    result[attr] = true;\r\n                } else if (result[attr] === 'false') {\r\n                    result[attr] = false;\r\n                } else {\r\n                    const f = parseFloat(result[attr]);\r\n                    if (f.toString() === result[attr]) {\r\n                        result[attr] = f;\r\n                    }\r\n                }\r\n            } else {\r\n                result[attr] = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n/*\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n*/\r\n// Do not forget to change normalizeConfig in src/utils/flotConverter.js too\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = config.lines;\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate (from flot)\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\r\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\r\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    // convert marks\r\n    if (config.m) {\r\n        config.marks = [];\r\n        for (let j = 0; j < config.m.length; j++) {\r\n            config.marks[j] = {\r\n                lineId:         config.m[j].l,\r\n                upperValueOrId: config.m[j].v,\r\n                lowerValueOrId: config.m[j].vl,\r\n                color:          config.m[j].c,\r\n                fill:           config.m[j].f,\r\n                ol:             config.m[j].t,\r\n                os:             config.m[j].s,\r\n                text:           config.m[j].d,\r\n                textPosition:   config.m[j].p,\r\n                textOffset:     config.m[j].py,\r\n                textColor:      config.m[j].fc,\r\n                textSize:       config.m[j].fs,\r\n            };\r\n        }\r\n        delete config.m;\r\n    }\r\n\r\n    config.marks = config.marks || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                   || '100%';\r\n    config.height       = config.height                  || '100%';\r\n    config.timeFormat   = config.timeFormat              || '';\r\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\r\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\r\n    config.export       = config.export      === 'true'  || config.export      === true;\r\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\r\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\r\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\r\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\r\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\r\n    config.animation    = parseInt(config.animation)     || 0;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nconst NOT_CONNECTED = 'notConnectedError';\r\n\r\nclass ChartModel {\r\n    constructor(socket, config, options) {\r\n        options = Object.assign({updateTimeout: 300}, options || {});\r\n        this.socket = socket;\r\n\r\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\r\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\r\n\r\n        this.seriesData       = [];\r\n        this.actualValues     = []; // only if config.legActual === true\r\n        this.ticks            = null;\r\n        this.liveInterval     = null;\r\n        this.reading          = false;\r\n\r\n        this.navOptions       = {};\r\n\r\n        this.subscribes       = [];\r\n        //this.subscribed       = false;\r\n        this.sessionId        = 1;\r\n        this.updateInterval   = null; // update interval by time\r\n        this.presetSubscribed = false; // Is preset subscribed yet or not\r\n\r\n        this.defaultHistory   = '';\r\n\r\n        this.onUpdateFunc     = null;\r\n        this.onReadingFunc    = null;\r\n        this.onErrorFunc      = null;\r\n        this.objectPromises   = {};\r\n        this.debug            = false;\r\n        this.zoomData         = null;\r\n\r\n        if (!this.serverSide) {\r\n            this.lastHash         = window.location.hash;\r\n\r\n            if (!config) {\r\n                this.onHashInstalled = true;\r\n                this.onHashChangeBound = this.onHashChange.bind(this);\r\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\r\n            }\r\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\r\n        }\r\n\r\n        this.onStateChangeBound = this.onStateChange.bind(this);\r\n\r\n        this.socket.getSystemConfig()\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error('Cannot read systemConfig: ' + e);\r\n                return null;\r\n            })\r\n            .then(systemConfig => {\r\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\r\n                this.defaultHistory = this.systemConfig.defaultHistory;\r\n                return this.analyseAndLoadConfig(config);\r\n            })\r\n    }\r\n\r\n    analyseAndLoadConfig(config) {\r\n        if (config) {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else {\r\n            const query = parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\r\n\r\n            if (query.preset && typeof query.preset === 'string') {\r\n                this.preset = query.preset;\r\n            } else {\r\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\r\n                if (hQuery.data) {\r\n                    try {\r\n                        hQuery.data = JSON.parse(hQuery.data);\r\n                    } catch (e) {\r\n                        hQuery.data = {};\r\n                    }\r\n                }\r\n                if (query.data) {\r\n                    try {\r\n                        query.data = JSON.parse(query.data);\r\n                    } catch (e) {\r\n                        query.data = {};\r\n                    }\r\n                }\r\n                if (hQuery.preset) {\r\n                    this.preset = hQuery.preset;\r\n                    if (hQuery.range || hQuery.relativeEnd) {\r\n                        this.hash = {\r\n                            range: hQuery.range,\r\n                            relativeEnd: hQuery.relativeEnd\r\n                        };\r\n                    }\r\n                } else {\r\n                    // search ID and range\r\n                    const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\r\n                    if (hQuery.noLoader !== undefined) {\r\n                        _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\r\n                    }\r\n                    if (query.noLoader !== undefined) {\r\n                        _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\r\n                    }\r\n                    this.config = normalizeConfig(_config);\r\n                    //console.log(this.config);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.seriesData = [];\r\n\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n\r\n        if (this.preset) {\r\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\r\n                this.preset = 'echarts.0.' + this.preset;\r\n            }\r\n\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\r\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\r\n                    }\r\n                    this.config          = normalizeConfig(obj.native.data);\r\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n                    this.config.lang     = this.systemConfig.language;\r\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\r\n                    this.config.debug    = this.debug;\r\n\r\n                    if (this.hash && this.hash.range) {\r\n                        this.config.range = this.hash.range;\r\n                    }\r\n                    if (this.hash && this.hash.relativeEnd) {\r\n                        this.config.relativeEnd = this.hash.relativeEnd;\r\n                    }\r\n\r\n                    this.readData();\r\n\r\n                    // subscribe on preset changes\r\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\r\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n                        this.presetSubscribed = this.preset;\r\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\r\n                    }\r\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${this.preset}: ${e}`)\r\n                });\r\n\r\n        } else {\r\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\r\n            this.config.lang     = this.systemConfig.language;\r\n            this.config.live     = parseInt(this.config.live, 10) || 0;\r\n            this.config.debug    = this.debug;\r\n            this.readData();\r\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onHashChange() {\r\n        if (this.lastHash !== window.location.hash) {\r\n            this.lastHash = window.location.hash;\r\n            this.analyseAndLoadConfig();\r\n        }\r\n    };\r\n\r\n    onPresetUpdate(id, obj) {\r\n        if (id !== this.preset) {\r\n            return;\r\n        }\r\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\r\n        this.presetUpdateTimeout = setTimeout(() => {\r\n            this.presetUpdateTimeout = null;\r\n            let newConfig;\r\n            if (obj) {\r\n                newConfig = normalizeConfig(obj.native.data);\r\n            } else {\r\n                newConfig = normalizeConfig({});\r\n            }\r\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\r\n                this.config = newConfig;\r\n                this.updateInterval && clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n\r\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\r\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                }\r\n\r\n                this.readData();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setNewRange(options) {\r\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\r\n\r\n        if (!options) {\r\n            if (this.zoomData) {\r\n                this.zoomData = null;\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\r\n                        console.log('Restore update');\r\n                        this.updateInterval && clearInterval(this.updateInterval);\r\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\r\n                    }\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            }\r\n        } else if (options.stopLive) {\r\n            this.zoomData = this.zoomData || {};\r\n            this.zoomData.stopLive = true;\r\n            if (this.updateInterval) {\r\n                console.log('Clear interval');\r\n                clearInterval(this.updateInterval);\r\n                this.updateInterval = null;\r\n            }\r\n        } else {\r\n            // options = {start, end}\r\n            const stopLive = this.zoomData && this.zoomData.stopLive;\r\n            if (stopLive) {\r\n                delete this.zoomData.stopLive;\r\n            }\r\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\r\n                this.zoomData = options;\r\n                if (stopLive) {\r\n                    this.zoomData.stopLive = true;\r\n                }\r\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\r\n                this.readOnZoomTimeout = setTimeout(() => {\r\n                    this.readOnZoomTimeout = null;\r\n                    this.readData();\r\n                }, this.updateTimeout);\r\n            } else if (stopLive) {\r\n                this.zoomData.stopLive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChangeBound));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n        if (this.presetUpdateTimeout) {\r\n            clearTimeout(this.presetUpdateTimeout);\r\n            this.presetUpdateTimeout = null;\r\n        }\r\n        if (this.presetSubscribed) {\r\n            this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\r\n            this.presetSubscribed = null;\r\n        }\r\n        if (this.updateInterval) {\r\n            clearInterval(this.updateInterval);\r\n            this.updateInterval = null;\r\n        }\r\n        if (!this.serverSide) {\r\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\r\n            this.onHashInstalled = false;\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getSystemConfig() {\r\n        return this.systemConfig;\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.analyseAndLoadConfig(config);\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!step) {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end   = this.zoomData.end;\r\n            } else\r\n            if (this.config.timeType === 'static') {\r\n                let startTime;\r\n                let endTime;\r\n                if (this.config.start_time !== undefined) {\r\n                    startTime = this.config.start_time.split(':').map(Number);\r\n                } else {\r\n                    startTime = [0, 0];\r\n                }\r\n\r\n                if (this.config.end_time !== undefined) {\r\n                    endTime = this.config.end_time.split(':').map(Number);\r\n                } else {\r\n                    endTime = [24, 0];\r\n                }\r\n\r\n                // offset is in seconds\r\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                start = this.addTime(start, this.config.l[index].offset);\r\n                end   = this.addTime(end,   this.config.l[index].offset);\r\n            }\r\n            else {\r\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                if (this.config.relativeEnd === 'now') {\r\n                    _now = new Date(this.now);\r\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'today') {\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() + 1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekUsa') {\r\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'weekEurope') {\r\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                    _now = new Date(this.now);\r\n                    // If\r\n                    if (_now.getDay() === 0) {\r\n                        _now.setDate(_now.getDate() + 1);\r\n                    } else {\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                    }\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'month') {\r\n                    _now = new Date(this.now);\r\n                    _now.setMonth(_now.getMonth() + 1);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                } else if (this.config.relativeEnd === 'year') {\r\n                    _now = new Date(this.now);\r\n                    _now.setFullYear(_now.getFullYear() + 1);\r\n                    _now.setMonth(0);\r\n                    _now.setDate(1);\r\n                    _now.setHours(0);\r\n                    _now.setMinutes(0);\r\n                    _now.setSeconds(0);\r\n                    _now.setMilliseconds(0);\r\n                }\r\n\r\n                this.config.range = this.config.range || '30m';\r\n\r\n                end   = this.addTime(_now, this.config.l[index].offset);\r\n                start = this.addTime(end,  this.config.range, false, true);\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            if (this.config.aggregateType === 'step') {\r\n                option.step = this.config.aggregateSpan * 1000;\r\n            } else if (this.config.aggregateType === 'count') {\r\n                option.count = this.config.aggregateSpan || 300;\r\n            }\r\n\r\n            this.config.start = start;\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        } else {\r\n            if (this.zoomData) {\r\n                start = this.zoomData.start;\r\n                end = this.zoomData.end;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n            }\r\n\r\n            option = {\r\n                start,\r\n                end,\r\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                count:      1,\r\n                from:       false,\r\n                ack:        false,\r\n                q:          false,\r\n                addID:      false,\r\n            };\r\n\r\n            this.config.start = this.addTime(end, this.config.range, false, true);\r\n            this.config.end   = end;\r\n\r\n            return option;\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    this.seriesData[index] = []; // not really needed\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0].value[0] > option.start) {\r\n                            _series.unshift({value: [option.start, null], exact: false});\r\n                        }\r\n                        const last = _series[_series.length - 1];\r\n                        if (last.value[0] < option.end) {\r\n                            if (this.config.l[index].validTime) {\r\n                                // If last value is not older than X seconds, assume it is still the same\r\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\r\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\r\n                                } else {\r\n                                    _series.push({value: [option.end, null], exact: false});\r\n                                }\r\n                            } else {\r\n                                _series.push({value: [option.end, null], exact: false});\r\n                            }\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null], exact: false});\r\n                        _series.push({value: [option.end,   null], exact: false});\r\n                    }\r\n\r\n                    // TODO: May be not required?\r\n                    _series.sort((a, b) => a.value[0] > b.value[0] ? -1 : (a.value[0] < b.value[0] ? 1 : 0));\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => {\r\n                err === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(err);\r\n                err && console.error('[ChartModel] ' + err)\r\n            })\r\n            .then(() => {\r\n                if (this.config.legActual) {\r\n                    // read current value\r\n                    return this.socket.getState(id)\r\n                        .then(state => this.actualValues[index] = state && (state.val || state.val === 0) ? state.val : null)\r\n                        .catch(e => {\r\n                            console.warn(`Cannot read last value of ${id}: ${e}`);\r\n                            this.actualValues[index] = null;\r\n                        })\r\n                        .then(() => {\r\n                            if (!this.subscribes.includes(id)) {\r\n                                this.subscribes.push(id);\r\n                                this.subscribed = true;\r\n                                this.socket.subscribeState(id, this.onStateChangeBound);\r\n                            }\r\n                        })\r\n                } else {\r\n                    return Promise.resolve();\r\n                }\r\n            })\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readObject(id) {\r\n        if (!this.objectPromises[id]) {\r\n            this.objectPromises[id] = this.socket.getObject(id)\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`Cannot read ${id}: ${e}`);\r\n                    return null;\r\n                });\r\n\r\n        }\r\n        return this.objectPromises[id];\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this._readObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                    if (this.config.l[index].chartType === 'auto') {\r\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\r\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\r\n                    }\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                if (this.config.l[index].chartType === 'auto') {\r\n                    this.config.l[index].chartType = 'line';\r\n                    this.config.l[index].aggregate = 'minmax';\r\n                }\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance || this.defaultHistory, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance || this.defaultHistory;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => {\r\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                    console.error(`[ChartModel] ${e}`);\r\n                })\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                console.error(`[ChartModel] ${e}`);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\r\n            return cb();\r\n        } else {\r\n            // read markings\r\n            return new Promise(resolve => {\r\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\r\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\r\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\r\n                ) {\r\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                    }*/\r\n\r\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\r\n                        .then(state => {\r\n                            if (state && state.val !== undefined && state.val !== null) {\r\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\r\n                            } else {\r\n                                this.config.marks[m].upperValue = null;\r\n                            }\r\n                            resolve();\r\n                        })\r\n                        .catch(e => {\r\n                            e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                            console.error(`Cannot read marking ${this.config.marks[m].upperValueOrId}: ${e}`);\r\n                            resolve();\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .then(() => new Promise(resolve => {\r\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\r\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\r\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\r\n                        }*/\r\n\r\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\r\n                            .then(state => {\r\n                                if (state && state.val !== undefined && state.val !== null) {\r\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\r\n                                } else {\r\n                                    this.config.marks[m].lowerValue = null;\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(e => {\r\n                                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\r\n                                console.error(`Cannot read marking ${this.config.marks[m].lowerValueOrId}: ${e}`);\r\n                                resolve();\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }))\r\n                .then(() =>\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChangeBound);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange(id, state) {\r\n        if (!id || !state || !this.actualValues || this.reading) {\r\n            return;\r\n        }\r\n\r\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        let changed = false;\r\n        for (let m = 0; m < this.config.l.length; m++) {\r\n            if (this.config.l[m].id === id) {\r\n                if (this.actualValues[m] !== state.val) {\r\n                    this.actualValues[m] = state.val;\r\n                    changed = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        changed && this.onUpdateFunc(null, this.actualValues);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        if (this.readOnZoomTimeout) {\r\n            clearTimeout(this.readOnZoomTimeout);\r\n            this.readOnZoomTimeout = null;\r\n        }\r\n\r\n        this.now = Date.now();\r\n        console.log('Read till ' + new Date(this.now));\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.reading = true;\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this.seriesData = [];\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        /*if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {*/\r\n                            this.reading = false;\r\n                            this.onUpdateFunc(this.seriesData, this.actualValues);\r\n                        //}\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n            this.reading = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;\r\n","const THEMES = {\r\n    azul: [\r\n        '#f2385a',\r\n        '#f5a503',\r\n        '#4ad9d9',\r\n        '#f7879c',\r\n        '#c1d7a8',\r\n        '#4dffd2',\r\n        '#fccfd7',\r\n        '#d5f6f6'\r\n    ],\r\n    'bee-inspired': [\r\n        '#001727',\r\n        '#805500',\r\n        '#ffff00',\r\n        '#ffd11a',\r\n        '#f2d71f',\r\n        '#f2be19',\r\n        '#f3a81a',\r\n        '#fff5cc'\r\n    ],\r\n    'blue': [\r\n        '#1790cf',\r\n        '#1bb2d8',\r\n        '#99d2dd',\r\n        '#88b0bb',\r\n        '#1c7099',\r\n        '#038cc4',\r\n        '#75abd0',\r\n        '#afd6dd'\r\n    ],\r\n    infographic: [\r\n        '#C1232B',\r\n        '#27727B',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#B5C334',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n    ],\r\n    vintage: [\r\n        '#d87c7c',\r\n        '#919e8b',\r\n        '#d7ab82',\r\n        '#6e7074',\r\n        '#61a0a8',\r\n        '#efa18d',\r\n        '#787464',\r\n        '#cc7e63',\r\n        '#724e58',\r\n        '#4b565b'\r\n    ],\r\n    dark: [\r\n        '#dd6b66',\r\n        '#759aa0',\r\n        '#e69d87',\r\n        '#8dc1a9',\r\n        '#ea7e53',\r\n        '#eedd78',\r\n        '#73a373',\r\n        '#73b9bc',\r\n        '#7289ab',\r\n        '#91ca8c',\r\n        '#f49f42'\r\n    ],\r\n    macarons: [\r\n        '#2ec7c9',\r\n        '#b6a2de',\r\n        '#5ab1ef',\r\n        '#ffb980',\r\n        '#d87a80',\r\n        '#8d98b3',\r\n        '#e5cf0d',\r\n        '#97b552',\r\n        '#95706d',\r\n        '#dc69aa',\r\n        '#07a2a4',\r\n        '#9a7fd1',\r\n        '#588dd5',\r\n        '#f5994e',\r\n        '#c05050',\r\n        '#59678c',\r\n        '#c9ab00',\r\n        '#7eb00a',\r\n        '#6f5553',\r\n        '#c14089'\r\n    ],\r\n    shine: [\r\n        '#c12e34',\r\n        '#e6b600',\r\n        '#0098d9',\r\n        '#2b821d',\r\n        '#005eaa',\r\n        '#339ca8',\r\n        '#cda819',\r\n        '#32a487'\r\n    ],\r\n    roma: [\r\n        '#E01F54',\r\n        '#001852',\r\n        '#f5e8c8',\r\n        '#b8d2c7',\r\n        '#c6b38e',\r\n        '#a4d8c2',\r\n        '#f3d999',\r\n        '#d3758f',\r\n        '#dcc392',\r\n        '#2e4783',\r\n        '#82b6e9',\r\n        '#ff6347',\r\n        '#a092f1',\r\n        '#0a915d',\r\n        '#eaf889',\r\n        '#6699FF',\r\n        '#ff6666',\r\n        '#3cb371',\r\n        '#d5b158',\r\n        '#38b6b6'\r\n    ],\r\n    royal: [\r\n        '#3f7ea6',\r\n        '#993366',\r\n        '#408000',\r\n        '#8c6f56',\r\n        '#a65149',\r\n        '#731f17',\r\n        '#adc2eb',\r\n        '#d9c3b0'\r\n    ],\r\n    'dark-blue': [\r\n        '#00305a',\r\n        '#004b8d',\r\n        '#0074d9',\r\n        '#4192d9',\r\n        '#7abaf2',\r\n        '#99cce6',\r\n        '#d6ebf5',\r\n        '#eeeeee'\r\n    ],\r\n    'tech-blue': [\r\n        '#4d4d4d',\r\n        '#3a5897',\r\n        '#007bb6',\r\n        '#7094db',\r\n        '#0080ff',\r\n        '#b3b3ff',\r\n        '#00bdec',\r\n        '#33ccff',\r\n        '#ccddff',\r\n        '#eeeeee'\r\n    ],\r\n    red: [\r\n        '#d8361b',\r\n        '#f16b4c',\r\n        '#f7b4a9',\r\n        '#d26666',\r\n        '#99311c',\r\n        '#c42703',\r\n        '#d07e75'\r\n    ],\r\n    'red-velvet': [\r\n        '#8b1a2d',\r\n        '#a7314b',\r\n        '#e6004c',\r\n        '#ff8066',\r\n        '#8e5c4e',\r\n        '#ff1a66',\r\n        '#d6c582',\r\n        '#f0d4af'\r\n    ],\r\n    green: [\r\n        '#408829',\r\n        '#68a54a',\r\n        '#a9cba2',\r\n        '#86b379',\r\n        '#397b29',\r\n        '#8abb6f',\r\n        '#759c6a',\r\n        '#bfd3b7'\r\n    ],\r\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\r\n    gray: [\r\n        '#757575',\r\n        '#c7c7c7',\r\n        '#dadada',\r\n        '#8b8b8b',\r\n        '#b5b5b5',\r\n        '#e9e9e9'\r\n    ],\r\n    'dark-bold': [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ]\r\n};\r\n\r\nfunction padding2(num) {\r\n    // on safari 9.0 it is unknown\r\n    // return num.toString().padStart(2, '0');\r\n    num = (num || '').toString();\r\n    if (num.length < 2) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nfunction rgba2hex(color) {\r\n    const rgb = color.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\r\n    return rgb ?\r\n        '#' +\r\n        padding2(parseInt(rgb[1], 10).toString(16)) +\r\n        padding2(parseInt(rgb[2], 10).toString(16)) +\r\n        padding2(parseInt(rgb[3], 10).toString(16)) : color;\r\n}\r\n\r\nfunction brighterColor(color, amt) {\r\n    let usePound = false;\r\n\r\n    if (color.includes('rgb')) {\r\n        color = rgba2hex(color);\r\n    }\r\n\r\n    if (color[0] === '#') {\r\n        color = color.slice(1);\r\n        usePound = true;\r\n    }\r\n\r\n    const num = parseInt(color,16);\r\n\r\n    let r = (num >> 16) + amt;\r\n    if (r > 255) {\r\n        r = 255;\r\n    } else if (r < 0) {\r\n        r = 0;\r\n    }\r\n\r\n    let b = ((num >> 8) & 0x00FF) + amt;\r\n    if (b > 255) {\r\n        b = 255;\r\n    } else if (b < 0) {\r\n        b = 0;\r\n    }\r\n\r\n    let g = (num & 0x0000FF) + amt;\r\n    if (g > 255) {\r\n        g = 255;\r\n    } else if (g < 0) {\r\n        g = 0;\r\n    }\r\n\r\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\n//----- copied from\r\nconst Gradient = function (colorStops) {\r\n    this.colorStops = colorStops || [];\r\n};\r\n\r\nGradient.prototype = {\r\n    constructor: Gradient,\r\n    addColorStop: function (offset, color) {\r\n        this.colorStops.push({\r\n            offset: offset,\r\n            color: color\r\n        });\r\n    }\r\n};\r\nconst LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n    // Should do nothing more in this constructor. Because gradient can be\r\n    // declared by `color: {type: 'linear', colorStops: ...}`, where\r\n    // this constructor will not be called.\r\n    this.x = x == null ? 0 : x;\r\n    this.y = y == null ? 0 : y;\r\n    this.x2 = x2 == null ? 1 : x2;\r\n    this.y2 = y2 == null ? 0 : y2; // Can be cloned\r\n\r\n    this.type = 'linear'; // If use global coord\r\n\r\n    this.global = globalCoord || false;\r\n    Gradient.call(this, colorStops);\r\n};\r\n\r\nLinearGradient.prototype = {\r\n    constructor: LinearGradient\r\n};\r\n\r\nfunction zrUtilInherits(clazz, baseClazz) {\r\n    const clazzPrototype = clazz.prototype;\r\n\r\n    function F() {}\r\n\r\n    F.prototype = baseClazz.prototype;\r\n    clazz.prototype = new F();\r\n\r\n    for (const prop in clazzPrototype) {\r\n        if (clazzPrototype.hasOwnProperty(prop)) {\r\n            clazz.prototype[prop] = clazzPrototype[prop];\r\n        }\r\n    }\r\n\r\n    clazz.prototype.constructor = clazz;\r\n    clazz.superClass = baseClazz;\r\n}\r\nzrUtilInherits(LinearGradient, Gradient);\r\n\r\nclass ChartOption {\r\n    constructor(moment, themeType, calcTextWidth, config) {\r\n        this.moment = moment;\r\n        if (!this.moment) {\r\n            throw new Error('moment must be set and initialized');\r\n        }\r\n\r\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\r\n        this.calcTextWidth = calcTextWidth;\r\n        this.themeType = themeType || 'light';\r\n        this.chart = {yAxis: []};\r\n        this.isTouch = 'ontouchstart' in window.document.documentElement;\r\n    }\r\n\r\n    setThemeName(themeType) {\r\n        this.themeType = themeType || 'light';\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    getHelperChartData() {\r\n        return this.chart;\r\n    }\r\n\r\n    convertData(data, i, yAxisIndex) {\r\n        const values = data[i];\r\n        if (!values || !values.length) {\r\n            return [];\r\n        }\r\n\r\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\r\n        this.chart.yAxis[yAxisIndex] = yAxis;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i].value[1] === null) {\r\n                continue;\r\n            }\r\n\r\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\r\n                yAxis.min = values[i].value[1];\r\n            }\r\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\r\n                yAxis.max = values[i].value[1];\r\n            }\r\n        }\r\n\r\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\r\n            this.chart.xMin = values[0].value[0];\r\n        }\r\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\r\n            this.chart.xMax = values[values.length - 1].value[0];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries(data, theme) {\r\n        this.chart.xMin = null;\r\n        this.chart.xMax = null;\r\n        let colorCount = 0;\r\n\r\n        return this.config.l.map((oneLine, i) => {\r\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\r\n            if (!oneLine.color) {\r\n                colorCount++;\r\n            }\r\n\r\n            oneLine.shadowsize = parseFloat(oneLine.shadowsize) || 0;\r\n            if (oneLine.dashes === 'false') {\r\n                oneLine.dashes = false;\r\n            } else if (oneLine.dashes === 'true') {\r\n                oneLine.dashes = true;\r\n            }\r\n\r\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\r\n            const cfg = {\r\n                name: oneLine.name,\r\n                clip: true,\r\n                xAxisIndex: 0,\r\n                yAxisIndex,\r\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\r\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                step: oneLine.chartType === 'steps' ? 'end' : (oneLine.chartType === 'stepsStart' ? 'start' : undefined) ,\r\n                smooth: oneLine.chartType === 'spline',\r\n                data: this.convertData(data, i, yAxisIndex),\r\n                itemStyle: {color},\r\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\r\n                symbol: 'circle',\r\n                lineStyle: {\r\n                    width:          parseFloat(oneLine.thickness) || 1,\r\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\r\n                    shadowColor:    color,\r\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\r\n                }\r\n            };\r\n            if (parseFloat(oneLine.fill)) {\r\n                let _color;\r\n                if (!this.isTouch) {\r\n                    _color = new LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: brighterColor(color, 30)\r\n                    }, {\r\n                        offset: 1,\r\n                        color\r\n                    }]);\r\n                } else {\r\n                    _color = color;\r\n                }\r\n                cfg.areaStyle = {\r\n                    color: _color,\r\n                    opacity: parseFloat(oneLine.fill) || 0,\r\n                };\r\n            }\r\n\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getXAxis() {\r\n        return [\r\n            {\r\n                type: 'time',\r\n                splitLine: {\r\n                    show: !this.config.grid_hideX,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\r\n                        color: this.config.grid_color,\r\n                        type: 'dashed',\r\n                    } : {type: 'dashed'},\r\n                },\r\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\r\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\r\n                min: this.chart.xMin,\r\n                max: this.chart.xMax,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\r\n                        {color: 'rgba(0,0,0,0)'}\r\n                        :\r\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\r\n                },\r\n                axisLabel: {\r\n                    formatter: this.xFormatter.bind(this),\r\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getYAxis(theme, series) {\r\n        return this.config.l.map((oneLine, i) => {\r\n            if (!oneLine || (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined)) {\r\n                return {};\r\n            }\r\n\r\n            let yMin = parseFloat(oneLine.min);\r\n            let yMax = parseFloat(oneLine.max);\r\n\r\n            const yAxis = this.chart.yAxis;\r\n            if (yAxis[i]) {\r\n                const diff = yAxis[i].max - yAxis[i].min;\r\n                if (isNaN(yMin)) {\r\n                    // auto calculate\r\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\r\n                    if (diff > 25000) {\r\n                        yMin = Math.floor(yMin / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMin = Math.floor(yMin / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMin = Math.floor(yMin / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMin = Math.floor(yMin / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMin = Math.floor(yMin);\r\n                    } else if (diff > 1) {\r\n                        yMin = Math.floor(yMin * 10) / 10;\r\n                    }\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    // auto calculate\r\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\r\n                    if (diff > 25000) {\r\n                        yMax = Math.ceil(yMax / 10000) * 10000;\r\n                    } else if (diff > 5000) {\r\n                        yMax = Math.ceil(yMax / 1000) * 1000;\r\n                    } else if (diff > 200) {\r\n                        yMax = Math.ceil(yMax / 100) * 100;\r\n                    } else if (diff > 30) {\r\n                        yMax = Math.ceil(yMax / 10) * 10;\r\n                    } else if (diff > 10) {\r\n                        yMax = Math.ceil(yMax);\r\n                    } else if (diff > 1) {\r\n                        yMax = Math.floor(yMax * 10) / 10;\r\n                    }\r\n                }\r\n            } else {\r\n                if (isNaN(yMin)) {\r\n                    yMin = undefined;\r\n                }\r\n                if (isNaN(yMax)) {\r\n                    yMax = undefined;\r\n                }\r\n            }\r\n\r\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\r\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\r\n                color = series[i].itemStyle.color;\r\n            }\r\n\r\n            return {\r\n                type: 'value',\r\n                min: yMin,\r\n                max: yMax,\r\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\r\n                    'left' :\r\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\r\n                            'right' :\r\n                            (!i ? 'left' : 'right')\r\n                    ), // by default only first line is on the left\r\n                splitLine: !i ? { // grid has only first line\r\n                    show: !this.config.grid_hideY,\r\n                    lineStyle: {\r\n                        color: color || undefined,\r\n                        type: 'dashed',\r\n                    },\r\n                } : undefined,\r\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\r\n                axisLabel: {\r\n                    formatter: value => this.yFormatter(value, i, true),\r\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\r\n                },\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    getMarkings(options) {\r\n        // fill markings\r\n        this.config.marks && this.config.marks.forEach(oneMark => {\r\n            if (!oneMark) {\r\n                return;\r\n            }\r\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\r\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\r\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\r\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\r\n\r\n            const series = options.series[oneMark.lineId];\r\n\r\n            if (!series) {\r\n                console.error('Mark line has no chart line');\r\n                return;\r\n            }\r\n\r\n            if (isLowerNumber && isUpperNumber) {\r\n                // area\r\n                series.markArea = series.markArea || {\r\n                    symbol: ['none', 'none'],\r\n                    itemStyle: {\r\n                        color:       oneMark.color || series.itemStyle.color,\r\n                        borderWidth: 0,\r\n                        opacity:     parseFloat(oneMark.fill) || 0,\r\n                    },\r\n                    data: []\r\n                };\r\n                series.markArea.data.push([\r\n                    {yAxis: lowerLimitFloat, name: oneMark.text || ''},\r\n                    {yAxis: upperLimitFloat},\r\n                ]);\r\n\r\n            }\r\n            if (isLowerNumber || isUpperNumber) {\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (!i && !isUpperNumber) {\r\n                        continue;\r\n                    } else if (i && !isLowerNumber) {\r\n                        continue;\r\n                    }\r\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\r\n                    series.markLine = series.markLine || {\r\n                        symbol: ['none', 'none'],\r\n                        data: []\r\n                    };\r\n\r\n                    series.markLine.data.push({\r\n                        yAxis: limitFloat,\r\n                        name: oneMark.text,\r\n                        lineStyle: {\r\n                            color:          oneMark.color || series.itemStyle.color,\r\n                            width:          parseFloat(oneMark.ol) || 1,\r\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\r\n                            shadowColor:    oneMark.color,\r\n                            type:           oneMark.lineStyle || 'solid',\r\n                        },\r\n                        label: {\r\n                            show: !!oneMark.text,\r\n                            formatter: param => param.name,\r\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\r\n                            distance: (-1 * oneMark.textOffset) || -35,\r\n                            textStyle: {\r\n                                color: oneMark.textColor || '#FFF',\r\n                                fontStyle: 'normal',\r\n                                fontSize: oneMark.textSize || undefined,\r\n                            }\r\n                        },\r\n                    });\r\n\r\n                    if (this.config.l[oneMark.lineId]) {\r\n                        // if minimum not set\r\n                        let yMin = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMin) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\r\n                                options.yAxis[0].min = limitFloat;\r\n                            }\r\n                        }\r\n                        let yMax = parseFloat(this.config.l[oneMark.lineId].min);\r\n                        if (isNaN(yMax) && this.chart.yAxis[oneMark.lineId]) {\r\n                            if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\r\n                                options.yAxis[0].max = limitFloat;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    yFormatter(val, line, withUnit, interpolated) {\r\n        if (this.config.l[line].type === 'boolean') {\r\n            return val ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        if (val === null || val === undefined) {\r\n            return '';\r\n        }\r\n\r\n        const afterComma = this.config.l[line].afterComma;\r\n        if (afterComma !== undefined && afterComma !== null) {\r\n            val = parseFloat(val);\r\n            if (this.config.useComma) {\r\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        } else {\r\n            if (interpolated) {\r\n                val = Math.round(val * 10000) / 10000;\r\n            }\r\n\r\n            if (this.config.useComma) {\r\n                val = parseFloat(val) || 0;\r\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\r\n            } else {\r\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\r\n            }\r\n        }\r\n    }\r\n\r\n    isXLabelHasBreak() {\r\n        if (this.config.timeFormat) {\r\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return false;\r\n        } else if (this.chart.withTime) {\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    xFormatter(value, _index) {\r\n        const date = new Date(value);\r\n        if (this.config.timeFormat) {\r\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\r\n        } else\r\n        if (this.chart.withSeconds) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n        } else if (this.chart.withTime) {\r\n            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n        } else {\r\n            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n        }\r\n    }\r\n\r\n    // result.val === null => start and end are null\r\n    // result === null => no start or no end\r\n    getInterpolatedValue(i, ts, type, hoverNoNulls) {\r\n        const data = this.option.series[i].data;\r\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\r\n            return null;\r\n        }\r\n\r\n        for (let k = 0; k < data.length - 1; k++) {\r\n            if (data[k].value[0] === ts) {\r\n                // Calculate\r\n                return {exact: true, val: data[k].value[1]};\r\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\r\n                const y1 = data[k].value[1];\r\n                const y2 = data[k + 1].value[1];\r\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\r\n                    return hoverNoNulls ? null : {exact: false, val: null};\r\n                }\r\n                if (type === 'boolean') {\r\n                    return {exact: false, val: y1};\r\n                }\r\n\r\n                // interpolate\r\n                const diff = data[k + 1].value[0] - data[k].value[0];\r\n                const kk = (data[k + 1].value[0] - ts) / diff;\r\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\r\n            }\r\n        }\r\n        return hoverNoNulls ? null : {exact: false, val: null};\r\n    }\r\n\r\n    renderTooltip(params) {\r\n        const ts = params[0].value[0];\r\n        const date = new Date(ts);\r\n        const hoverNoNulls = this.config.hoverNoNulls === true || this.config.hoverNoNulls === 'true';\r\n\r\n        const values = this.option.series.map((line, i) => {\r\n            const p = params.find(param => param.seriesIndex === i);\r\n            let interpolated;\r\n            if (p) {\r\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\r\n            }\r\n\r\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type, hoverNoNulls);\r\n            if (!interpolated) {\r\n                return '';\r\n            }\r\n            if (!interpolated.exact && this.config.hoverNoInterpolate) {\r\n                return '';\r\n            }\r\n\r\n            const val = interpolated.val === null ?\r\n                'null' :\r\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact);\r\n\r\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\r\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\r\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\r\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\r\n                `</div>`;\r\n        });\r\n\r\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, h:mm:ss.SSS';\r\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\r\n    }\r\n\r\n    getLegend(xAxisHeight, actualValues) {\r\n        if (!this.config.legend || this.config.legend === 'none') {\r\n            return undefined;\r\n        } else {\r\n            const legend = {\r\n                data:   this.config.l.map(oneLine => oneLine.name),\r\n                show:   true,\r\n                left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft  + 1 : undefined,\r\n                right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight + 1 : undefined,\r\n                top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  10 : undefined,\r\n                bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  xAxisHeight + 20 : undefined,\r\n                backgroundColor: this.config.legBg || undefined,\r\n                formatter: (name, arg) => {\r\n                    if (this.config.legActual && actualValues) {\r\n                        for (let i = 0; i < this.config.l.length; i++) {\r\n                            if (this.config.l[i].name === name) {\r\n                                return `${name} [${this.yFormatter(actualValues[i], i, true)}]`;\r\n                            }\r\n                        }\r\n                    }\r\n                    return name;\r\n                },\r\n                textStyle: {\r\n                    color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n                },\r\n                orient: this.config.legendDirection || 'horizontal',\r\n                selected: {}\r\n            };\r\n\r\n            this.config.l.forEach(oneLine => legend.selected[oneLine.name] = oneLine.hide !== true);\r\n\r\n            return legend;\r\n        }\r\n    }\r\n\r\n    getTitle(xAxisHeight) {\r\n        if (!this.config || !this.config.title) {\r\n            return undefined;\r\n        }\r\n        let titlePos = {};\r\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\r\n            const parts = a.split(':');\r\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n        });\r\n\r\n        return {\r\n            text: this.config.title,\r\n            textStyle: {\r\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\r\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\r\n            },\r\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n            top:               titlePos.top  === 35 ? 5        : (titlePos.top   === 50 ? '50%'   : undefined),\r\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\r\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight - 10 : titlePos.bottom) : undefined,\r\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\r\n        };\r\n    }\r\n\r\n    getOption(data, config, actualValues) {\r\n        if (config) {\r\n            this.config = JSON.parse(JSON.stringify(config));\r\n        }\r\n        const useCanvas = this.isTouch && this.config.zoom;\r\n        const xAxisHeight = 20;\r\n\r\n        let theme = this.config.theme;\r\n        if (!theme || theme === 'default') {\r\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\r\n        }\r\n\r\n        this.debug = this.config && this.config.debug;\r\n\r\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\r\n\r\n        const series = this.getSeries(data, theme);\r\n\r\n        if (this.config.start) {\r\n            if (this.chart.xMax < this.config.end) {\r\n                this.chart.xMax = this.config.end;\r\n            }\r\n            if (this.chart.xMin > this.config.start) {\r\n                this.chart.xMin = this.config.start;\r\n            }\r\n        }\r\n\r\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        const yAxis = this.getYAxis(theme, series);\r\n        const xAxis = this.getXAxis();\r\n\r\n        const option = {\r\n            theme,\r\n            backgroundColor: 'transparent',\r\n            animation: !this.config.noAnimation && !this.config.noLoader,\r\n            grid: {\r\n                backgroundColor: this.config.bg_custom || 'transparent',\r\n                show: !!this.config.bg_custom,\r\n                left:   0,\r\n                top:    8,\r\n                right:  0,\r\n                bottom: this.isXLabelHasBreak() ? 40 : 24,\r\n            },\r\n            tooltip: this.config.hoverDetail ? {\r\n                trigger: 'axis',\r\n                formatter: params => this.renderTooltip(params),\r\n                hoverAnimation: true,\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            } : undefined,\r\n            xAxis,\r\n            yAxis,\r\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\r\n                left: 'right',\r\n                feature: {\r\n                    saveAsImage: {\r\n                        title: props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,*/\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series,\r\n            useCanvas\r\n        };\r\n\r\n        this.getMarkings(option);\r\n\r\n        // calculate padding: left and right\r\n        let padLeft  = 0;\r\n        let padRight = 0;\r\n        series.forEach((ser, i) => {\r\n            let yAxis = option.yAxis[ser.yAxisIndex];\r\n            if (!yAxis) {\r\n                // seems this axis is defined something else\r\n                const cY = this.config.l[ser.yAxisIndex] ? this.config.l[ser.yAxisIndex].commonYAxis : undefined;\r\n                if (cY !== undefined) {\r\n                    yAxis = option.yAxis[cY];\r\n                } else {\r\n                    console.log('Cannot find Y axis for line ' + i);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let minTick = this.yFormatter(yAxis.min, i, true);\r\n            let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\r\n\r\n            const position = yAxis.position;\r\n            if (position === 'off' || (yAxis.axisLabel && yAxis.axisLabel.color === 'rgba(0,0,0,0)')) {\r\n                return;\r\n            }\r\n            let wMin = this.calcTextWidth(minTick) + 4;\r\n            let wMax = this.calcTextWidth(maxTick) + 4;\r\n            if (position === 'left' || position === 'leftColor') {\r\n                if (wMin > padLeft) {\r\n                    padLeft = wMin;\r\n                }\r\n                if (wMax > padLeft) {\r\n                    padLeft = wMax;\r\n                }\r\n            } else {\r\n                if (wMin > padRight) {\r\n                    padRight = wMin;\r\n                }\r\n                if (wMax > padRight) {\r\n                    padRight = wMax;\r\n                }\r\n            }\r\n        });\r\n        option.grid.left    = padLeft  + 10;\r\n        option.grid.right   = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\r\n        this.chart.padLeft  = option.grid.left;\r\n        this.chart.padRight = option.grid.right;\r\n\r\n        // 'nw': 'Top, left',\r\n        // 'ne': 'Top, right',\r\n        // 'sw': 'Bottom, left',\r\n        // 'se': 'Bottom, right',\r\n        option.legend = this.getLegend(xAxisHeight, actualValues);\r\n        option.title  = this.getTitle(xAxisHeight);\r\n\r\n        if (!this.config.grid_color) {\r\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\r\n        }\r\n\r\n        this.option = option;\r\n        return this.option;\r\n    }\r\n}\r\n\r\nexport default ChartOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\r\nimport {FaDownload as IconExport}  from 'react-icons/fa'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/nl';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/de';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/scatter';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/markLine';\r\nimport 'echarts/lib/component/markArea';\r\nimport 'echarts/lib/coord/cartesian/Grid';\r\nimport 'echarts/lib/coord/cartesian/Axis2D';\r\nimport 'zrender/lib/svg/svg';\r\nimport 'zrender/lib/canvas/canvas';\r\n\r\nimport ChartOption from './ChartOption';\r\n\r\n// Themes\r\nimport 'echarts/theme/azul';\r\nimport 'echarts/theme/bee-inspired';\r\nimport 'echarts/theme/blue';\r\nimport 'echarts/theme/infographic';\r\nimport 'echarts/theme/vintage';\r\nimport 'echarts/theme/dark';\r\nimport 'echarts/theme/macarons';\r\nimport 'echarts/theme/shine';\r\nimport 'echarts/theme/roma';\r\nimport 'echarts/theme/royal';\r\nimport 'echarts/theme/dark-blue';\r\nimport 'echarts/theme/tech-blue';\r\nimport 'echarts/theme/red';\r\nimport 'echarts/theme/red-velvet';\r\nimport 'echarts/theme/green';\r\nimport 'echarts/theme/gray';\r\nimport 'echarts/theme/dark-bold';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    },\r\n    exportButton: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        right: 5,\r\n        width: 20,\r\n        height: 20,\r\n        zIndex: 2,\r\n        opacity: 0.7,\r\n        cursor: 'pointer'\r\n        //background: '#00000000',\r\n    },\r\n    resetButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 25,\r\n        zIndex: 2,\r\n        opacity: 0.7\r\n        //background: '#00000000',\r\n    },\r\n    resetButtonIcon: {\r\n        paddingTop: 6,\r\n    },\r\n});\r\n\r\nlet canvasCalcTextWidth = null;\r\nfunction calcTextWidth(text, fontSize, fontFamily) {\r\n    // canvas for better performance\r\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\r\n    const context = canvas.getContext('2d');\r\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\r\n    const metrics = context.measureText(text);\r\n    return Math.ceil(metrics.width);\r\n}\r\n\r\nif (!String.prototype.padStart) {\r\n    // Copyright (c) 2019 Behnam Mohammadi MIT https://github.com/behnammodi/polyfill/blob/master/string.polyfill.js#L273\r\n    // eslint-disable-next-line\r\n    String.prototype.padStart = function padStart(targetLength, padString) {\r\n        targetLength = targetLength >> 0; // floor if number or convert non-number to 0;\r\n        padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n        if (this.length > targetLength) {\r\n            return String(this);\r\n        } else {\r\n            targetLength = targetLength - this.length;\r\n            if (targetLength > padString.length) {\r\n                padString += padString.repeat(targetLength / padString.length); // append to original to ensure we are longer than needed\r\n            }\r\n            return padString.slice(0, targetLength) + String(this);\r\n        }\r\n    };\r\n}\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: null,\r\n            chartWidth: null,\r\n\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n        this.divResetButton = React.createRef();\r\n\r\n        this.selected = null;\r\n\r\n        moment.locale(I18n.getLanguage());\r\n\r\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\r\n        this.lastIds.sort();\r\n\r\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    updateProperties = props => {\r\n        this.updatePropertiesTimeout = null;\r\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n            const chartInstance = this.echartsReact.getEchartsInstance();\r\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\r\n            lastIds.sort();\r\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\r\n            // If list of IDs changed => clear all settings\r\n            if (changed)  {\r\n                this.lastIds = lastIds;\r\n                chartInstance.clear();\r\n            }\r\n\r\n            this.option = this.chartOption.getOption(props.data, props.config, props.actualValues);\r\n            this.applySelected();\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\r\n            try {\r\n                chartInstance.setOption(this.option, changed);\r\n            } catch (e) {\r\n                console.error('Cannot apply options: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n        if (props.data !== this.state.data) {\r\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\r\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    /*updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.xMax - this.chart.xMin;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.xMin,\r\n                                max: this.chart.xMax,\r\n                            }\r\n                        }, true);\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.xMin,\r\n                        max: this.chart.xMax,\r\n                    }\r\n                }, true);\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }*/\r\n\r\n    setNewRange(updateChart) {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.diff        = chart.xMax - chart.xMin;\r\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\r\n        chart.withSeconds = chart.diff < 60000 * 30;\r\n\r\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${new Date(chart.xMin)}, max: ${new Date(chart.xMax)}}`);\r\n        if (updateChart) {\r\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n            this.updateDataTimer = null;\r\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\r\n        } else {\r\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\r\n            this.option.xAxis[0].min = chart.xMin;\r\n            this.option.xAxis[0].max = chart.xMax;\r\n\r\n            try {\r\n                this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\r\n                this.echartsReact.getEchartsInstance().setOption({\r\n                    xAxis: {\r\n                        min: chart.xMin,\r\n                        max: chart.xMax,\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.error('Cannot apply options 1: ' + JSON.stringify(this.option));\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseMove = e => {\r\n        if (this.mouseDown) {\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                 this.divResetButton.current.style.display = 'block';\r\n            }\r\n            const chart = this.chartOption.getHelperChartData();\r\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\r\n            chart.lastX = e.offsetX - chart.padLeft;\r\n            const diff = chart.xMax - chart.xMin;\r\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n            const shift = Math.round(moved * diff / width);\r\n            chart.xMin += shift;\r\n            chart.xMax += shift;\r\n            this.setNewRange();\r\n        }\r\n    };\r\n\r\n    onMouseDown = e => {\r\n        this.mouseDown = true;\r\n        const chart = this.chartOption.getHelperChartData();\r\n        chart.lastX = e.offsetX;\r\n        if (this.zr && !this.zr._mousemove) {\r\n            this.zr._mousemove = true;\r\n            this.zr.on('mousemove', this.onMouseMove);\r\n        }\r\n        const config = this.props.config;\r\n        if (config.live && this.props.onRangeChange) {\r\n            console.log('Stop update');\r\n            this.props.onRangeChange({stopLive: true});\r\n        }\r\n    };\r\n\r\n    onMouseUp = () => {\r\n        this.mouseDown = false;\r\n        this.setNewRange(true);\r\n        if (this.zr && this.zr._mousemove) {\r\n            this.zr._mousemove = false;\r\n            this.zr.off('mousemove', this.onMouseMove);\r\n        }\r\n    };\r\n\r\n    onMouseWheel = e => {\r\n        const chart = this.chartOption.getHelperChartData();\r\n        let diff = chart.xMax - chart.xMin;\r\n        const width = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n        const x = e.offsetX - chart.padLeft;\r\n        const pos = x / width;\r\n\r\n        const oldDiff = diff;\r\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n        diff = diff * amount;\r\n        const move = oldDiff - diff;\r\n        chart.xMax += move * (1 - pos);\r\n        chart.xMin -= move * pos;\r\n\r\n        this.setNewRange();\r\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\r\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\r\n    };\r\n\r\n    onTouchStart = e => {\r\n        this.mouseDown = true;\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (touches) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            const chart = this.chartOption.getHelperChartData();\r\n            chart.lastX = touches[touches.length - 1].pageX;\r\n\r\n            if (touches.length > 1) {\r\n                chart.lastWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n            } else {\r\n                chart.lastWidth = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTouchEnd = e => {\r\n        if (this.mouseDown) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = false;\r\n            this.setNewRange(true);\r\n        }\r\n    };\r\n\r\n    onTouchMove = e => {\r\n        const touches = e.touches || e.originalEvent.touches;\r\n        if (!touches) {\r\n            return;\r\n        }\r\n        const chart = this.chartOption.getHelperChartData();\r\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\r\n        if (this.mouseDown) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\r\n                this.divResetButton.current.style.display = 'block';\r\n            }\r\n\r\n            if (touches.length > 1) {\r\n                console.log('touch move: ' + touches.length)\r\n                // zoom\r\n                const fingerWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\r\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\r\n                    let diff = chart.xMax - chart.xMin;\r\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                    const amount     = fingerWidth > chart.lastWidth ? 1.05 : 0.95;\r\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\r\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\r\n\r\n                    const pos = positionX / chartWidth;\r\n\r\n                    const oldDiff = diff;\r\n                    diff = diff * amount;\r\n                    const move = oldDiff - diff;\r\n\r\n                    console.log(`Move: ${Math.round(move / 1000)} => ${Math.round(move * pos / 1000)} -- ${Math.round(move * (1 - pos) / 1000)}`);\r\n\r\n                    chart.xMax += move * (1 - pos);\r\n                    chart.xMin -= move * pos;\r\n\r\n                    chart.xMax = Math.round(chart.xMax);\r\n                    chart.xMin = Math.round(chart.xMin);\r\n\r\n                    this.setNewRange();\r\n                }\r\n                chart.lastWidth = fingerWidth;\r\n            } else {\r\n                // swipe\r\n                const moved = chart.lastX - pageX;\r\n                const diff  = chart.xMax - chart.xMin;\r\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\r\n\r\n                const shift = Math.round(moved * diff / chartWidth);\r\n                chart.xMin += shift;\r\n                chart.xMax += shift;\r\n\r\n                this.setNewRange();\r\n            }\r\n        }\r\n        chart.lastX = pageX;\r\n    };\r\n\r\n    installEventHandlers() {\r\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\r\n        const items = this.divRef.current && this.divRef.current.getElementsByClassName('echarts-for-react');\r\n        const div = items && items[0];\r\n\r\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = true;\r\n\r\n            if (!this.option || !this.option.useCanvas) {\r\n                this.zr.on('mousedown', this.onMouseDown);\r\n                this.zr.on('mouseup', this.onMouseUp);\r\n                this.zr.on('mousewheel', this.onMouseWheel);\r\n            } else if (div) {\r\n                div.addEventListener('touchstart', this.onTouchStart, false);\r\n                div.addEventListener('touchend', this.onTouchEnd, false);\r\n                div.addEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\r\n            this.zr._iobInstalled = false;\r\n\r\n            if (!!this.option || !this.option.useCanvas) {\r\n                this.zr.off('mousedown', this.onMouseDown);\r\n                this.zr.off('mouseup', this.onMouseUp);\r\n                this.zr.off('mousewheel', this.onMouseWheel);\r\n                if (this.zr && this.zr._mousemove) {\r\n                    this.zr._mousemove = false;\r\n                    this.zr.off('mousemove', this.onMouseMove);\r\n                }\r\n            } else if (div) {\r\n                div.removeEventListener('touchstart', this.onTouchStart, false);\r\n                div.removeEventListener('touchend', this.onTouchEnd, false);\r\n                div.removeEventListener('touchmove', this.onTouchMove, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    applySelected() {\r\n        // merge selected\r\n        if (this.selected && this.option.legend) {\r\n            Object.keys(this.selected).forEach(name => this.option.legend.selected[name] = this.selected[name]);\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.props.data) {\r\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config, this.props.actualValues);\r\n\r\n            // console.log(JSON.stringify(this.option, null, 2));\r\n\r\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\r\n\r\n            this.applySelected();\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ this.option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.option.theme }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={this.option && this.option.useCanvas ? undefined : { renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    legendselectchanged: e => {\r\n                        this.selected = JSON.parse(JSON.stringify(e.selected));\r\n                    },\r\n                    rendered: e => {\r\n                        this.props.config.zoom && this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\r\n            if (this.state.chartHeight !== chartHeight) {\r\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\r\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderResetButton() {\r\n        return <Fab\r\n            ref={ this.divResetButton }\r\n            size=\"small\"\r\n            color=\"default\"\r\n            style={{display: 'none'}}\r\n            className={this.props.classes.resetButton}\r\n            title={I18n.t('Reset pan and zoom')}\r\n            onClick={() => {\r\n                if (this.divResetButton.current) {\r\n                    this.divResetButton.current.style.display = 'none';\r\n                }\r\n                this.props.onRangeChange && this.props.onRangeChange();\r\n            }}\r\n        >\r\n            <IconReset className={this.props.classes.resetButtonIcon}/>\r\n        </Fab>;\r\n    }\r\n\r\n    renderExportButton() {\r\n        if (this.props.config.export) {\r\n            return <IconExport\r\n                color={this.props.config.exportColor || 'default'}\r\n                className={this.props.classes.exportButton}\r\n                title={this.option && this.option.useCanvas ? I18n.t('Save chart as png') : I18n.t('Save chart as svg')}\r\n                onClick={() => {\r\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\r\n                        const chartInstance = this.echartsReact.getEchartsInstance();\r\n                        const base64 = chartInstance.getDataURL({\r\n                            pixelRatio: 2, // only for png\r\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\r\n                        });\r\n\r\n                        const downloadLink = document.createElement('a');\r\n                        document.body.appendChild(downloadLink);\r\n\r\n                        downloadLink.href = base64;\r\n                        downloadLink.target = '_self';\r\n                        let name = '';\r\n                        if (this.props.config.l.length === 1) {\r\n                            name = this.props.config.l[0].name;\r\n                        } else {\r\n                            name = 'chart';\r\n                        }\r\n                        const option = this.option;\r\n                        if (option &&\r\n                            option.series &&\r\n                            option.series[0] &&\r\n                            option.series[0].data &&\r\n                            option.series[0].data.length) {\r\n                            const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\r\n                            try {\r\n                                downloadLink.download =\r\n                                    `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\r\n                                    `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.${this.option && this.option.useCanvas ? 'png' : 'svg'}`;\r\n                                downloadLink.click();\r\n                            } catch (e) {\r\n                                console.error(`Cannot access download: ${e}`);\r\n                                window.alert(I18n.t('Unfortunately your browser does not support this feature'));\r\n                            }\r\n                        } else {\r\n                            window.alert(I18n.t('No data found'));\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\r\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\r\n\r\n        return <div\r\n            ref={ this.divRef }\r\n            className={ this.props.classes.chart }\r\n            style={{\r\n                borderWidth,\r\n                width:          borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2 + 1}px)` : undefined,\r\n                height:         borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2}px)` : undefined,\r\n                background:     this.props.config.noBackground ? undefined : this.props.config.window_bg || undefined,\r\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\r\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\r\n                padding:        borderPadding || 0,\r\n            }}>\r\n            { this.renderExportButton() }\r\n            { this.renderResetButton() }\r\n            { this.state.chartHeight !== null ? this.renderChart() : null }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    actualValues: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n    onRangeChange: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MD5 from \"crypto-js/md5\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS, ERRORS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        const query     = Utils.parseQuery(window.location.search);\r\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            seriesData: null,\r\n            actualValues: null,\r\n            noLoader:   query.noLoader || queryHash.noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n            noBackground: query.noBG || queryHash.noBG || false,\r\n        };\r\n\r\n        this.inEdit =\r\n            query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit     === 'true' ||\r\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\r\n\r\n        this.divRef      = React.createRef();\r\n        this.progressRef = React.createRef();\r\n        this.progressShown = true;\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        const ownTranslations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n\r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    if (this.state.seriesData) {\r\n                        this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                        this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n                    } else {\r\n                        this.setState({connected: false});\r\n                    }\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                } else {\r\n                    this.setState({connected: true});\r\n                    this.restoreAfterReconnection();\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n                        if (this.inEdit) {\r\n                            window.addEventListener('message', this.onReceiveMessage);\r\n                            if (window.self !== window.parent) {\r\n                                try {\r\n                                    window.parent.postMessage('chartReady','*');\r\n                                } catch (e) {\r\n                                    console.warn('Cannot send ready event to parent window');\r\n                                    console.error(e);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.createChartData();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (err === ERRORS.NOT_CONNECTED) {\r\n                            this.setState({connected: false});\r\n                        } else {\r\n                            this.showError(I18n.t(err));\r\n                        }\r\n                    })\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreAfterReconnection() {\r\n        this.divRef.current && (this.divRef.current.style.opacity = 1);\r\n        this.progressRef.current && !this.progressShown && (this.progressRef.current.style.display = 'none');\r\n        if (this.state.seriesData && !this.state.seriesData.find(series => series.length)) {\r\n            this.chartData.setNewRange();\r\n        }\r\n    }\r\n\r\n    createChartData(config) {\r\n        this.chartData = new ChartModel(this.socket, config);\r\n        this.chartData.onError(err => {\r\n            if (err === ERRORS.NOT_CONNECTED) {\r\n                this.divRef.current && (this.divRef.current.style.opacity = 0.5);\r\n                this.progressRef.current && (this.progressRef.current.style.display = 'block');\r\n            } else {\r\n                this.showError(I18n.t(err));\r\n            }\r\n        });\r\n        this.chartData.onReading(reading => this.showProgress(reading));\r\n        this.chartData.onUpdate((seriesData, actualValues) => {\r\n            const newState = {connected: true, dataLoaded: true};\r\n            seriesData   && (newState.seriesData   = seriesData);\r\n            actualValues && (newState.actualValues = actualValues);\r\n            this.setState(newState, () =>\r\n                this.showProgress(false));\r\n        });\r\n    }\r\n\r\n    showProgress(isShow) {\r\n        this.progressShown = isShow;\r\n        if (this.progressRef.current) {\r\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data !== 'chartReady') {\r\n            try {\r\n                const config = JSON.parse(message.data);\r\n                if (!this.chartData) {\r\n                    this.createChartData(config);\r\n                } else {\r\n                    this.chartData.setConfig(config);\r\n                }\r\n            } catch (e) {\r\n                return console.log('Cannot parse ' + message.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.progressShown && this.progressRef.current && this.progressRef.current.style.display !== 'none') {\r\n            this.progressRef.current.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n        // get IDs hash\r\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\r\n\r\n        if (this.state.seriesData && config.debug) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{\r\n                     width: config.width,\r\n                     height: config.height,\r\n                     background: config.noBackground ? undefined : this.state.theme.palette.background.default,\r\n                     color: this.state.theme.palette.text.primary\r\n                 }}>\r\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\r\n                <ChartView\r\n                    key={hash}\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    actualValues={this.state.actualValues}\r\n                    config={config}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                    onRangeChange={options => this.chartData.setNewRange(options)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-show';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ],\r\n        beforeSend: function (event, hint) {\r\n            let ignore = false;\r\n\r\n            // ignore errors from echarts lib\r\n            if (event.exception &&\r\n                event.exception.values &&\r\n                event.exception.values[0]) {\r\n                if (event.exception.values[0].type === 'NS_ERROR_FAILURE') {\r\n                    ignore = true;\r\n                } else if (event.exception.values[0].value) {\r\n                    if (event.exception.values[0].value.includes('Microsoft YaHei')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === 'ResizeObserver loop completed with undelivered notifications.') {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `undefined is not an object (evaluating 't.get')`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'get' of undefined`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `this.painter is null`) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value.includes('ioBroker is not connected')) {\r\n                        ignore = true;\r\n                    } else if (event.exception.values[0].value === `Cannot read property 'getDisplayList' of null`) {\r\n                        ignore = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ignore ? null : event;\r\n        },\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}