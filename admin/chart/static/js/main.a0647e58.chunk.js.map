{"version":3,"sources":["Components/ChartModel.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["normalizeConfig","config","lines","l","JSON","parse","stringify","_ids","ids","split","colors","_colors","names","_names","units","_units","i","length","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","width","height","timeFormat","useComma","zoom","animation","parseInt","noedit","afterComma","undefined","timeType","ChartModel","constructor","socket","onPresetUpdate","obj","this","native","data","seriesData","onUpdateFunc","onStateChange","state","m","console","log","val","oid","v","parseFloat","oidl","vl","preset","query","Utils","parseQuery","window","location","search","params","coerce","coerceTypes","replace","forEach","param","key","decodeURIComponent","keys","keysLast","test","shift","concat","isNaN","cur","Object","prototype","toString","call","hasOwnProperty","deParam","ticks","liveInterval","navOptions","subscribes","subscribed","sessionId","onReadingFunc","onErrorFunc","getObject","then","readData","subscribeObject","destroy","unsubscribeState","unsubscribeObject","onUpdate","cb","onReading","onError","getConfig","getStartStop","index","step","end","start","_now","option","range","includes","monthRange","a","addTime","now","minusMonth","Date","setMonth","getMonth","Math","floor","getTime","zoomed","zMax","zMin","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","chartRef","current","clientWidth","readOneChart","yOffset","getHistoryEx","res","warn","values","_series","value","ts","unshift","Promise","resolve","catch","err","error","_readOneLine","common","type","e","systemConfig","language","en","_readData","setTimeout","readTicks","splice","readValue","getState","readMarkings","subscribeAll","s","subscribeState","time","plusOrMinus","isOffsetInMinutes","_ticks","padding2","num","ChartView","React","Component","props","super","onResize","timerResize","clearTimeout","componentDidUpdate","chartHeight","chartWidth","echartsReact","createRef","divRef","chart","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","convertData","getSeries","oneLine","xAxisIndex","showSymbol","hoverAnimation","lineStyle","getOption","titlePos","parts","trim","backgroundColor","noAnimation","title","text","textStyle","fontSize","titleSize","titleColor","padding","textVerticalAlign","bottom","textAlign","left","right","top","grid","tooltip","trigger","formatter","date","seriesIndex","toLocaleString","ms","getMilliseconds","join","axisPointer","xAxis","splitNumber","round","axisTick","alignWithLabel","axisLabel","withSeconds","getSeconds","withTime","yAxis","boundaryGap","toolbox","export","feature","saveAsImage","t","show","series","updateChart","withReadData","readTimeout","diff","readHistory","getEchartsInstance","setOption","setNewRange","relativeRange","setState","setRelativeInterval","mins","dontSave","localStorage","setItem","installEventHandlers","getZr","renderChart","ref","echarts","notMerge","lazyUpdate","theme","themeType","style","opts","renderer","onEvents","rendered","LinearProgress","offsetWidth","offsetHeight","render","forceUpdate","className","classes","withWidth","withStyles","maxHeight","maxWidth","overflow","App","themeInstance","createTheme","connected","reading","noLoader","themeName","getThemeName","getThemeType","translations","require","I18n","setTranslations","isIFrame","self","Connection","adapterName","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","setLanguage","systemLang","getSystemConfig","isFloatComma","chartData","showError","palette","errorText","renderError","onClose","root","background","default","primary","lang","getLanguage","withTheme","Boolean","hostname","match","version","host","build","ReactDOM","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0647e58.chunk.js","sourcesContent":["import Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction deParam(params, coerce) {\r\n    const obj = {};\r\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\r\n\r\n    // Iterate over all name=value pairs.\r\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\r\n        const param = v.split('=');\r\n        let key = decodeURIComponent(param[0]);\r\n        let val;\r\n        let i = 0;\r\n\r\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\r\n        // into its component parts.\r\n        let keys = key.split('][');\r\n        let keysLast = keys.length - 1;\r\n\r\n        // If the first keys part contains [ and the last ends with ], then []\r\n        // are correctly balanced.\r\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\r\n            // Remove the trailing ] from the last keys part.\r\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\r\n\r\n            // Split first keys part into two parts on the [ and add them back onto\r\n            // the beginning of the keys array.\r\n            keys = keys.shift().split('[').concat(keys);\r\n\r\n            keysLast = keys.length - 1;\r\n        } else {\r\n            // Basic 'foo' style key.\r\n            keysLast = 0;\r\n        }\r\n\r\n        // Are we dealing with a name=value pair, or just a name?\r\n        if (param.length === 2) {\r\n            val = decodeURIComponent(param[1]);\r\n\r\n            // Coerce values.\r\n            if (coerce) {\r\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\r\n                    : val === 'undefined' ? undefined         // undefined\r\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\r\n                            : val;                                                          // string\r\n            }\r\n\r\n            if (keysLast) {\r\n                let cur = obj;\r\n                // Complex key, build deep object structure based on a few rules:\r\n                // * The 'cur' pointer starts at the object top-level.\r\n                // * [] = array push (n is set to array length), [n] = array if n is\r\n                //   numeric, otherwise object.\r\n                // * If at the last keys part, set the value.\r\n                // * For each keys part, if the current level is undefined create an\r\n                //   object or array based on the type of the next keys part.\r\n                // * Move the 'cur' pointer to the next level.\r\n                // * Rinse & repeat.\r\n                for (; i <= keysLast; i++) {\r\n                    key = keys[i] === '' ? cur.length : keys[i];\r\n                    cur = cur[key] = i < keysLast\r\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\r\n                        : val;\r\n                }\r\n\r\n            } else {\r\n                // Simple key, even simpler rules, since only scalars and shallow\r\n                // arrays are allowed.\r\n\r\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    // val is already an array, so push on the next value.\r\n                    obj[key].push(val);\r\n                } else if ({}.hasOwnProperty.call(obj, key)) {\r\n                    // val isn't an array, but since a second value has been specified,\r\n                    // convert val into an array.\r\n                    obj[key] = [obj[key], val];\r\n                } else {\r\n                    // val is a scalar.\r\n                    obj[key] = val;\r\n                }\r\n            }\r\n        } else if (key) {\r\n            // No value was defined, so set something meaningful.\r\n            obj[key] = coerce\r\n                ? undefined\r\n                : '';\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\nfunction normalizeConfig(config) {\r\n    if (config.lines) {\r\n        config.l = JSON.parse(JSON.stringify(config.lines));\r\n        delete config.lines;\r\n    }\r\n\r\n    if (config._ids) {\r\n        const ids    = config._ids    ? config._ids.split(';')    : [];\r\n        const colors = config._colors ? config._colors.split(';') : [];\r\n        const names  = config._names  ? config._names.split(';')  : [];\r\n        const units  = config._units  ? config._units.split(';')  : [];\r\n        config.l = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            config.l.push({\r\n                id:         ids[i],\r\n                offset:     0,\r\n                name:       names[i] || '',\r\n                aggregate:  'onchange',\r\n                color:      colors[i] || 'blue',\r\n                thickness:  config.strokeWidth || 1,\r\n                shadowsize: config.strokeWidth || 1,\r\n                min:        config.min || '',\r\n                max:        config.max || '',\r\n                unit:       units[i]   || ''\r\n            });\r\n        }\r\n        config.aggregateType = 'step';\r\n        config.aggregateSpan = 300;\r\n        config.relativeEnd   = 'now';\r\n    }\r\n\r\n    // convert art to aggregate\r\n    if (config.l) {\r\n        for (let j = 0; j < config.l.length; j++) {\r\n            if (config.l[j].art) {\r\n                config.l[j].aggregate = config.l[j].art;\r\n                delete config.l[j].art;\r\n            }\r\n            if (config.instance && !config.l[j].instance) {\r\n                config.l[j].instance = config.instance;\r\n            }\r\n        }\r\n    }\r\n\r\n    config.l = config.l || [];\r\n\r\n    if (!config.l.length) {\r\n        config.l.push({id: '', unit: ''});\r\n    }\r\n\r\n    // Set default values\r\n    config.width        = config.width                 || '100%';\r\n    config.height       = config.height                || '100%';\r\n    config.timeFormat   = config.timeFormat            || '%H:%M:%S %e.%m.%y';\r\n    config.useComma     = config.useComma   === 'true' || config.useComma  === true;\r\n    config.zoom         = config.zoom       === 'true' || config.zoom      === true;\r\n    config.animation    = parseInt(config.animation)   || 0;\r\n    config.noedit       = config.noedit     === 'true' || config.noedit    === true;\r\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\r\n    config.timeType     = config.timeType || 'relative';\r\n    return config;\r\n}\r\n\r\nclass ChartModel {\r\n    constructor(socket, config) {\r\n        if (!config) {\r\n            const query = Utils.parseQuery(window.location.search); // Utils.parseQuery\r\n\r\n            if (query.preset) {\r\n                this.preset = query.preset;\r\n            } else {\r\n                // search ID and range\r\n                const config = deParam((window.location.search || '').toString().replace(/^\\?/, ''));\r\n                this.config = normalizeConfig(config);\r\n            }\r\n        } else {\r\n            if (typeof config === 'string') {\r\n                this.preset = config;\r\n            } else {\r\n                this.config = config;\r\n            }\r\n        }\r\n\r\n        this.socket = socket;\r\n\r\n        this.seriesData      = [];\r\n        this.ticks           = null;\r\n        this.liveInterval    = null;\r\n\r\n        this.navOptions      = {};\r\n\r\n        this.subscribes      = [];\r\n        this.subscribed      = false;\r\n        this.sessionId       = 1;\r\n\r\n        this.onUpdateFunc    = null;\r\n        this.onReadingFunc   = null;\r\n        this.onErrorFunc     = null;\r\n\r\n        if (this.preset) {\r\n            this.socket.getObject(this.preset)\r\n                .then(obj => {\r\n                    this.config = normalizeConfig(obj.native.data);\r\n                    this.readData();\r\n                    this.socket.subscribeObject(this.preset, this.onPresetUpdate);\r\n                });\r\n        } else {\r\n            this.readData();\r\n        }\r\n    }\r\n\r\n    onPresetUpdate = (id, obj) => {\r\n        if (obj) {\r\n            this.config = normalizeConfig(obj.native.data);\r\n        } else {\r\n            this.config = normalizeConfig({});\r\n        }\r\n\r\n        // just copy data to force update\r\n        this.seriesData = JSON.parse(JSON.stringify(this.seriesData));\r\n        this.onUpdateFunc && this.onUpdateFunc(this.seriesData);\r\n    };\r\n\r\n    destroy() {\r\n        if (this.subscribed) {\r\n            this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChange));\r\n            this.subscribes = [];\r\n            this.subscribed = null;\r\n        }\r\n        if (this.preset) {\r\n            this.socket.unsubscribeObject(this.preset, this.onPresetUpdate);\r\n        }\r\n    }\r\n\r\n    onUpdate(cb) {\r\n        this.onUpdateFunc = cb;\r\n    }\r\n\r\n    onReading(cb) {\r\n        this.onReadingFunc = cb;\r\n    }\r\n\r\n    onError(cb) {\r\n        this.onErrorFunc = cb;\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    getStartStop(index, step) {\r\n        let option = {};\r\n        let end;\r\n        let start;\r\n        let _now;\r\n        this.config.l[index].offset = this.config.l[index].offset || 0;\r\n\r\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\r\n\r\n        // check config range\r\n        if (isMonthRange && this.config.l.length > 1) {\r\n            const monthRange = parseInt(this.config.range, 10) || 1;\r\n            for (let a = 0; a < this.config.l.length; a++) {\r\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\r\n                    // Check what the month has first index\r\n                    _now = this.addTime(this.now, this.config.l[0].offset);\r\n                    const minusMonth = new Date(_now);\r\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\r\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.config.zoomed) {\r\n            this.navOptions[index].end   = this.config.l[index].zMax;\r\n            this.navOptions[index].start = this.config.l[index].zMin;\r\n            return this.navOptions[index];\r\n        } else {\r\n            if (!step) {\r\n                if (this.config.timeType === 'static') {\r\n                    let startTime;\r\n                    let endTime;\r\n                    if (this.config.start_time !== undefined) {\r\n                        startTime = this.config.start_time.split(':').map(Number);\r\n                    } else {\r\n                        startTime = [0, 0];\r\n                    }\r\n\r\n                    if (this.config.end_time !== undefined) {\r\n                        endTime = this.config.end_time.split(':').map(Number);\r\n                    } else {\r\n                        endTime = [24, 0];\r\n                    }\r\n\r\n                    // offset is in seconds\r\n                    start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\r\n                    end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\r\n                    start = this.addTime(start, this.config.l[index].offset);\r\n                    end   = this.addTime(end,   this.config.l[index].offset);\r\n                } else {\r\n                    this.config.relativeEnd = this.config.relativeEnd || 'now';\r\n\r\n                    if (this.config.relativeEnd === 'now') {\r\n                        _now = new Date(this.now);\r\n                    } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\r\n                        const minutes = parseInt(this.config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\r\n                        const hours = parseInt(this.config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'today') {\r\n                        _now = new Date(this.now);\r\n                        _now.setDate(_now.getDate() + 1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'weekUsa') {\r\n                        //const week = parseInt(config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        _now.setDate(_now.getDate() - _now.getDay() + 7);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'weekEurope') {\r\n                        //const _week = parseInt(config.relativeEnd, 10) || 1;\r\n                        _now = new Date(this.now);\r\n                        // If\r\n                        if (_now.getDay() === 0) {\r\n                            _now.setDate(_now.getDate() + 1);\r\n                        } else {\r\n                            _now.setDate(_now.getDate() - _now.getDay() + 8);\r\n                        }\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'month') {\r\n                        _now = new Date(this.now);\r\n                        _now.setMonth(_now.getMonth() + 1);\r\n                        _now.setDate(1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    } else if (this.config.relativeEnd === 'year') {\r\n                        _now = new Date(this.now);\r\n                        _now.setFullYear(_now.getFullYear() + 1);\r\n                        _now.setMonth(0);\r\n                        _now.setDate(1);\r\n                        _now.setHours(0);\r\n                        _now.setMinutes(0);\r\n                        _now.setSeconds(0);\r\n                        _now.setMilliseconds(0);\r\n                    }\r\n\r\n                    this.config.range = this.config.range || '30m';\r\n\r\n                    end   = this.addTime(_now, this.config.l[index].offset);\r\n                    start = this.addTime(end,  this.config.range, false, true);\r\n                }\r\n\r\n                option = {\r\n                    start:      start,\r\n                    end:        end,\r\n                    ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                    aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                    from:       false,\r\n                    ack:        false,\r\n                    q:          false,\r\n                    addID:      false,\r\n\r\n                };\r\n\r\n                if (this.config.aggregateType === 'step') {\r\n                    option.step = this.config.aggregateSpan * 1000;\r\n                } else if (this.config.aggregateType === 'count') {\r\n                    option.count = this.config.aggregateSpan || (this.chartRef.current.clientWidth / 10);\r\n                }\r\n\r\n                this.navOptions[index] = option;\r\n                return option;\r\n            } else {\r\n                end   = this.addTime(this.now, this.config.l[index].offset);\r\n                start = end - step;\r\n\r\n                option = {\r\n                    start:      start,\r\n                    end:        end,\r\n                    ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\r\n                    aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\r\n                    count:      1,\r\n                    from:       false,\r\n                    ack:        false,\r\n                    q:          false,\r\n                    addID:      false,\r\n                };\r\n\r\n                this.navOptions[index].end   = end;\r\n                this.navOptions[index].start = this.addTime(end, this.config.range, false, true);\r\n                return option;\r\n            }\r\n        }\r\n    }\r\n\r\n    readOneChart(id, instance, index, cb) {\r\n        const option = this.getStartStop(index);\r\n        option.instance  = instance;\r\n        option.sessionId = this.sessionId;\r\n        this.config.l[index].yOffset = parseFloat(this.config.l[index].yOffset) || 0;\r\n\r\n        //console.log(JSON.stringify(option));\r\n        console.log(new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n        this.socket.getHistoryEx(id, option)\r\n            .then(res => {\r\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                    return console.warn(`Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                }\r\n\r\n                if (res && res.values) {\r\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\r\n                    option.yOffset = this.config.l[index].yOffset;\r\n                    const values = res.values;\r\n\r\n                    const _series = this.seriesData[index];\r\n\r\n                    for (let i = 0; i < values.length; i++) {\r\n                        // if less 2000.01.01 00:00:00\r\n                        //if (values[i].ts < 946681200000) {\r\n                        //    values[i].ts = values[i].ts * 1000;\r\n                        //}\r\n\r\n                        // Convert boolean values to numbers\r\n                        if (values[i].val === 'true' || values[i].val === true) {\r\n                            values[i].val = 1;\r\n                        } else if (values[i].val === 'false' || values[i].val === false) {\r\n                            values[i].val = 0;\r\n                        }\r\n                        if (typeof values[i].val === 'string') {\r\n                            values[i].val = parseFloat(values[i].val);\r\n                        }\r\n\r\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\r\n                    }\r\n\r\n                    // add start and end\r\n                    if (_series.length) {\r\n                        if (_series[0][0] > option.start) {\r\n                            _series.unshift({value: [option.start, null]});\r\n                        }\r\n                        if (_series[_series.length - 1][0] < option.end) {\r\n                            _series.push({value: [option.end, null]});\r\n                        }\r\n                    } else {\r\n                        _series.push({value: [option.start, null]});\r\n                        _series.push({value: [option.end,   null]});\r\n                    }\r\n\r\n                    // free memory\r\n                    res.values = null;\r\n                    res = null;\r\n                }\r\n\r\n                return Promise.resolve();\r\n            })\r\n            .catch(err => err && console.error(err))\r\n            .then(() => cb(id, index))\r\n    }\r\n\r\n    _readOneLine(index, cb) {\r\n        return this.socket.getObject(this.config.l[index].id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\r\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\r\n                    this.config.l[index].type = obj.common.type;\r\n                } else {\r\n                    this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                    this.config.l[index].unit = this.config.l[index].unit || '';\r\n                }\r\n                return Promise.resolve();\r\n            })\r\n            .catch(e => {\r\n                console.error(`Cannot read object ${this.config.l[index].id}: ${e}`);\r\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\r\n                this.config.l[index].unit = this.config.l[index].unit || '';\r\n                return Promise.resolve();\r\n            })\r\n            .then(() => {\r\n                if (typeof this.config.l[index].name === 'object') {\r\n                    this.config.l[index].name = this.config.l[index].name[this.state.systemConfig.language] || this.config.l[index].name.en;\r\n                }\r\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance, index, cb);\r\n            });\r\n    }\r\n\r\n    _readData(cb, j) {\r\n        j = j || 0;\r\n        if (j >= this.config.l.length) {\r\n            return cb();\r\n        } else {\r\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\r\n                this.seriesData.push([]);\r\n            }\r\n\r\n            this._readOneLine(j, () =>\r\n                setTimeout(() => this._readData(cb, j + 1), 10));\r\n        }\r\n    }\r\n\r\n    readTicks(cb) {\r\n        if (!this.config.ticks) {\r\n            cb(null);\r\n        } else {\r\n            const index = 0;\r\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\r\n            option.instance  = this.config.l[index].instance;\r\n            option.sessionId = this.sessionId;\r\n            option.aggregate = 'onchange';\r\n\r\n            console.log('Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\r\n\r\n            this.socket.getHistoryEx(this.config.ticks, option)\r\n                .then(res => {\r\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\r\n                        return console.warn(`Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\r\n                    }\r\n\r\n                    if (res && res.values) {\r\n                        const _series = this.ticks || [];\r\n                        if (this.ticks && this.ticks.length) {\r\n                            this.ticks.splice(0, this.ticks.length);\r\n                        }\r\n\r\n                        const values = res.values;\r\n\r\n                        for (let i = 0; i < values.length; i++) {\r\n                            // if less 2000.01.01 00:00:00\r\n                            //if (values[i].ts < 946681200000) {\r\n                            //    values[i].ts = values[i].ts * 1000;\r\n                            //}\r\n\r\n                            if (values[i].val !== null) {\r\n                                _series.push({value: [values[i].ts, values[i].val]});\r\n                            }\r\n                        }\r\n\r\n                        // add start and end\r\n                        if (_series.length) {\r\n                            if (_series[0][0] > option.start) {\r\n                                _series.unshift({value: [option.start, '']});\r\n                            }\r\n                            if (_series[_series.length - 1][0] < option.end) {\r\n                                _series.push({value: [option.end, '']});\r\n                            }\r\n                        } else {\r\n                            _series.push({value: [option.start, '']});\r\n                            _series.push({value: [option.end,   '']});\r\n                        }\r\n                        // free memory\r\n                        res.values = null;\r\n                        res = null;\r\n\r\n                        this.ticks = _series;\r\n                    }\r\n                    return Promise.resolve();\r\n                })\r\n                .catch(e => console.error(e))\r\n                .then(() => cb && cb(this.ticks));\r\n        }\r\n    }\r\n\r\n    readValue(id, index, cb) {\r\n        this.socket.getState(id)\r\n            .then(state => {\r\n                if (state) {\r\n                    cb(index, parseFloat(state.val) || 0);\r\n                } else {\r\n                    cb(index, 0);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                cb(index, 0);\r\n            });\r\n    }\r\n\r\n    readMarkings(cb, m) {\r\n        m = m || 0;\r\n        if (!this.config.m || !this.config.m.length || m >= this.config.m.length) {\r\n            return cb();\r\n        } else {\r\n            if (!this.config.m[m].oid && this.config.m[m].v && parseFloat(this.config.m[m].v).toString() !== this.config.m[m].v && this.config.m[m].v.includes('.')) {\r\n                if (!this.subscribes.includes(this.config.m[m].v)) {\r\n                    this.subscribes.push(this.config.m[m].v);\r\n                }\r\n\r\n                this.readValue(this.config.m[m].v, m, (index, val) => {\r\n                    this.config.m[index].oid = this.config.m[index].v;\r\n                    this.config.m[index].v   = val;\r\n\r\n                    if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                        if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                            this.subscribes.push(this.config.m[m].vl);\r\n                        }\r\n\r\n                        this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                            this.config.m[index].oidl = this.config.m[index].vl;\r\n                            this.config.m[index].vl   = val;\r\n                            setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                        });\r\n                    } else {\r\n                        setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                    }\r\n                });\r\n            } else\r\n            if (!this.config.m[m].oidl && this.config.m[m].vl && parseFloat(this.config.m[m].vl).toString() !== this.config.m[m].vl && this.config.m[m].vl.includes('.')) {\r\n                if (!this.subscribes.includes(this.config.m[m].vl)) {\r\n                    this.subscribes.push(this.config.m[m].vl);\r\n                }\r\n                this.readValue(this.config.m[m].vl, m, (index, val) => {\r\n                    this.config.m[index].oidl = this.config.m[index].vl;\r\n                    this.config.m[index].vl   = val;\r\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n                });\r\n            } else {\r\n                setTimeout(() => this.readMarkings(cb, m + 1), 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribeAll(subscribes, cb, s) {\r\n        s = s || 0;\r\n\r\n        if (!subscribes || !subscribes.length || s >= subscribes.length) {\r\n            cb();\r\n        } else {\r\n            this.socket.subscribeState(subscribes[s], this.onStateChange);\r\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\r\n        }\r\n    }\r\n\r\n    onStateChange = (id, state) => {\r\n        if (!this.state.seriesData || !this.config || !this.config.m) {\r\n            return;\r\n        }\r\n\r\n        console.log('State update ' + id + ' - ' + state.val);\r\n\r\n        for (let m = 0; m < this.config.m.length; m++) {\r\n            if (this.config.m[m].oid === id) {\r\n                this.config.m[m].v = parseFloat(state.val) || 0;\r\n            }\r\n            if (this.config.m[m].oidl === id) {\r\n                this.config.m[m].vl = parseFloat(state.val) || 0;\r\n            }\r\n        }\r\n        //chart.update(null, ;config.m);\r\n    };\r\n\r\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\r\n        time = new Date(time);\r\n\r\n        if (typeof offset === 'string') {\r\n            if (offset[1] === 'm') {\r\n                offset = parseInt(offset, 10);\r\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\r\n                time = time.getTime();\r\n            } else if (offset[1] === 'y') {\r\n                offset = parseInt(offset, 10);\r\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\r\n                time = time.getTime();\r\n            } else {\r\n                time  = time.getTime();\r\n                if (isOffsetInMinutes) {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 60000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 60000;\r\n                    }\r\n\r\n                } else {\r\n                    if (plusOrMinus) {\r\n                        time += (parseInt(offset, 10) || 0) * 1000;\r\n                    } else {\r\n                        time -= (parseInt(offset, 10) || 0) * 1000;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            time  = time.getTime();\r\n            if (isOffsetInMinutes) {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 60000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 60000;\r\n                }\r\n\r\n            } else {\r\n                if (plusOrMinus) {\r\n                    time += (parseInt(offset, 10) || 0) * 1000;\r\n                } else {\r\n                    time -= (parseInt(offset, 10) || 0) * 1000;\r\n                }\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    readData() {\r\n        this.now = Date.now();\r\n        this.sessionId = this.sessionId || 0;\r\n        this.sessionId++;\r\n        if (this.sessionId > 0xFFFFFF) {\r\n            this.sessionId = 1;\r\n        }\r\n\r\n        if (this.config.l) {\r\n            this.onReadingFunc && this.onReadingFunc(true);\r\n\r\n            // todo\r\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\r\n//\r\n//                seriesData = [[]];\r\n//                for (const j = 0; j < config._ids.length; j++) {\r\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\r\n//                        if (config.renderer === 'pie') {\r\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\r\n//                        } else {\r\n//                            seriesData[0][_index] = [config.l[_index].name, value];\r\n//                        }\r\n//                        if (_index === config._ids.length - 1) {\r\n//                            graphCreate(divId, );\r\n//                        }\r\n//                    });\r\n//                }\r\n//            } else {\r\n            this._readData(() =>\r\n                this.readTicks(_ticks =>\r\n                    this.readMarkings(() => {\r\n                        if (!this.subscribed) {\r\n                            this.subscribed = true;\r\n                            this.subscribeAll(this.subscribes, () =>\r\n                                this.onUpdateFunc(this.seriesData));\r\n                        } else {\r\n                            this.onUpdateFunc(this.seriesData);\r\n                        }\r\n                    })));\r\n        } else {\r\n            this.onErrorFunc && this.onErrorFunc('No config provided');\r\n            this.onReadingFunc && this.onReadingFunc(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/grid';\r\n\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/title';\r\n\r\nimport 'echarts/lib/component/dataZoom';\r\nimport 'echarts/lib/component/timeline';\r\nimport 'zrender/lib/svg/svg';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction padding3(ms) {\r\n    if (ms < 10) {\r\n        return '00' + ms;\r\n    } else if (ms < 100) {\r\n        return '0' + ms;\r\n    } else {\r\n        return ms;\r\n    }\r\n}\r\n\r\nfunction padding2(num) {\r\n    if (num < 10) {\r\n        return '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    chart: {\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n});\r\n\r\nconst GRID_PADDING_LEFT = 80;\r\nconst GRID_PADDING_RIGHT = 25;\r\n\r\nclass ChartView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartHeight: 300,\r\n            chartWidth: 500,\r\n        };\r\n\r\n        this.echartsReact = React.createRef();\r\n        // this.rangeRef     = React.createRef();\r\n\r\n        this.divRef = React.createRef();\r\n\r\n        this.chart = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    onResize = () => {\r\n        this.timerResize && clearTimeout(this.timerResize);\r\n\r\n        this.timerResize = setTimeout(() => {\r\n            this.timerResize = null;\r\n            this.componentDidUpdate();\r\n        });\r\n    };\r\n\r\n    /*onChange = (id, state) => {\r\n        if (id === this.props.obj._id &&\r\n            state &&\r\n            this.rangeValues &&\r\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\r\n\r\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\r\n            this.rangeValues.push({val: state.val, ts: state.ts});\r\n\r\n            // update only if end is near to now\r\n            if (state.ts >= this.chart.min && state.ts <= this.chart.max + 300000) {\r\n                this.updateChart();\r\n            }\r\n        }\r\n    };*/\r\n\r\n    convertData(i) {\r\n        const values = this.props.data[i];\r\n        if (!values.length) {\r\n            return [];\r\n        }\r\n\r\n        if (!this.chart.min) {\r\n            this.chart.min = values[0].ts;\r\n            this.chart.max = values[values.length - 1].ts;\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    getSeries() {\r\n        return this.props.config.l.map((oneLine, i) => {\r\n            const cfg = {\r\n                xAxisIndex: 0,\r\n                type: 'line',\r\n                showSymbol: false,\r\n                hoverAnimation: true,\r\n                animation: false,\r\n                data: this.convertData(i),\r\n                lineStyle:{\r\n                    color: oneLine.color,\r\n                }\r\n            };\r\n            return cfg;\r\n        });\r\n    }\r\n\r\n    getOption() {\r\n\r\n        console.log(JSON.stringify(this.props.config, null, 2));\r\n\r\n        let titlePos = {};\r\n        if (this.props.config.titlePos) {\r\n            this.props.config.titlePos.split(';').forEach(a => {\r\n                const parts = a.split(':');\r\n                titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\r\n            });\r\n        }\r\n\r\n        const xAxisHeight = 20;\r\n\r\n        return {\r\n            backgroundColor: 'transparent',\r\n            animation: !this.props.noAnimation,\r\n            title: {\r\n                text: this.props.config.title || '',\r\n                textStyle: {\r\n                    fontSize: this.props.config.titleSize ? parseInt(this.props.config.titleSize, 10) : undefined,\r\n                    color: this.props.config.titleColor || undefined\r\n                },\r\n                padding: [\r\n                    8,  // up\r\n                    0,  // right\r\n                    0,  // down\r\n                    90, // left\r\n                ],\r\n                textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\r\n                textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\r\n                top:               titlePos.top  === 35 ? 0 : (titlePos.top === 50 ? '50%' : undefined),\r\n                left:              titlePos.left === 50 ? '50%' : (titlePos.left === 65 ? 0 : undefined),\r\n                bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + xAxisHeight : titlePos.bottom) : undefined,\r\n                right:             titlePos.right === 5 ? 25 : undefined,\r\n            },\r\n            grid: {\r\n                left:   GRID_PADDING_LEFT,\r\n                top:    8,\r\n                right:  GRID_PADDING_RIGHT,\r\n                bottom: 40,\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                formatter: params => {\r\n                    const date = new Date(params[0].value[0]);\r\n                    const values = params.map(param => param.value[1] === null ? 'null' : param.value[1] + this.props.config.l[param.seriesIndex].unit);\r\n                    return `${date.toLocaleString()}.${padding3(date.getMilliseconds())}: ${values.join(', ')}`;\r\n                },\r\n                axisPointer: {\r\n                    animation: true\r\n                }\r\n            },\r\n            xAxis:\r\n            {\r\n                type: 'time',\r\n                /*splitLine: {\r\n                    show: true\r\n                },*/\r\n                splitNumber: Math.round((this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT) / 50),\r\n                min: this.chart.min,\r\n                max: this.chart.max,\r\n                axisTick: {\r\n                    alignWithLabel: true,\r\n                },\r\n                axisLabel: {\r\n                    formatter: (value, index) => {\r\n                        const date = new Date(value);\r\n                        if (this.chart.withSeconds) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds());\r\n                        } else if (this.chart.withTime) {\r\n                            return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + '\\n' + padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1);\r\n                        } else {\r\n                            return padding2(date.getDate()) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n                    boundaryGap: [0, '100%'],\r\n                    /*splitLine: {\r\n                        show: true,//!!this.props.config.gridLinesX\r\n                    },\r\n                    splitNumber: Math.round(this.state.chartHeight / 100),*/\r\n                    axisLabel: {\r\n                        formatter: '{value}' + this.props.config.l[0].unit,\r\n                    },\r\n                    axisTick: {\r\n                        alignWithLabel: true,\r\n                    }\r\n                }\r\n            ],\r\n            toolbox: this.props.config.export ? {\r\n                left: 'right',\r\n                feature: {\r\n                    /*dataZoom: {\r\n                        yAxisIndex: 'none',\r\n                        title: this.props.t('Zoom'),\r\n                    },\r\n                    restore: {\r\n                        title: this.props.t('Restore')\r\n                    },*/\r\n                    saveAsImage: {\r\n                        title: this.props.t('Save as image'),\r\n                        show: true,\r\n                    }\r\n                }\r\n            } : undefined,\r\n            /*dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    startValue: this.start,\r\n                    endValue: this.end,\r\n                    y: this.state.chartHeight - 50,\r\n                    dataBackground: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FFFFFFE0'\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                },\r\n            ],*/\r\n            series: this.getSeries()\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.data !== state.data) {\r\n            return {data: props.data};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    updateChart(start, end, withReadData, cb) {\r\n        if (start) {\r\n            this.start = start;\r\n        }\r\n        if (end) {\r\n            this.end = end;\r\n        }\r\n        start = start || this.start;\r\n        end   = end   || this.end;\r\n\r\n        this.readTimeout && clearTimeout(this.readTimeout);\r\n\r\n        this.readTimeout = setTimeout(() => {\r\n            this.readTimeout = null;\r\n\r\n            const diff = this.chart.max - this.chart.min;\r\n            if (diff !== this.chart.diff) {\r\n                this.chart.diff        = diff;\r\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n            }\r\n\r\n            if (withReadData) {\r\n                this.readHistory(start, end)\r\n                    .then(values => {\r\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                            series: [{data: this.convertData(values)}],\r\n                            xAxis: {\r\n                                min: this.chart.min,\r\n                                max: this.chart.max,\r\n                            }\r\n                        });\r\n                        cb && cb();\r\n                    });\r\n            } else {\r\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\r\n                    series: [{data: this.convertData()}],\r\n                    xAxis: {\r\n                        min: this.chart.min,\r\n                        max: this.chart.max,\r\n                    }\r\n                });\r\n                cb && cb();\r\n            }\r\n        }, 400);\r\n    }\r\n\r\n    setNewRange(updateChart) {\r\n        /*if (this.rangeRef.current &&\r\n            this.rangeRef.current.childNodes[1] &&\r\n            this.rangeRef.current.childNodes[1].value) {\r\n            this.rangeRef.current.childNodes[0].innerHTML = '';\r\n            this.rangeRef.current.childNodes[1].value = '';\r\n        }*/\r\n        this.chart.diff        = this.chart.max - this.chart.min;\r\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\r\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\r\n\r\n        if (this.state.relativeRange !== 'absolute') {\r\n            this.setState({ relativeRange: 'absolute' });\r\n        } else {\r\n            this.echartsReact.getEchartsInstance().setOption({\r\n                xAxis: {\r\n                    min: this.chart.min,\r\n                    max: this.chart.max,\r\n                }\r\n            });\r\n\r\n            updateChart && this.updateChart(this.chart.min, this.chart.max, true);\r\n        }\r\n    }\r\n\r\n    setRelativeInterval(mins, dontSave, cb) {\r\n        if (!dontSave) {\r\n            window.localStorage.setItem('App.relativeRange', mins);\r\n            this.setState({ relativeRange: mins });\r\n        }\r\n\r\n        const now = new Date();\r\n        if (now.getMilliseconds()) {\r\n            now.setMilliseconds(1000);\r\n        }\r\n        if (now.getSeconds()) {\r\n            now.setSeconds(60);\r\n        }\r\n\r\n        this.chart.max = now.getTime();\r\n\r\n        if (mins === 'day') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'week') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            // find week start\r\n            if (now.getDay()) { // if not sunday\r\n                now.setDate(now.getDate() - now.getDay() - 1);\r\n            } else {\r\n                now.setDate(now.getDate() - 6);\r\n            }\r\n\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === '2weeks') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            // find week start\r\n            if (now.getDay()) { // if not sunday\r\n                now.setDate(now.getDate() - now.getDay() - 8);\r\n            } else {\r\n                now.setDate(now.getDate() - 13);\r\n            }\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'month') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setDate(1);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === 'year') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setDate(1);\r\n            now.setMonth(0);\r\n            this.chart.min = now.getTime();\r\n        } else if (mins === '12months') {\r\n            now.setHours(0);\r\n            now.setMinutes(0);\r\n            now.setFullYear(now.getFullYear() - 1);\r\n            this.chart.min = now.getTime();\r\n        } else {\r\n            mins = parseInt(mins, 10);\r\n            this.chart.min = this.chart.max - mins * 60000;\r\n        }\r\n        this.updateChart(this.chart.min, this.chart.max, true, cb);\r\n    }\r\n\r\n    installEventHandlers() {\r\n        const zr = this.echartsReact.getEchartsInstance().getZr();\r\n\r\n        if (false && !zr._iobInstalled) {\r\n            zr._iobInstalled = true;\r\n\r\n            zr.on('mousedown', e => {\r\n                console.log('mouse down');\r\n                this.mouseDown = true;\r\n                this.chart.lastX = e.offsetX;\r\n            });\r\n\r\n            zr.on('mouseup', () => {\r\n                console.log('mouse up');\r\n                this.mouseDown = false;\r\n                this.setNewRange(true);\r\n            });\r\n\r\n            zr.on('mousewheel', e => {\r\n                let diff = this.chart.max - this.chart.min;\r\n                const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n                const x = e.offsetX - GRID_PADDING_LEFT;\r\n                const pos = x / width;\r\n\r\n                const oldDiff = diff;\r\n                const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\r\n                diff = diff * amount;\r\n                const move = oldDiff - diff;\r\n                this.chart.max += move * (1 - pos);\r\n                this.chart.min -= move * pos;\r\n\r\n                this.setNewRange();\r\n            });\r\n\r\n            zr.on('mousemove', e => {\r\n                if (this.mouseDown) {\r\n                    const moved = this.chart.lastX - (e.offsetX - GRID_PADDING_LEFT);\r\n                    this.chart.lastX = e.offsetX - GRID_PADDING_LEFT;\r\n                    const diff = this.chart.max - this.chart.min;\r\n                    const width = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                    const shift = Math.round(moved * diff / width);\r\n                    this.chart.min += shift;\r\n                    this.chart.max += shift;\r\n                    this.setNewRange();\r\n                }\r\n            });\r\n\r\n            zr.on('touchstart', e => {\r\n                e.preventDefault();\r\n                this.mouseDown = true;\r\n                const touches = e.touches || e.originalEvent.touches;\r\n                if (touches) {\r\n                    this.chart.lastX = touches[touches.length - 1].pageX;\r\n                    if (touches.length > 1) {\r\n                        this.chart.lastWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                    } else {\r\n                        this.chart.lastWidth = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n            zr.on('touchend', e => {\r\n                e.preventDefault();\r\n                this.mouseDown = false;\r\n                this.setNewRange(true);\r\n            });\r\n\r\n            zr.on('touchmove', e => {\r\n                e.preventDefault();\r\n                const touches = e.touches || e.originalEvent.touches;\r\n                if (!touches) {\r\n                    return;\r\n                }\r\n                const pageX = touches[touches.length - 1].pageX - GRID_PADDING_LEFT;\r\n                if (this.mouseDown) {\r\n                    if (touches.length > 1) {\r\n                        // zoom\r\n                        const fingerWidth = Math.abs(touches[0].pageX - touches[1].pageX);\r\n                        if (this.chart.lastWidth !== null && fingerWidth !== this.chart.lastWidth) {\r\n                            let diff = this.chart.max - this.chart.min;\r\n                            const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                            const amount     = fingerWidth > this.chart.lastWidth ? 1.1 : 0.9;\r\n                            const positionX  = touches[0].pageX > touches[1].pageX ?\r\n                                touches[1].pageX - GRID_PADDING_LEFT + fingerWidth / 2 :\r\n                                touches[0].pageX - GRID_PADDING_LEFT + fingerWidth / 2;\r\n\r\n                            const pos = positionX / chartWidth;\r\n\r\n                            const oldDiff = diff;\r\n                            diff = diff * amount;\r\n                            const move = oldDiff - diff;\r\n\r\n                            this.chart.max += move * (1 - pos);\r\n                            this.chart.min -= move * pos;\r\n\r\n                            this.setNewRange();\r\n                        }\r\n                        this.chart.lastWidth = fingerWidth;\r\n                    } else {\r\n                        // swipe\r\n                        const moved = this.chart.lastX - pageX;\r\n                        const diff  = this.chart.max - this.chart.min;\r\n                        const chartWidth = this.state.chartWidth - GRID_PADDING_RIGHT - GRID_PADDING_LEFT;\r\n\r\n                        const shift = Math.round(moved * diff / chartWidth);\r\n                        this.chart.min += shift;\r\n                        this.chart.max += shift;\r\n\r\n                        this.setNewRange();\r\n                    }\r\n                }\r\n                this.chart.lastX = pageX;\r\n            });\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        if (this.state.data) {\r\n            const option = this.getOption();\r\n\r\n            //console.log(JSON.stringify(option, null, 2));\r\n\r\n            return <ReactEchartsCore\r\n                ref={e => this.echartsReact = e}\r\n                echarts={ echarts }\r\n                option={ option }\r\n                notMerge={ true }\r\n                lazyUpdate={ true }\r\n                theme={ this.props.themeType === 'dark' ? 'dark' : '' }\r\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\r\n                opts={{ renderer: 'svg' }}\r\n                onEvents={ {\r\n                    /*datazoom: e => {\r\n                        const {startValue, endValue} = e.batch[0];\r\n                        this.updateChart(startValue, endValue, true);\r\n                    },*/\r\n                    rendered: e => {\r\n                        this.installEventHandlers();\r\n                    }\r\n                }}\r\n            />;\r\n        } else {\r\n            return <LinearProgress/>;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.divRef.current) {\r\n            const width  = this.divRef.current.offsetWidth;\r\n            const height = this.divRef.current.offsetHeight;\r\n            if (this.state.chartHeight !== height) {// || this.state.chartHeight !== height) {\r\n                setTimeout(() => this.setState({ chartHeight: height, chartWidth: width }), 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.divRef.current) {\r\n            setTimeout(() => this.forceUpdate(), 10);\r\n        }\r\n\r\n        return <div ref={ this.divRef } className={ this.props.classes.chart }>\r\n            { this.renderChart() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nChartView.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    socket: PropTypes.object,\r\n    config: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    data: PropTypes.array,\r\n    noAnimation: PropTypes.bool,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Connection, {PROGRESS} from '@iobroker/adapter-react/Connection';\r\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\n\r\nimport ChartModel from './Components/ChartModel';\r\nimport ChartView from './Components/ChartView';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            connected:  false,\r\n            reading:    true,\r\n            seriesData: null,\r\n            noLoader:   Utils.parseQuery(window.location.search).noLoader || false,\r\n            theme:      themeInstance,\r\n            themeName:  this.getThemeName(themeInstance),\r\n            themeType:  this.getThemeType(themeInstance),\r\n        };\r\n        this.divRef = React.createRef();\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('@iobroker/adapter-react/i18n/en'),\r\n            'de': require('@iobroker/adapter-react/i18n/de'),\r\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\r\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\r\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\r\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\r\n            'it': require('@iobroker/adapter-react/i18n/it'),\r\n            'es': require('@iobroker/adapter-react/i18n/es'),\r\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\r\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\r\n        };\r\n\r\n        // merge together\r\n        /*if (settings && settings.translations) {\r\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\r\n        } else if (props.translations) {\r\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\r\n        }*/\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        try {\r\n            this.isIFrame = window.self !== window.top;\r\n        } catch (e) {\r\n            this.isIFrame = true;\r\n        }\r\n        \r\n        this.socket = new Connection({\r\n            name: window.adapterName,\r\n            doNotLoadAllObjects: true,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                this.socket.getSystemConfig()\r\n                    .then(systemConfig => {\r\n                        this.systemLang   = systemConfig?.common?.language || 'en';\r\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\r\n\r\n                        this.chartData = new ChartModel(this.socket);\r\n                        this.chartData.onError(err => this.showError(I18n.t(err)));\r\n                        this.chartData.onReading(reading => this.setState({reading}));\r\n                        this.chartData.onUpdate(seriesData => this.setState({seriesData}));\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartData && this.chartData.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.connected || !this.state.seriesData) {\r\n            if (this.state.noLoader) {\r\n                return null;\r\n            } else {\r\n                return <MuiThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType}/>\r\n                </MuiThemeProvider>;\r\n            }\r\n        }\r\n\r\n        if (this.state.seriesData) {\r\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\r\n        }\r\n\r\n        const config = this.chartData.getConfig();\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div ref={this.divRef}\r\n                 className={this.props.classes.root}\r\n                 style={{width: config.width, height: config.height, background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                <ChartView\r\n                    socket={this.socket}\r\n                    t={I18n.t}\r\n                    noAnimation={this.state.noLoader}\r\n                    data={this.state.seriesData}\r\n                    config={this.chartData.getConfig()}\r\n                    lang={I18n.getLanguage()}\r\n                    themeType={this.state.themeType}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(withTheme(App)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'echarts-index';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://709f116e1de34029921e4f2696d6740f@sentry.iobroker.net/88',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}