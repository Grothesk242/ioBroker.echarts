{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n *\n *      ioBroker echarts Adapter\n *\n *      (c) 2020-2024 bluefox <dogafox@gmail.com>\n *\n *      MIT License\n *\n */\nimport { Adapter, type AdapterOptions } from '@iobroker/adapter-core';\nimport { readFileSync, writeFileSync } from 'node:fs';\nimport ChartModel, { type BarAndLineSeries } from './lib/ChartModel';\nimport ChartOption from './lib/ChartOption';\nimport * as moment from 'moment';\nimport 'moment/locale/en-gb';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/pl';\nimport 'moment/locale/pt';\nimport 'moment/locale/it';\nimport 'moment/locale/nl';\nimport 'moment/locale/ru';\nimport 'moment/locale/zh-cn';\nimport 'moment/locale/de';\nimport type { EchartsOptions, Connection, ChartConfigMore } from './types';\nimport { getSocket } from './lib/socketSimulator';\nimport { type EChartsType, init as echartsInit } from 'echarts';\nimport type { Canvas, JpegConfig, PdfConfig, PngConfig } from 'canvas';\nimport { type JSDOM } from 'jsdom';\n\n// let echartsInit:\n//     | ((canvas: HTMLElement | null, theme?: string | object | null, opts?: EChartsInitOpts) => EChartsType)\n//     | undefined;\nlet createCanvas: ((width: number, height: number, type?: 'pdf' | 'svg') => Canvas) | undefined;\nlet JsDomClass: typeof JSDOM | undefined;\n\nfunction calcTextWidth(text: string, fontSize?: number | string): number {\n    // try to simulate\n    return Math.ceil((text.length * (parseFloat(fontSize as string) || 12)) / 0.75);\n}\n\nclass EchartsAdapter extends Adapter {\n    public __lastMessageTime = 0;\n    public __lastMessageText = '';\n    private cachedSnapshots: Record<string, { ts: number; data: string | null; error: string }> = {};\n    private socketSimulator: Connection = null;\n\n    public constructor(options: Partial<AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'echarts',\n        });\n        this.on('ready', () => this.main());\n        this.on('message', obj => obj?.command === 'send' && this.processMessage(obj));\n    }\n\n    // Todo: queue requests as  global.window is \"global\"\n    async renderImage(options: EchartsOptions): Promise<string> {\n        if (!createCanvas) {\n            try {\n                createCanvas = (await import('canvas')).createCanvas;\n                JsDomClass = (await import('jsdom')).JSDOM;\n                this.socketSimulator = getSocket(this);\n            } catch (e) {\n                this.log.error(`Cannot find required modules: ${e}`);\n                throw new Error(\n                    'Cannot find required modules: looks like it is not possible to generate charts on your Hardware/OS',\n                );\n            }\n        }\n\n        return new Promise((resolve, reject) => {\n            options.width = parseFloat(options.width as unknown as string) || 1024;\n            options.height = parseFloat(options.height as unknown as string) || 300;\n\n            const chartData = new ChartModel(this.socketSimulator, options.preset, { serverSide: true });\n\n            chartData.onError(err => this.log.error(err.toString()));\n\n            chartData.onUpdate(\n                (\n                    seriesData: BarAndLineSeries[],\n                    _actualValues?: (number | null | boolean | string)[],\n                    barCategories?: number[],\n                ) => {\n                    const systemConfig = chartData.getSystemConfig();\n                    moment.locale(systemConfig?.language || 'en');\n                    const theme = options.theme || options.themeType || 'light';\n\n                    const chartOption = new ChartOption(moment, theme, calcTextWidth);\n                    const option = chartOption.getOption(\n                        seriesData,\n                        chartData.getConfig() as ChartConfigMore,\n                        null,\n                        barCategories,\n                    );\n                    const { window } = new JsDomClass();\n\n                    // @ts-expect-error must be so\n                    global.window = window;\n                    global.navigator = window.navigator;\n                    global.document = window.document;\n\n                    let chart: EChartsType;\n                    let canvas: Canvas | undefined;\n                    let root: HTMLDivElement | undefined;\n                    if (options.renderer && options.renderer !== 'svg') {\n                        canvas = createCanvas(options.width, options.height);\n                        canvas.width = options.width;\n                        canvas.height = options.height;\n                        chart = echartsInit(canvas as unknown as HTMLElement);\n                        if (options.background) {\n                            option.backgroundColor = options.background;\n                        }\n                    } else {\n                        root = global.document.createElement('div');\n                        root.style.cssText = `width: ${options.width}px; height: ${options.height}px;${\n                            options.background\n                                ? ` background: ${options.background}`\n                                : theme === 'dark'\n                                  ? ' background: #000;'\n                                  : ''\n                        }`;\n                        chart = echartsInit(root, undefined, { renderer: 'svg' });\n                    }\n\n                    chart.setOption(option);\n\n                    let data: string;\n                    switch (options.renderer || '') {\n                        case 'png': {\n                            data = `data:image/png;base64,${canvas\n                                .toBuffer('image/png', {\n                                    compressionLevel: options.compressionLevel || 3,\n                                    filters: options.filters || canvas.PNG_FILTER_NONE,\n                                } as PngConfig)\n                                .toString('base64')}`;\n                            break;\n                        }\n                        case 'jpg': {\n                            data = `data:image/jpeg;base64,${canvas\n                                .toBuffer('image/jpeg', {\n                                    quality: options.quality || 0.8,\n                                } as JpegConfig)\n                                .toString('base64')}`;\n                            break;\n                        }\n                        case 'pdf': {\n                            data = `data:application/pdf;base64,${canvas\n                                .toBuffer('application/pdf', {\n                                    title: options.title || 'ioBroker Chart',\n                                    creationDate: new Date(),\n                                } as PdfConfig)\n                                .toString('base64')}`;\n                            break;\n                        }\n                        case '':\n                        case 'svg': {\n                            const svg = root.querySelector('svg').outerHTML;\n                            data = `data:image/svg+xml;base64,${Buffer.from(svg).toString('base64')}`;\n                            break;\n                        }\n                        default:\n                            reject(new Error('Unsupported format'));\n                            return;\n                    }\n\n                    chart?.dispose();\n\n                    if (options.fileOnDisk) {\n                        writeFileSync(options.fileOnDisk, Buffer.from(data.split(',')[1], 'base64'));\n                    }\n                    if (options.fileName) {\n                        this.writeFile(\n                            this.namespace,\n                            options.fileName,\n                            Buffer.from(data.split(',')[1], 'base64'),\n                            err => (err ? reject(err) : resolve(data)),\n                        );\n                    } else {\n                        resolve(data);\n                    }\n                },\n            );\n        });\n    }\n\n    async fixSystemObject(): Promise<boolean> {\n        const obj = await this.getForeignObjectAsync('_design/system');\n        if (obj?.views && !obj.views.chart) {\n            obj.views.chart = {\n                map: `function(doc) { if (doc.type === 'chart') emit(doc._id, doc) }`,\n            };\n            await this.setForeignObjectAsync(obj._id, obj);\n            return true;\n        }\n        return false;\n    }\n\n    processMessage(obj: ioBroker.Message): void {\n        if (!obj?.message) {\n            return;\n        }\n\n        // filter out the double messages\n        const json = JSON.stringify(obj.message);\n        if (this.__lastMessageTime && this.__lastMessageText === json && Date.now() - this.__lastMessageTime < 300) {\n            return this.log.debug(\n                `Filter out double message [first was for ${Date.now() - this.__lastMessageTime}ms]: ${json}`,\n            );\n        }\n\n        this.__lastMessageTime = Date.now();\n        this.__lastMessageText = json;\n\n        const message: EchartsOptions = obj.message;\n\n        if (!message?.preset) {\n            this.log.error(\n                'Please define settings: {\"preset\": \"echarts.0.XXX\", width: 500, height: 200, renderer: \"png/svg\"}',\n            );\n            if (obj.callback) {\n                this.sendTo(\n                    obj.from,\n                    'send',\n                    {\n                        error: 'Please define settings: {\"preset\": \"echarts.0.XXX\", width: 500, height: 200, renderer: \"svg/png\"}',\n                    },\n                    obj.callback,\n                );\n            }\n        } else {\n            // delete cached snapshots\n            Object.keys(this.cachedSnapshots).forEach(preset => {\n                if (this.cachedSnapshots[preset].ts < Date.now()) {\n                    delete this.cachedSnapshots[preset];\n                }\n            });\n\n            if (\n                message.cache &&\n                !message.forceRefresh &&\n                this.cachedSnapshots[message.preset] &&\n                this.cachedSnapshots[message.preset].ts >= Date.now()\n            ) {\n                if (obj.callback) {\n                    this.sendTo(\n                        obj.from,\n                        'send',\n                        {\n                            data: this.cachedSnapshots[message.preset].data,\n                            error: this.cachedSnapshots[message.preset].error,\n                        },\n                        obj.callback,\n                    );\n                }\n            } else {\n                this.renderImage(message)\n                    .then(data => {\n                        if (message.cache) {\n                            if (!this.cachedSnapshots[message.preset]) {\n                                this.cachedSnapshots[message.preset] = {\n                                    ts: Date.now() + message.cache * 1000,\n                                    data,\n                                    error: null,\n                                };\n                            } else {\n                                this.cachedSnapshots[message.preset].ts = Date.now() + message.cache * 1000;\n                                this.cachedSnapshots[message.preset].data = data;\n                                this.cachedSnapshots[message.preset].error = null;\n                            }\n                        }\n                        if (obj.callback) {\n                            this.sendTo(obj.from, 'send', { data }, obj.callback);\n                        }\n                    })\n                    .catch(error => {\n                        if (message.cache) {\n                            if (!this.cachedSnapshots[message.preset]) {\n                                this.cachedSnapshots[message.preset] = {\n                                    ts: Date.now() + message.cache * 1000,\n                                    data: null,\n                                    error,\n                                };\n                            } else {\n                                this.cachedSnapshots[message.preset].ts = Date.now() + message.cache * 1000;\n                                this.cachedSnapshots[message.preset].data = null;\n                                this.cachedSnapshots[message.preset].error = error;\n                            }\n                        }\n                        if (obj.callback) {\n                            this.sendTo(obj.from, 'send', { error }, obj.callback);\n                        }\n                    });\n            }\n        }\n    }\n\n    async main(): Promise<void> {\n        // fix _design/chart\n        let designObject: ioBroker.DesignObject | null | undefined = await this.getForeignObjectAsync('_design/chart');\n        const _obj: any = JSON.parse(readFileSync(`${__dirname}/../io-package.json`).toString('utf8')).objects.find(\n            (ob: ioBroker.Object) => ob._id === '_design/chart',\n        );\n\n        if (!designObject || (_obj && JSON.stringify(designObject.views) !== JSON.stringify(_obj.views))) {\n            designObject = { language: 'javascript' } as ioBroker.DesignObject;\n            designObject.views = _obj?.views\n                ? _obj.views\n                : { chart: { map: `function(doc) { if (doc.type === 'chart') emit(doc._id, doc); }` } };\n            await this.setForeignObjectAsync('_design/chart', designObject);\n        }\n\n        // fix _design/system\n        const systemDesign = await this.getForeignObjectAsync('_design/system');\n        if (systemDesign?.views && !systemDesign.views.chart) {\n            systemDesign.views.chart = {\n                map: \"function(doc) { if (doc.type === 'chart') emit(doc._id, doc); }\",\n            };\n            await this.setForeignObjectAsync('_design/system', systemDesign);\n        }\n\n        // enabled mode daemon and message box\n        const adapterInstance = await this.getForeignObjectAsync(`system.adapter.${this.namespace}`);\n        if (\n            adapterInstance?.common &&\n            (adapterInstance.common.mode !== 'daemon' || !adapterInstance.common.messagebox)\n        ) {\n            adapterInstance.common.mode = 'daemon';\n            adapterInstance.common.messagebox = true;\n            await this.setForeignObjectAsync(adapterInstance._id, adapterInstance);\n        }\n\n        if (await this.fixSystemObject()) {\n            this.log.debug('Added chart view to system object');\n        }\n\n        /*renderImage({preset: 'Test', theme: 'dark', renderer: 'png', background: '#000000'})\n            .then(data => {\n                const base64 = Buffer.from(data.split(',')[1], 'base64');\n                require('fs').writeFileSync('image.png', base64);\n            });*/\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<AdapterOptions> | undefined) => new EchartsAdapter(options);\n} else {\n    // otherwise start the instance directly\n    (() => new EchartsAdapter())();\n}\n"]}