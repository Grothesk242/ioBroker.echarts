{"version":3,"file":"static/js/src_Echarts_jsx.32ab6b7a.chunk.js","mappings":"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","sources":["Echarts.jsx","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n} from '@mui/material';\r\n\r\nimport {\r\n    Timeline as ChartIcon,\r\n} from '@mui/icons-material';\r\n\r\nimport {\r\n    I18n,\r\n    IconClosed as FolderIcon, Utils,\r\n} from '@iobroker/adapter-react-v5';\r\n\r\nconst ChartSelector = props => {\r\n    const [charts, setCharts] = useState(null);\r\n    useEffect(() => {\r\n        props.context.socket.getObjectViewSystem('chart', 'echarts.', 'echarts.\\u9999')\r\n            .then(res => {\r\n                const presets = [];\r\n                res && Object.values(res)\r\n                    .forEach(preset =>\r\n                        preset._id && !preset._id.toString().endsWith('.') && presets.push(preset._id));\r\n\r\n                const items = [];\r\n                // Build a tree\r\n                presets.forEach(id => {\r\n                    const parts = id.split('.');\r\n                    if (parts.length >= 3) {\r\n                        parts.shift(); // echarts\r\n                        parts.shift(); // 0\r\n                        const path = [];\r\n                        for (let p = 0; p < parts.length - 1; p++) {\r\n                            path.push(parts[p]);\r\n                            const preset = path.join('.');\r\n                            if (!items.find(pr => pr.path === preset)) {\r\n                                items.push({\r\n                                    path: preset,\r\n                                    name: parts[p],\r\n                                    level: path.length,\r\n                                });\r\n                            }\r\n                        }\r\n                        path.push(parts[parts.length - 1]);\r\n                        items.push({\r\n                            path: parts.join('.'),\r\n                            name: parts[parts.length - 1],\r\n                            level: path.length,\r\n                            id,\r\n                        });\r\n                    }\r\n                });\r\n                items.sort((a, b) => a.path.localeCompare(b.path));\r\n\r\n                setCharts(items);\r\n            });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!charts) {\r\n        return null;\r\n    }\r\n\r\n    return <Select\r\n        style={{ width: '100%' }}\r\n        value={props.data[props.field.name] || ''}\r\n        onChange={e => {\r\n            const data = { ...props.data, [props.field.name]: e.target.value };\r\n            props.setData(data);\r\n        }}\r\n        renderValue={value => value && value.substring('echarts.0.'.length)}\r\n        variant=\"standard\"\r\n    >\r\n        <MenuItem\r\n            key=\"___none\"\r\n            value=\"\"\r\n        >\r\n            {I18n.t('echarts_none')}\r\n        </MenuItem>\r\n        {charts.map(chart =>\r\n            <MenuItem\r\n                key={chart.name}\r\n                value={chart.id || chart.name}\r\n                disabled={!chart.id}\r\n            >\r\n                <div style={{ paddingLeft: chart.level * 20, display: 'flex' }}>\r\n                    <span style={{ paddingRight: 4 }}>\r\n                        {!chart.id ? <FolderIcon /> : <ChartIcon />}\r\n                    </span>\r\n                    {chart.name}\r\n                </div>\r\n            </MenuItem>)}\r\n    </Select>;\r\n};\r\n\r\nclass Echarts extends window.visRxWidget {\r\n    constructor(props) {\r\n        super(props);\r\n        this.refIframe = React.createRef();\r\n        this.ready = false;\r\n        this.state.presetData = null;\r\n    }\r\n\r\n    static getWidgetInfo() {\r\n        return {\r\n            id: 'tplEchartsChart',\r\n\r\n            visSet: 'echarts',\r\n            visSetLabel: 'set_label', // Label of widget set\r\n            visSetColor: '#aa314d', // color of a widget set\r\n\r\n            visWidgetLabel: 'E-Charts',  // Label of widget\r\n            visName: 'E-Charts',\r\n            visAttrs: [{\r\n                name: 'common',\r\n                fields: [\r\n                    {\r\n                        name: 'noCard',\r\n                        label: 'without_card',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        name: 'widgetTitle',\r\n                        label: 'name',\r\n                        hidden: '!!data.noCard',\r\n                    },\r\n                    {\r\n                        label: 'noChartBackground',\r\n                        name: 'noChartBackground',\r\n                        type: 'checkbox',\r\n                        default: true,\r\n                        hidden: data => !data.noCard,\r\n                    },\r\n                    {\r\n                        label: 'echart_oid',\r\n                        name: 'echart_oid',\r\n                        type: 'custom',\r\n                        hidden: data => !!data.history_instance || !!data.history_oid,\r\n                        component: (field, data, setData, props) => <ChartSelector\r\n                            field={field}\r\n                            data={data}\r\n                            setData={setData}\r\n                            context={props.context}\r\n                            selectedWidgets={props.selectedWidgets}\r\n                            selectedView={props.selectedView}\r\n                        />,\r\n                    },\r\n                    {\r\n                        label: 'history_instance',\r\n                        name: 'history_instance',\r\n                        type: 'instance',\r\n                        hidden: data => !!data.echart_oid,\r\n                        adapter: '_dataSources',\r\n                    },\r\n                    {\r\n                        label: 'history_oid',\r\n                        name: 'history_oid',\r\n                        type: 'id',\r\n                        hidden: data => !!data.echart_oid || !data.history_instance,\r\n                        filter: data => ({ common: { custom: data.history_instance } }),\r\n                    },\r\n                    {\r\n                        label: 'chartType',\r\n                        name: 'chartType',\r\n                        default: 'auto',\r\n                        hidden: data => !data.history_oid,\r\n                        type: 'select',\r\n                        options: [\r\n                            { value: 'auto', label: 'Auto' },\r\n                            { value: 'line', label: 'Line' },\r\n                            { value: 'bar', label: 'Bar' },\r\n                            { value: 'scatterplot', label: 'Scatter plot' },\r\n                            { value: 'steps', label: 'Steps' },\r\n                            { value: 'stepsStart', label: 'Steps on start' },\r\n                            { value: 'spline', label: 'Spline' },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: 'aggregate',\r\n                        name: 'aggregate',\r\n                        default: 'minmax',\r\n                        hidden: data => !data.history_oid || data.chartType === 'auto' || !data.chartType,\r\n                        type: 'select',\r\n                        noTranslation: true,\r\n                        options: [\r\n                            'minmax',\r\n                            'average',\r\n                            'min',\r\n                            'max',\r\n                            'total',\r\n                            'raw',\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: 'live',\r\n                        name: 'live',\r\n                        default: '30',\r\n                        type: 'select',\r\n                        hidden: data => !data.history_oid,\r\n                        options: [\r\n                            { value: '', label: 'none' },\r\n                            { value: '5', label: '5 seconds' },\r\n                            { value: '10', label: '10 seconds' },\r\n                            { value: '15', label: '15 seconds' },\r\n                            { value: '20', label: '20 seconds' },\r\n                            { value: '30', label: '30 seconds' },\r\n                            { value: '60', label: '1 minute' },\r\n                            { value: '120', label: '2 minutes' },\r\n                            { value: '300', label: '5 minutes' },\r\n                            { value: '600', label: '10 minutes' },\r\n                            { value: '900', label: '15 minutes' },\r\n                            { value: '1200', label: '20 minutes' },\r\n                            { value: '1800', label: '30 minutes' },\r\n                            { value: '3600', label: '1 hour' },\r\n                            { value: '7200', label: '2 hours' },\r\n                            { value: '10800', label: '3 hours' },\r\n                            { value: '21600', label: '6 hours' },\r\n                            { value: '43200', label: '12 hours' },\r\n                            { value: '86400', label: '1 day' },\r\n                        ],\r\n                    },\r\n                    // {\r\n                    //     label: 'timeType',\r\n                    //     name: 'timeType',\r\n                    //     default: 'relative',\r\n                    //     hidden: data => !data.history_oid,\r\n                    //     type: 'select',\r\n                    //     options: [\r\n                    //         { label: 'relative', value: 'relative' },\r\n                    //         { label: 'static', value: 'static' },\r\n                    //     ],\r\n                    // },\r\n                    {\r\n                        label: 'aggregateType',\r\n                        name: 'aggregateType',\r\n                        default: 'step',\r\n                        hidden: data => !data.history_oid,\r\n                        type: 'select',\r\n                        options: [\r\n                            { label: 'counts', value: 'count' },\r\n                            { label: 'seconds', value: 'step' },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: 'aggregateSpan',\r\n                        name: 'aggregateSpan',\r\n                        default: 300,\r\n                        type: 'number',\r\n                        hidden: data => !data.history_oid,\r\n                    },\r\n                    {\r\n                        label: 'xticks',\r\n                        name: 'xticks',\r\n                        default: '',\r\n                        type: 'slider',\r\n                        min: 0,\r\n                        max: 50,\r\n                        hidden: data => !data.history_oid,\r\n                    },\r\n                    {\r\n                        label: 'yticks',\r\n                        name: 'yticks',\r\n                        default: '',\r\n                        type: 'slider',\r\n                        min: 0,\r\n                        max: 50,\r\n                        hidden: data => !data.history_oid,\r\n                    },\r\n                    {\r\n                        label: 'range',\r\n                        name: 'range',\r\n                        default: '1440',\r\n                        hidden: data => !data.history_oid,\r\n                        type: 'select',\r\n                        options: [\r\n                            { value: '10', label: '10 minutes' },\r\n                            { value: '30', label: '30 minutes' },\r\n                            { value: '60', label: '1 hour' },\r\n                            { value: '120', label: '2 hours' },\r\n                            { value: '180', label: '3 hours' },\r\n                            { value: '360', label: '6 hours' },\r\n                            { value: '720', label: '12 hours' },\r\n                            { value: '1440', label: '1 day' },\r\n                            { value: '2880', label: '2 days' },\r\n                            { value: '4320', label: '3 days' },\r\n                            { value: '10080', label: '7 days' },\r\n                            { value: '20160', label: '14 days' },\r\n                            { value: '1m', label:  '1 month' },\r\n                            { value: '2m', label: '2 months' },\r\n                            { value: '3m', label: '3 months' },\r\n                            { value: '6m', label: '6 months' },\r\n                            { value: '1y', label: '1 year' },\r\n                            { value: '2y', label: '2 years' },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: 'relativeEnd',\r\n                        name: 'relativeEnd',\r\n                        default: 'now',\r\n                        hidden: data => !data.history_oid,\r\n                        type: 'select',\r\n                        options: [\r\n                            { value: 'now', label: 'now' },\r\n                            { value: '1minute', label: 'end of minute' },\r\n                            { value: '5minutes', label: 'end of 5 minutes' },\r\n                            { value: '10minutes', label: 'end of 10 minutes' },\r\n                            { value: '30minutes', label: 'end of 30 minutes' },\r\n                            { value: '1hour', label: 'end of hour' },\r\n                            { value: '2hours', label: 'end of 2 hours' },\r\n                            { value: '3hours', label: 'end of 3 hours' },\r\n                            { value: '4hours', label: 'end of 4 hours' },\r\n                            { value: '6hours', label: 'end of 6 hours' },\r\n                            { value: '8hours', label: 'end of 8 hours' },\r\n                            { value: '12hours', label: 'end of 12 hours' },\r\n                            { value: 'today', label: 'end of day' },\r\n                            { value: 'weekEurope', label: 'end of sunday' },\r\n                            { value: 'weekUsa', label: 'end of saturday' },\r\n                            { value: 'month', label: 'this month' },\r\n                            { value: 'year', label: 'this year' },\r\n                        ],\r\n                    },\r\n                    // {\r\n                    //     label: 'start',\r\n                    //     name: 'start',\r\n                    //     default: '',\r\n                    //     hidden: data => !data.history_oid,\r\n                    // },\r\n                    // {\r\n                    //     label: 'end',\r\n                    //     name: 'end',\r\n                    //     default: '',\r\n                    //     hidden: data => !data.history_oid,\r\n                    // },\r\n                    // {\r\n                    //     label: 'start_time',\r\n                    //     name: 'start_time',\r\n                    //     default: '',\r\n                    //     hidden: data => !data.history_oid,\r\n                    // },\r\n                    // {\r\n                    //     label: 'end_time',\r\n                    //     default: '',\r\n                    //     name: 'end_time',\r\n                    //     hidden: data => !data.history_oid,\r\n                    // },\r\n                ],\r\n            }],\r\n            visDefaultStyle: {\r\n                width: '100%',\r\n                height: 300,\r\n                position: 'relative',\r\n            },\r\n            visPrev: 'widgets/echarts/img/prev_echarts.png',\r\n        };\r\n    }\r\n\r\n    // eslint-disable-next-line class-methods-use-this\r\n    getWidgetInfo() {\r\n        return Echarts.getWidgetInfo();\r\n    }\r\n\r\n    static getDefaultLine(systemSettings, instance, obj, language) {\r\n        const isBoolean = obj && obj.common && obj.common.type === 'boolean';\r\n\r\n        const line = {\r\n            name:       ((obj && obj.common && obj.common.name && Utils.getObjectNameFromObj(obj, null, { language })) || '').trim(),\r\n            id:         obj ? obj._id : '',\r\n            instance:   instance === systemSettings.common.defaultHistory ? '' : instance || '',\r\n            thickness:  2,\r\n            chartType:  isBoolean ? 'steps'    : 'line',\r\n            aggregate:  isBoolean ? 'onchange' : 'minmax',\r\n            isBoolean,\r\n            symbolSize: 3,\r\n            validTime:  35, // 35 seconds\r\n        };\r\n\r\n        if (obj && obj.common && obj.common.color) {\r\n            line.color = obj.common.color;\r\n        }\r\n        if (obj && obj.common && obj.common.unit) {\r\n            line.unit = obj.common.unit;\r\n        }\r\n        if (isBoolean) {\r\n            line.yaxe = 'off';\r\n            line.min = '0';\r\n            line.yticks = 1;\r\n            line.fill = 0.3;\r\n            line.symbolSize = 1;\r\n        }\r\n\r\n        return line;\r\n    }\r\n\r\n    loadChartParam(name, def) {\r\n        const val = this.state.rxData[name];\r\n        if (val === undefined || val === null) {\r\n            return def;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    async propertiesUpdate() {\r\n        if (this.state.rxData.history_oid && this.state.rxData.history_instance) {\r\n            this.setState({ presetData: await this.createChartFromLine() });\r\n        } else if (this.state.presetData) {\r\n            this.setState({ presetData: null });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n        window.addEventListener('message', this.onReceiveMessage, false);\r\n        await this.propertiesUpdate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('message', this.onReceiveMessage, false);\r\n    }\r\n\r\n    onRxDataChanged() {\r\n        this.propertiesUpdate();\r\n    }\r\n\r\n    async createChartFromLine() {\r\n        this.systemConfig = this.systemConfig || (await this.props.context.socket.getObject('system.config'));\r\n        if (!this.object || this.object._id !== this.state.rxData.history_oid) {\r\n            this.object = await this.props.context.socket.getObject(this.state.rxData.history_oid);\r\n        }\r\n\r\n        const lines = [Echarts.getDefaultLine(this.systemConfig, this.state.rxData.history_instance, this.object, I18n.getLanguage())];\r\n\r\n        lines[0].xticks = this.loadChartParam('xticks', '');\r\n        lines[0].yticks = this.loadChartParam('yticks', '');\r\n\r\n        return  {\r\n            marks:          [],\r\n            lines,\r\n            zoom:           true,\r\n            hoverDetail:    true,\r\n            aggregate:      this.loadChartParam('aggregate', 'minmax'),\r\n            chartType:      this.loadChartParam('chartType', 'auto'),\r\n            live:           this.loadChartParam('live', '30'),\r\n            timeType:       this.loadChartParam('timeType', 'relative'),\r\n            aggregateType:  this.loadChartParam('aggregateType', 'step'),\r\n            aggregateSpan:  this.loadChartParam('aggregateSpan', '300'),\r\n            ticks:          this.loadChartParam('ticks', ''),\r\n            range:          this.loadChartParam('range', '1440'),\r\n            relativeEnd:    this.loadChartParam('relativeEnd', 'now'),\r\n            start:          this.loadChartParam('start', ''),\r\n            end:            this.loadChartParam('end', ''),\r\n            start_time:     this.loadChartParam('start_time', ''),\r\n            end_time:       this.loadChartParam('end_time', ''),\r\n            noBorder:       'noborder',\r\n            noedit:         false,\r\n            animation:      0,\r\n            legend:         '',\r\n        };\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message && message.data === 'chartReady') {\r\n            this.ready = true;\r\n            if (this.state.presetData) {\r\n                this.lastPresetData = JSON.stringify(this.state.presetData);\r\n                this.refIframe.contentWindow?.postMessage(this.lastPresetData, '*');\r\n                console.log('Received ready from iframe');\r\n            }\r\n        }\r\n    };\r\n\r\n    renderWidgetBody(props) {\r\n        super.renderWidgetBody(props);\r\n        let content;\r\n        if ((!this.state.rxData.echart_oid || this.state.rxData.echart_oid === 'nothing_selected') && !this.state.presetData) {\r\n            content = <div\r\n                style={{\r\n                    padding: 8,\r\n                    width: 'calc(100% - 16px)',\r\n                    height: 'calc(100% - 16px)',\r\n                    backgroundColor: this.state.rxData.noChartBackground ? undefined : (this.props.context.themeType === 'dark' ? 'rgb(31, 31, 31)' : '#f0f0f0'),\r\n                }}\r\n            >\r\n                {I18n.t('echarts_chart_not_selected')}\r\n            </div>;\r\n        } else {\r\n            const presetJson = JSON.stringify(this.state.presetData);\r\n            if (this.ready && this.lastPresetData !== presetJson) {\r\n                this.lastPresetData = presetJson;\r\n                this.refIframe.contentWindow?.postMessage(this.lastPresetData, '*');\r\n            }\r\n\r\n            content = <iframe\r\n                ref={el => this.refIframe = el}\r\n                title={this.state.rxData.echart_oid || this.state.rxData.history_oid}\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    border: 0,\r\n                }}\r\n                src={this.state.rxData.echart_oid ?\r\n                    `../echarts/index.html?preset=${this.state.rxData.echart_oid}&noBG=${this.state.rxData.noChartBackground || !this.state.rxData.noCard}` :\r\n                    `../echarts/index.html?noBG=${this.state.rxData.noChartBackground || !this.state.rxData.noCard}&edit=true`}\r\n            />;\r\n        }\r\n\r\n        if (!this.state.rxData.noCard) {\r\n            return this.wrapContent(content);\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nEcharts.propTypes = {\r\n    context: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    style: PropTypes.object,\r\n    data: PropTypes.object,\r\n};\r\n\r\nexport default Echarts;\r\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["ChartSelector","props","charts","setCharts","useState","useEffect","context","socket","getObjectViewSystem","then","res","presets","Object","values","forEach","preset","_id","toString","endsWith","push","items","id","parts","split","length","shift","path","p","join","find","pr","name","level","sort","a","b","localeCompare","_jsxs","Select","style","width","value","data","field","onChange","e","target","setData","renderValue","substring","variant","children","_jsx","MenuItem","I18n","t","map","chart","disabled","paddingLeft","display","paddingRight","ChartIcon","FolderIcon","Echarts","window","visRxWidget","constructor","super","onReceiveMessage","message","_this$refIframe$conte","this","ready","state","presetData","lastPresetData","JSON","stringify","refIframe","contentWindow","postMessage","console","log","React","getWidgetInfo","visSet","visSetLabel","visSetColor","visWidgetLabel","visName","visAttrs","fields","label","type","default","hidden","noCard","history_instance","history_oid","component","selectedWidgets","selectedView","echart_oid","adapter","filter","common","custom","options","chartType","noTranslation","min","max","visDefaultStyle","height","position","visPrev","getDefaultLine","systemSettings","instance","obj","language","isBoolean","line","Utils","getObjectNameFromObj","trim","defaultHistory","thickness","aggregate","symbolSize","validTime","color","unit","yaxe","yticks","fill","loadChartParam","def","val","rxData","undefined","propertiesUpdate","setState","createChartFromLine","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","onRxDataChanged","systemConfig","getObject","object","lines","getLanguage","xticks","marks","zoom","hoverDetail","live","timeType","aggregateType","aggregateSpan","ticks","range","relativeEnd","start","end","start_time","end_time","noBorder","noedit","animation","legend","renderWidgetBody","content","presetJson","_this$refIframe$conte2","ref","el","title","border","src","noChartBackground","padding","backgroundColor","themeType","wrapContent","propTypes","PropTypes","f","require","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","__self","__source","q","c","g","d","h","call","defaultProps","$$typeof","_owner","current","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}